(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    currentUser = JSON.parse(localStorage.currentUser)
    _id = Date.now()
    data =  {
      name : $('#listTitle').val().trim(),
      user : appConfig.pointer('_User', currentUser.objectId),
      user_company: Parse._user_company,
      count: 0,
      tmp: _id
    }
    console.log(data)

    thiss = this;
    listClassName = (this.props.listClassName) ? this.props.listClassName : 'ProspectList'
    var _this = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName,
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) { 
        console.log(res) 
        console.log("should be updating")
        _this.props.updateList(_id, res.objectId)
      },
      error: function(err) { console.log(err) }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Create List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "listTitle", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createListButtonClick, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Create List")
                  )

                )
              )
            )
          )
    );
  }
});


},{}]},{},[1])


},{}],2:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  deleteList: function() {
    this.props.deleteList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-deleteList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-trash-o"}), "  Delete List?")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({className: "deleteForm", onSubmit: this.deleteList}, 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-danger", 
                      style: {display:'block', width:'100%'}}, 
                      "Delete"
                    ), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-default", 
                      style: {display:'block', width:'100%'}}, 
                      "Cancel"
                    )
                  )

                )
              )
            )
          )
    );
  }
});


},{}]},{},[1])


},{}],3:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //Messenger
  render: function() {
    return (
        React.DOM.div({className: "alert alert-success", 
             'data-alert': "alert", 
             style: {position:'absolute',
                     top: 31, 
                     right:30, 
                     display:'none',
                     width:200}}, 
                     React.DOM.a({className: "close", 
                       href: "javascript:", 
                       onClick: this.hideAlert}, "×"), 
            "Test"
        )
    );
  }
});

},{}]},{},[1])


},{}],4:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  renameList: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newListName = $('#newListName').val()
    if(newListName.trim() != "")
      this.props.renameList(newListName)
    // Disable Modal
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-renameList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Rename List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.renameList}, 
                    React.DOM.input({id: "newListName", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.renameList, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create List"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}]},{},[1])


},{}],5:[function(require,module,exports){
/** @jsx React.DOM */

var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var CreateListModal = require('./create_list_modal.js.min.js')
var Messenger = require('./messenger.js.min.js')

var DeleteListModal = require('./delete_list_modal.js.min.js')
var RenameListModal = require('./rename_list_modal.js.min.js')
var SideMenuListOption = require('./user_side_menu_list.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  //SideMenuProspects - SideList
  getInitialState: function() {
    return {
      /*
      createList: 
      renameList:
      deleteList:
      changeList:
      currentList:
      totalCount:
      lists:

      */
     lists: [],
    }
  },

  createList: function (data) {
    this.props.createList(data)
  },

  componentDidUpdate: function() {
    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('move-objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },

  componentDidMount: function() {
    var _this = this;
    Parse.get(this.props.listClassName, { order: '-createdAt'}).done(function(res) {
      _this.setState({lists: res.results})
    })

    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },
  
  removeSelectedProspects: function() {
    // remove selected from list
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    _list = Parse._pointer(this.props.listClassName, this.state.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [_list] } }
    if(this.state.currentList == 'All'){ body = { archived: true } }
    Parse.batchUpdate('Prospect', selectedProspects, body)
    // Update List Counts
    //
  },

  moveSelectedProspects: function(_list) {
    // move to list
    // only if the current list is not all
    // remove prospects from currentList
    if(!this.props.currentListObjectId){ console.log('not supported'); return 0}
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    old_list = Parse._pointer(this.props.listClassName, this.props.currentListObjectId)
    new_list = Parse._pointer(this.props.listClassName, _list)
    this.props.removeProspects(selectedProspects)

    var _this = this;
    console.log(_list)
    console.log(this.props.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [old_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: -1*selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _this.props.currentListObjectId)
          item.count = item.count - amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })

    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
          item.count = (item.count) ? item.count + amount : amount
        return item
      })
      //console.log(lists)
      _this.setState({lists: lists})
    })
    // Update List Counts
  },

  copySelectedProspects: function(_list) {
    // TODO - check to see if prospect exists in the other list
    // TODO - Remove from selected prospects If prospects already exist in list do not increment
    console.log('update')
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    new_list = Parse._pointer(this.props.listClassName, _list)
    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    console.log(body)

    //

    var _this = this;
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function(res) {
      console.log(res)
      // if success
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
            item.count = (item.count) ? item.count + amount : amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })
  },

  changeList: function(e) {
    /*
    currentList = $(e.target).parent()//.data('list')
    console.log(currentList)
    this.props.changeList(currentList.name, currentList.objectId)
    */
  },

  render: function() {
    if(this.props.currentList == "All")
      styles = {'backgroundColor':'rgb(0, 122, 255)', 'color':'white'} 
    else
      styles =  {}

    lists = [SideMenuListOption({list: {name: 'All', count: this.props.totalCount}, 
                                 iconType: 'users', 
                                 changeList: this.props.changeList}), 
             SideMenuListOption({list: {name: 'Archived', count: '~'}, 
                                 iconType: 'archive', 
                                 changeList: this.props.changeList, 
                                 hideCount: true})]

    for(i=0;i< this.state.lists.length;i++){
      list = this.state.lists[i]
      if(list.list_type == "signal_list")
        iconType = "wifi"
      else if (list.list_type == "mining_job")
        iconType = "cloudDownload"
      if(list.list_type)
        lists.push(SideMenuListOption({list: list, 
                                       iconType: iconType, 
                                       changeList: this.props.changeList}))
      else 
        lists.push(SideMenuListOption({list: list, 
                                       changeList: this.props.changeList}))
    }

    return (
      React.DOM.div({className: "col-lg-2 col-md-2 col-sm-2 col-xs-2", 
           style: {padding:'0',height:'438px',backgroundColor:'#e0e9ee',
                   borderRight:'1px solid #b0b8bf',textAlign:'center'}}, 
                   React.DOM.div({className: "prospect-list-header", style: {paddingLeft:10, textAlign:'center'}}, 
                     "Lists"

                   ), 
        React.DOM.div({className: "btn-group-vertical", 
             style: {width:'100%', height: '320px', overflow: 'auto'}}, 
          lists
        ), 
        React.DOM.br(null), React.DOM.br(null), 
        React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
              'data-toggle': "modal", 'data-target': ".bs-example-modal-sm", 
              style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
          React.DOM.i({className: "fa fa-plus-circle"}), "  New List"
        ), 
        CreateListModal({createList: this.createList, 
                         updateList: this.updateList, 
                         listClassName: this.props.listClassName}), " ", React.DOM.br(null)
      )
    );
  },

  createList: function(data) { 
    this.setState({ lists: [data].concat(this.state.lists) }) 
  },

  updateList: function(_id, objId) {
    updated = _.map(this.state.lists, function(list) {
      if(list.tmp == _id)
          list.objectId = objId
      return list
    })
    console.log("update broski")
    this.setState({lists: updated})
  },

  renameList: function(newListName) {
    thiss = this;
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.name == thiss.state.currentList) {
        item.name = newListName
        return item
      }
      return item
    });

    this.setState({lists : filtered, currentList: newListName})

    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    Parse.update(this.props.listClassName, {'name':newListName})
  },

  deleteList: function() {
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.objectId == thiss.state.currentListObjectId)
        return false
      return true
    });

    this.setState({lists: filtered, currentList: 'All'})
    this.changeList('All', '')

    appConfig.closeModal(); 
    $('#newListName').val('');
    Parse.delete(this.props.listClassName+'/'+this.state.currentListObjectId);
  },
});

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == $(e.target).text()
    });

    this.props.moveSelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
            className: "dropdown-list-name", 
            href: "javascript:", 
            onClick: this.listAction}, this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:-23,top:27}}, 
        lists
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.copySelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               className: "dropdown-list-name", 
               href: "javascript:", 
               onClick: this.listAction}, 
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {width:114,right:-71,top:27}}, 
        lists
      )
    );
  }
});

},{"./create_list_modal.js.min.js":1,"./delete_list_modal.js.min.js":2,"./messenger.js.min.js":3,"./rename_list_modal.js.min.js":4,"./user_side_menu_list.js.min.js":6}],6:[function(require,module,exports){
/** @jsx React.DOM */
//TODO - move list
//TODO - copy list
//TODO - create new list

module.exports = React.createClass({displayName: 'exports',
  //SideMenuListOption
  getInitialState: function() {
    return {
      count: '~',
    }
  },


  componentDidMount: function() {
  },

  changeList: function() {
    this.props.changeList(this.props.list.name, this.props.list.objectId)
  },

  getIconType: function(iconType) {
    icon = ""
    if(iconType == "archive"){
      icon = React.DOM.i({className: "fa fa-archive", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "users"){
      icon = React.DOM.i({className: "fa fa-user", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "wifi"){
      icon = React.DOM.i({className: "fa fa-wifi", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "cloudDownload"){
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {float:'left',lineHeight:1.5,marginRight:5}})
    }
    return icon
  },

  render: function() {
    listName = this.props.list.name
    propsCount = this.props.count
    count = (typeof(propsCount)== "undefined") ? this.state.count : propsCount

    icon = ""
    listStyle=(icon == "") ? "list-name" : "icon-list-name"
    if(this.props.iconType == "users")
      listStyle = "all-list-name" 
    count = React.DOM.div({className: "badge badge-default cnt-bg"}, this.props.list.count)
    count = (this.props.hideCount) ? "" : count
    return (
      React.DOM.button({type: "button", 
              onClick: this.changeList, 
              className: "list-names btn btn-default"}, 
              icon, "   ", React.DOM.span({className: listStyle}, listName), " ", count
      )
    );
  }
});


},{}]},{},[5])
//# sourceMappingURL=data:application/json;base64,
