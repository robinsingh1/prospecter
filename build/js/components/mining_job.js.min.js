/** @jsx React.DOM */

var LoadingSpinner = require('./loading_spinner.js.min.js')

var Job = React.createClass({displayName: 'Job',
  startJob: function() {
    // Add Linkedin Locations
    // Email When Completed
    // Have Report For Number of Profiles Found / number of emails found per mining job
    
    miningJob = this.props.miningJob
    miningJob.status = "Running"
    miningJob.last_ran = Math.round(+new Date()/1000)

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      // status should be waiting
      data : JSON.stringify({'status':'Running', 'last_ran':Math.round(+new Date()/1000)+"" }),
      success: function(res) {
        console.log(res)
        // make request to heroku api
        $.ajax({
          //url: 'https://0.0.0.0:5000/mining_job' ,
          url: 'http://agile-plains-2430.herokuapp.com/mining_job' ,
          //type:'POST',
          crossDomain: true,
          data:{'locale':miningJob.locale, 
                'current_title':miningJob.prospect_title,
                'current_user_id':JSON.parse(localStorage.currentUser).objectId,
                'company_id':JSON.parse(localStorage.currentUser).company.objectId,
                'mining_job_id':miningJob.objectId},
          success: function(res) {
            console.log(res)
          },
          error: function(err) {
            console.log(err)
          }
        })
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.setState({miningJob: miningJob})
  },

  deleteJob: function() {
    //console.log(this.state.miningJob)
    this.props.deleteJob(this.state.miningJob)
      /*
    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+this.state.miningJob.objectId,
      type:'DELETE',
      headers: appConfig.parseHeaders,
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
      */
  },

  cancelJob: function() {
    miningJob = this.state.miningJob
    miningJob.status = ""

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      data : JSON.stringify({'status':''}),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
    this.setState({miningJob: miningJob})
  },

  render: function(){
    miningJob = this.props.miningJob
    button = (miningJob.status == "") ? React.DOM.a({href: "javascript:", className: "btn btn-xs btn-success", onClick: this.startJob}, " ", React.DOM.i({className: "fa fa-check"}), " Run ") : React.DOM.a({href: "javascript:", className: "btn btn-xs btn-danger", onClick: this.cancelJob}, " ", React.DOM.i({className: "fa fa-times"}), " Cancel ")

    disabled = ""
    disabled_trash = ""
    /*
    disabled = (miningJob.status == "") ? "btn btn-xs btn-success" : "btn btn-xs btn-success disabled"
    disabled_trash = (miningJob.status == "") ? "btn btn-xs btn-default" :  "btn btn-xs btn-default disabled"
    button = <a href="javascript:" className={disabled} onClick={this.startJob}> <i className="fa fa-check" />&nbsp;Run </a> 
    */

    //console.log(miningJob)
    return (
      React.DOM.tr(null, 
        React.DOM.td(null, React.DOM.h6(null, miningJob.prospect_title)), 
        React.DOM.td(null, React.DOM.h6(null, miningJob.locale)), 
        React.DOM.td(null, React.DOM.h6(null, (miningJob.last_ran == "" ) ? "----" : moment.unix(miningJob.last_ran).fromNow())), 
        React.DOM.td(null, 
          React.DOM.span({className: "badge"}, 
            (miningJob.results == "") ? 0 : miningJob.results
          ), " ",  
          React.DOM.h6({style: {display:'inline-block'}}, "profiles found")
        ), 
        React.DOM.td({style: {paddingTop:'12px'}}, 
          React.DOM.span({className: (miningJob.status == "" ) ? "label label-primary" : "label label-success"}, 
            (miningJob.status == "") ? "Ready" : miningJob.status
          )
        ), 
        React.DOM.td({style: {paddingTop:'13px',width:'105px'}}, 
          button, 
          " ", 
          React.DOM.a({href: "javascript:", className: disabled_trash, 
                  onClick: this.deleteJob}, 
            React.DOM.i({className: "fa fa-trash-o"})
          )
        )
      )
    );
  }
});


module.exports = React.createClass({displayName: 'exports',
  // Mining Jobs
  //{(prospects.length == 0 && this.state.loading == false) ? <EmptyCompanyProspectsPanel /> : ""}
  getInitialState: function() {
    return { 
      miningJobs : [],
      loading    : true
    }
  },

  deleteJob: function(job) {
    //console.log(job.objectId)
    var filtered = _.filter(this.state.miningJobs, function(item) {
       console.log(item.objectId != job.objectId)
       return item.objectId != job.objectId
    });
    //console.log(filtered)
    this.setState({miningJobs: filtered})
  },

  render: function () {
    //console.log('render')
    miningJobs = []
    for(i=0;i<this.state.miningJobs.length;i++){
      miningJob = this.state.miningJobs[i]
      miningJobs.push(
        Job({deleteJob: this.deleteJob, miningJob: miningJob})
      )
    }

    return (
      React.DOM.div(null, 
      React.DOM.div({className: "mining-job-toolbar container", style: {width:'100%'}}, 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Prospects By Title and Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Hiring For Roles"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Who Just Raised Funding"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies By Industy And Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Press Coverage"
        )
    ), 
      React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Job Title"), 
            React.DOM.th(null, "City"), 
            React.DOM.th(null, "Last Ran"), 
            React.DOM.th(null, "Results"), 
            React.DOM.th(null, "Status"), 
            React.DOM.th(null, " ")
          ), 
          React.DOM.tbody(null, 
            miningJobs
          )
        ), 
          (this.state.loading) ? LoadingSpinner(null) : "", 
        createJobModal({createJob: this.createJob})
      )
      )
    );
  },
  
  runMiningJob: function() {

  },

  createJob: function(data) {
    miningJobs = this.state.miningJobs
    miningJobs.push(data)
    this.setState({ miningJobs: miningJobs })

    $('#miningJobModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  componentDidMount: function() {
    console.log('this did mount')
    thiss = this;
    qry = 'where={"company":'+company+'}&count=1&order=-createdAt'
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'GET',
      headers: appConfig.parseHeaders,
      data: qry,
      success: function(res) {
        thiss.setState({miningJobs : res.results})
        thiss.setState({loading    : false})
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  }

});

var createJobModal = React.createClass({displayName: 'createJobModal',
  createMiningJob: function() {
    console.log('mining job')
    console.log($('#prospectTitle').val())
    console.log($('#locale').val())

    data =  {
      'prospect_title': $('#prospectTitle').val(),
      'locale'        : $('#locale').val(),
      'last_ran'      : '',
      'results'       : '',
      'status'        : '',   //Waiting , Running
    }
    //  update local jobs state
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.props.createJob(data)
    
    //$('button.close').click()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "miningJobModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-bolt"}), "  Create Mining Job")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "prospectTitle", type: "text", placeholder: "Enter prospect title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.input({id: "locale", type: "text", placeholder: "Enter City Area...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createMiningJob, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Start Mining!")
                  )

                )
              )
            )
          )
    );
  }
});

var EmptyMiningJob = React.createClass({displayName: 'EmptyMiningJob',
  render: function() {
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-success", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
            "Search for companies!")
        )
      )
    )
    );
  }
});
