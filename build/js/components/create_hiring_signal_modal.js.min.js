(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // CreateHiringSignalModal
  createSignal: function() {
    profileName = $('.hiring-profile-name').val()
    autoProspect = $('.autoprospect > .active').text() ==  " Yes"

    hiringProfile = {
      'className': 'HiringProfile',
      'roles'    : $('.hiring-roles').tagsinput('items')
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#hiring-revenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() })
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#hiring-employeeBtns').find('.active'), 
                         function(empBtn){ return $(empBtn).text().trim() })
    }

    prospectProfile = {
      'className':'ProspectTitleProfile',
      'title_keywords' : $('.prospectRoleKeywords').tagsinput('items')
    }

    profiles = [hiringProfile, revenueProfile, 
                employeeProfile, prospectProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });


    newProfile = {
      name: profileName,
      autoProspect: autoProspect,
      profiles: nonemptyProfiles,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createHiringSignalModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Hiring Signal"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createSignal, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Signal"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  }
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)
  },

  render: function(){
    addCompany = (!this.state.addCompany) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleCompany, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Company Details"
                                        ) : CompanyProfile({hideCompanyDetails: this.state.hideCompanyDetails})

    addProspect = (!this.state.addProspect) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleProspect, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Prospect Details"
                                        ) : ProspectProfile({hideProspectDetails: this.state.hideProspectDetails})
    addCompanyStyle = (!this.state.addCompany) ? {display:'block',textAlign:'center'} : {}
    addProspectStyle = (!this.state.addProspect) ? {display:'block',textAlign:'center'} : {}

    closeCompanyBtns = (!this.state.addCompany) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleCompany, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
                  onClick: this.toggleCompanyDetails, 
                  style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideCompanyDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    closeProspectBtns = (!this.state.addProspect) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspect, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspectDetails, 
               style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideProspectDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    companyHeading = (!this.state.addCompany) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-building"}), "  Company Details")
    prospectHeading = (!this.state.addProspect) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-user"}), "  Prospect Details")
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Hiring Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'413px'}, 
                   className: "form-control hiring-profile-name", 
                   placeholder: "Hiring Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Hiring Role Name:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'50%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role hiring-roles"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.div({style: {marginTop:10}}, 
          React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
          React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
            React.DOM.label({className: "btn btn-sm btn-default active"}, 
              React.DOM.input({type: "radio"}), " Yes"
            ), 
            React.DOM.label({className: "btn btn-sm btn-default"}, 
              React.DOM.input({type: "radio"}), " No"
            )
          )
          ), 
          React.DOM.hr(null), " ", closeCompanyBtns, " ", companyHeading, 
          React.DOM.div({style: addCompanyStyle}, " ", addCompany, " "), 

          React.DOM.hr(null), " ", closeProspectBtns, " ", prospectHeading, 
          React.DOM.div({style: addProspectStyle}, " ", addProspect, " ")
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    showDetails = (this.props.hideCompanyDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.companyFormSubmit}, 
          React.DOM.br(null), 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-employeeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            ), 

            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Revenue Amount "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-revenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
        )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })

    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )

        )
      )
    )
  }
})

/*
  Funding Profile
  - Amount Raised
  - Stage

  People Profile
  - Locale
  - Title

  Company Profile
  - Industries
  - Revenue
  - Locale
  - # of Employees
*/

var GeneralForm = React.createClass({displayName: 'GeneralForm',

  render: function() {
    return (
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-suitcase"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Find Companies Hiring For ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-users"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Number of Employees ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-institution"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Amount of Funding ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-money"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Revenue Amount ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-wrench"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Using Technologies Such As..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.a({href: "javascript:", 
            onClick: this.createSignal, 
            className: "btn btn-default btn-success", 
            style: {display:'block', width:'100%'}}, 
            "Create Signal"
          )
        )
    )
  }
})

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
