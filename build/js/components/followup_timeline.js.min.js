(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // FollowupTimeline
  getInitialState: function() {
    return {
      loading: false,
    }
  },

  componentDidMount: function() {
    thiss = this;
    $('.day').tooltip()
    $('.day-popover').popover({
      html: true,
      content: '<h6 style="width:130px;display:inline-block;"><i class="fa fa-file-text-o" ></i>&nbsp;&nbsp;Example Template</h6><button class="win-btn btn btn-success btn-xs"><i class="fa fa-paper-plane"></i>&nbsp;Send</button>&nbsp;<button class="win-btn btn btn-default btn-xs"><i class="fa fa-pencil"></i></button>&nbsp;<button class="win-btn btn btn-default btn-xs"><i class="fa fa-trash-o"></i></button>'
    })

    $('.day-popover').popover('show')
    $('.win-btn').click(function() {
      //console.log('clicked win btn')
    });

    // Followups that belong to campaign
     company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
     currentCampaign = {
       '__type': 'Pointer',
       'className':'Campaign',
       'objectId':this.props.currentCampaign.objectId
     }
     currentCampaign = JSON.stringify(currentCampaign)
     //qry = 'where={"company":'+company+',"campaign":'+currentCampaign+'}&include=template'
     qry = 'where={"campaign":'+currentCampaign+'}&include=template'
     $.ajax({
       url:'https://api.parse.com/1/classes/Followup',
       type:'GET',
       headers: appConfig.headers,
       data: qry,
       success: function(res) {
         console.log(res.results)
       },
       error: function(err) {
         console.log('error')
         console.log(err)
       }
     })
  },
  
  render: function() {
    //console.log(this.props.followups)
    timelineElements = []
    for(i=0;i< 31;i++){
      for(ii=0;ii< this.props.followups.length; ii++){
        elementType = i == this.props.followups[ii].day
        if(elementType)
          break
      }
      timelineElements.push(TimelineDayElement({
                              dayCount: i, 
                              elementType: !elementType, 
                              toggleTemplateEditMenu: this.toggleTemplateEditMenu}))
    }
    return (
      React.DOM.div(null, 
          React.DOM.div({className: "timeline", 
               style: {height:'900px',backgroundColor:'rgb(90, 107, 119)',width:5}}, 
               timelineElements
          )
      )
    );
  }
});

var TimelineDayElement = React.createClass({displayName: 'TimelineDayElement',
  render: function() {
    timelineDay = "lol"
    if(this.props.elementType) {
      timelineDay = React.DOM.div({className: "day", 
                         onClick: this.props.toggleTemplateEditMenu, 
                         'data-toggle': "tooltip", 
                         'data-placement': "right", 
                         title: "+ Add a follow-up"}, "D"+this.props.dayCount)
    } else {
      timelineDay = React.DOM.div({className: "day day-popover", 
                         onClick: this.props.toggleTemplateEditMenu, 
                         'data-toggle': "popover", 
                         'data-trigger': "manual", 
                         'data-placement': "right"}, "D"+this.props.dayCount, " ")
    }
    return (
      React.DOM.div(null, 
      timelineDay
      )
    )
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvZm9sbG93dXBfdGltZWxpbmUuanMubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKX12YXIgZj1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxmLGYuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoqIEBqc3ggUmVhY3QuRE9NICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiAnZXhwb3J0cycsXG4gIC8vIEZvbGxvd3VwVGltZWxpbmVcbiAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgfVxuICB9LFxuXG4gIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzcyA9IHRoaXM7XG4gICAgJCgnLmRheScpLnRvb2x0aXAoKVxuICAgICQoJy5kYXktcG9wb3ZlcicpLnBvcG92ZXIoe1xuICAgICAgaHRtbDogdHJ1ZSxcbiAgICAgIGNvbnRlbnQ6ICc8aDYgc3R5bGU9XCJ3aWR0aDoxMzBweDtkaXNwbGF5OmlubGluZS1ibG9jaztcIj48aSBjbGFzcz1cImZhIGZhLWZpbGUtdGV4dC1vXCIgPjwvaT4mbmJzcDsmbmJzcDtFeGFtcGxlIFRlbXBsYXRlPC9oNj48YnV0dG9uIGNsYXNzPVwid2luLWJ0biBidG4gYnRuLXN1Y2Nlc3MgYnRuLXhzXCI+PGkgY2xhc3M9XCJmYSBmYS1wYXBlci1wbGFuZVwiPjwvaT4mbmJzcDtTZW5kPC9idXR0b24+Jm5ic3A7PGJ1dHRvbiBjbGFzcz1cIndpbi1idG4gYnRuIGJ0bi1kZWZhdWx0IGJ0bi14c1wiPjxpIGNsYXNzPVwiZmEgZmEtcGVuY2lsXCI+PC9pPjwvYnV0dG9uPiZuYnNwOzxidXR0b24gY2xhc3M9XCJ3aW4tYnRuIGJ0biBidG4tZGVmYXVsdCBidG4teHNcIj48aSBjbGFzcz1cImZhIGZhLXRyYXNoLW9cIj48L2k+PC9idXR0b24+J1xuICAgIH0pXG5cbiAgICAkKCcuZGF5LXBvcG92ZXInKS5wb3BvdmVyKCdzaG93JylcbiAgICAkKCcud2luLWJ0bicpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgLy9jb25zb2xlLmxvZygnY2xpY2tlZCB3aW4gYnRuJylcbiAgICB9KTtcblxuICAgIC8vIEZvbGxvd3VwcyB0aGF0IGJlbG9uZyB0byBjYW1wYWlnblxuICAgICBjb21wYW55ID0gSlNPTi5zdHJpbmdpZnkoSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuY3VycmVudFVzZXIpLmNvbXBhbnkpXG4gICAgIGN1cnJlbnRDYW1wYWlnbiA9IHtcbiAgICAgICAnX190eXBlJzogJ1BvaW50ZXInLFxuICAgICAgICdjbGFzc05hbWUnOidDYW1wYWlnbicsXG4gICAgICAgJ29iamVjdElkJzp0aGlzLnByb3BzLmN1cnJlbnRDYW1wYWlnbi5vYmplY3RJZFxuICAgICB9XG4gICAgIGN1cnJlbnRDYW1wYWlnbiA9IEpTT04uc3RyaW5naWZ5KGN1cnJlbnRDYW1wYWlnbilcbiAgICAgLy9xcnkgPSAnd2hlcmU9e1wiY29tcGFueVwiOicrY29tcGFueSsnLFwiY2FtcGFpZ25cIjonK2N1cnJlbnRDYW1wYWlnbisnfSZpbmNsdWRlPXRlbXBsYXRlJ1xuICAgICBxcnkgPSAnd2hlcmU9e1wiY2FtcGFpZ25cIjonK2N1cnJlbnRDYW1wYWlnbisnfSZpbmNsdWRlPXRlbXBsYXRlJ1xuICAgICAkLmFqYXgoe1xuICAgICAgIHVybDonaHR0cHM6Ly9hcGkucGFyc2UuY29tLzEvY2xhc3Nlcy9Gb2xsb3d1cCcsXG4gICAgICAgdHlwZTonR0VUJyxcbiAgICAgICBoZWFkZXJzOiBhcHBDb25maWcuaGVhZGVycyxcbiAgICAgICBkYXRhOiBxcnksXG4gICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICBjb25zb2xlLmxvZyhyZXMucmVzdWx0cylcbiAgICAgICB9LFxuICAgICAgIGVycm9yOiBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicpXG4gICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgfVxuICAgICB9KVxuICB9LFxuICBcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAvL2NvbnNvbGUubG9nKHRoaXMucHJvcHMuZm9sbG93dXBzKVxuICAgIHRpbWVsaW5lRWxlbWVudHMgPSBbXVxuICAgIGZvcihpPTA7aTwgMzE7aSsrKXtcbiAgICAgIGZvcihpaT0wO2lpPCB0aGlzLnByb3BzLmZvbGxvd3Vwcy5sZW5ndGg7IGlpKyspe1xuICAgICAgICBlbGVtZW50VHlwZSA9IGkgPT0gdGhpcy5wcm9wcy5mb2xsb3d1cHNbaWldLmRheVxuICAgICAgICBpZihlbGVtZW50VHlwZSlcbiAgICAgICAgICBicmVha1xuICAgICAgfVxuICAgICAgdGltZWxpbmVFbGVtZW50cy5wdXNoKFRpbWVsaW5lRGF5RWxlbWVudCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXlDb3VudDogaSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VHlwZTogIWVsZW1lbnRUeXBlLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZVRlbXBsYXRlRWRpdE1lbnU6IHRoaXMudG9nZ2xlVGVtcGxhdGVFZGl0TWVudX0pKVxuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgUmVhY3QuRE9NLmRpdihudWxsLCBcbiAgICAgICAgICBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwidGltZWxpbmVcIiwgXG4gICAgICAgICAgICAgICBzdHlsZToge2hlaWdodDonOTAwcHgnLGJhY2tncm91bmRDb2xvcjoncmdiKDkwLCAxMDcsIDExOSknLHdpZHRoOjV9fSwgXG4gICAgICAgICAgICAgICB0aW1lbGluZUVsZW1lbnRzXG4gICAgICAgICAgKVxuICAgICAgKVxuICAgICk7XG4gIH1cbn0pO1xuXG52YXIgVGltZWxpbmVEYXlFbGVtZW50ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiAnVGltZWxpbmVEYXlFbGVtZW50JyxcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICB0aW1lbGluZURheSA9IFwibG9sXCJcbiAgICBpZih0aGlzLnByb3BzLmVsZW1lbnRUeXBlKSB7XG4gICAgICB0aW1lbGluZURheSA9IFJlYWN0LkRPTS5kaXYoe2NsYXNzTmFtZTogXCJkYXlcIiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogdGhpcy5wcm9wcy50b2dnbGVUZW1wbGF0ZUVkaXRNZW51LCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS10b2dnbGUnOiBcInRvb2x0aXBcIiwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtcGxhY2VtZW50JzogXCJyaWdodFwiLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCIrIEFkZCBhIGZvbGxvdy11cFwifSwgXCJEXCIrdGhpcy5wcm9wcy5kYXlDb3VudClcbiAgICB9IGVsc2Uge1xuICAgICAgdGltZWxpbmVEYXkgPSBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwiZGF5IGRheS1wb3BvdmVyXCIsIFxuICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMucHJvcHMudG9nZ2xlVGVtcGxhdGVFZGl0TWVudSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEtdG9nZ2xlJzogXCJwb3BvdmVyXCIsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLXRyaWdnZXInOiBcIm1hbnVhbFwiLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YS1wbGFjZW1lbnQnOiBcInJpZ2h0XCJ9LCBcIkRcIit0aGlzLnByb3BzLmRheUNvdW50LCBcIiBcIilcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIFJlYWN0LkRPTS5kaXYobnVsbCwgXG4gICAgICB0aW1lbGluZURheVxuICAgICAgKVxuICAgIClcbiAgfVxufSk7XG4iXX0=
