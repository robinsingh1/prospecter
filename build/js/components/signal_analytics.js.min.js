(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalAnalytics
  getInitialState: function() {
    return {
      reports : []
    }
  },

  componentDidMount: function() {


var margin = {top: 1, right: 1, bottom: 6, left: 1},
    width = 850 - margin.left - margin.right,
    height = 350 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(15)
    .nodePadding(10)
    .size([width, height]);

var path = sankey.link();

//d3.json("https://gist.githubusercontent.com/rsimba/33fbc755fa71e6aea446/raw/880345a16dbae39753682bb659249404a3820146/gistfile1.json", function(energy) {
//d3.json("https://gist.githubusercontent.com/rsimba/70d4d3393d33777f4c11/raw/228e30d788591b15d85f20f8baf2ccd50b79298c/gistfile1.json", function(energy) {
/*
url = "http://127.0.0.1:5000/v1/report/profile"
  */
url = "https://api.parse.com/1/classes/ProspectProfile/TjCZRfHB7N"
d3.json(url)
  .header("X-Parse-Application-Id", "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ")
  .header("X-Parse-REST-API-Key", "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb")
  .header("Content-Type", "application/json")
  .get(function(error, energy) {
    console.log(error)
    console.log(energy)
    energy = energy.sankey
  sankey
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(32);

  var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
      .text(function(d) { return d.source.name + " â†’ " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(energy.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      //.style("fill", function(d) { return d.color = color(d.name.replace(/ .*/, "")); })
      .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { return d.node + "\n" + d.value; });

  node.append("text")
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      //.text(function(d) { return d.name; })
      .text(function(d) { return d.name + "\n" + d.value; })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 6 + sankey.nodeWidth())
      .attr("text-anchor", "start");

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
});


  },
  
  render: function() {
    //TODO - add 2 pie charts for clearspark analysis
    return (
      React.DOM.div(null, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-pie-chart", style: {marginRight:5}}), 
                "Analytics -",  
                this.props.currentProfile.name
          )
        ), 
        React.DOM.div({id: "chart"})
      )
    )
  }
})

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvc2lnbmFsX2FuYWx5dGljcy5qcy5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKX12YXIgZj1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxmLGYuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoqIEBqc3ggUmVhY3QuRE9NICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiAnZXhwb3J0cycsXG4gIC8vIFNpZ25hbEFuYWx5dGljc1xuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXBvcnRzIDogW11cbiAgICB9XG4gIH0sXG5cbiAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuXG5cbnZhciBtYXJnaW4gPSB7dG9wOiAxLCByaWdodDogMSwgYm90dG9tOiA2LCBsZWZ0OiAxfSxcbiAgICB3aWR0aCA9IDg1MCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0LFxuICAgIGhlaWdodCA9IDM1MCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xuXG52YXIgZm9ybWF0TnVtYmVyID0gZDMuZm9ybWF0KFwiLC4wZlwiKSxcbiAgICBmb3JtYXQgPSBmdW5jdGlvbihkKSB7IHJldHVybiBmb3JtYXROdW1iZXIoZCkgKyBcIiBUV2hcIjsgfSxcbiAgICBjb2xvciA9IGQzLnNjYWxlLmNhdGVnb3J5MjAoKTtcblxudmFyIHN2ZyA9IGQzLnNlbGVjdChcIiNjaGFydFwiKS5hcHBlbmQoXCJzdmdcIilcbiAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpXG4gICAgLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pXG4gIC5hcHBlbmQoXCJnXCIpXG4gICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyBtYXJnaW4ubGVmdCArIFwiLFwiICsgbWFyZ2luLnRvcCArIFwiKVwiKTtcblxudmFyIHNhbmtleSA9IGQzLnNhbmtleSgpXG4gICAgLm5vZGVXaWR0aCgxNSlcbiAgICAubm9kZVBhZGRpbmcoMTApXG4gICAgLnNpemUoW3dpZHRoLCBoZWlnaHRdKTtcblxudmFyIHBhdGggPSBzYW5rZXkubGluaygpO1xuXG4vL2QzLmpzb24oXCJodHRwczovL2dpc3QuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3JzaW1iYS8zM2ZiYzc1NWZhNzFlNmFlYTQ0Ni9yYXcvODgwMzQ1YTE2ZGJhZTM5NzUzNjgyYmI2NTkyNDk0MDRhMzgyMDE0Ni9naXN0ZmlsZTEuanNvblwiLCBmdW5jdGlvbihlbmVyZ3kpIHtcbi8vZDMuanNvbihcImh0dHBzOi8vZ2lzdC5naXRodWJ1c2VyY29udGVudC5jb20vcnNpbWJhLzcwZDRkMzM5M2QzMzc3N2Y0YzExL3Jhdy8yMjhlMzBkNzg4NTkxYjE1ZDg1ZjIwZjhiYWYyY2NkNTBiNzkyOThjL2dpc3RmaWxlMS5qc29uXCIsIGZ1bmN0aW9uKGVuZXJneSkge1xuLypcbnVybCA9IFwiaHR0cDovLzEyNy4wLjAuMTo1MDAwL3YxL3JlcG9ydC9wcm9maWxlXCJcbiAgKi9cbnVybCA9IFwiaHR0cHM6Ly9hcGkucGFyc2UuY29tLzEvY2xhc3Nlcy9Qcm9zcGVjdFByb2ZpbGUvVGpDWlJmSEI3TlwiXG5kMy5qc29uKHVybClcbiAgLmhlYWRlcihcIlgtUGFyc2UtQXBwbGljYXRpb24tSWRcIiwgXCJOODVRT2t0ZUVFUWt1WlZKS0F2dDhNVmVzMHNqRzZxTnBFR3FRRlZKXCIpXG4gIC5oZWFkZXIoXCJYLVBhcnNlLVJFU1QtQVBJLUtleVwiLCBcIlZONkV3VnlCWndPMXVwaHNCUHNhdTh0N0pRUnAwMFVNM0tZc2lpUWJcIilcbiAgLmhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIilcbiAgLmdldChmdW5jdGlvbihlcnJvciwgZW5lcmd5KSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgY29uc29sZS5sb2coZW5lcmd5KVxuICAgIGVuZXJneSA9IGVuZXJneS5zYW5rZXlcbiAgc2Fua2V5XG4gICAgICAubm9kZXMoZW5lcmd5Lm5vZGVzKVxuICAgICAgLmxpbmtzKGVuZXJneS5saW5rcylcbiAgICAgIC5sYXlvdXQoMzIpO1xuXG4gIHZhciBsaW5rID0gc3ZnLmFwcGVuZChcImdcIikuc2VsZWN0QWxsKFwiLmxpbmtcIilcbiAgICAgIC5kYXRhKGVuZXJneS5saW5rcylcbiAgICAuZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAuYXR0cihcImNsYXNzXCIsIFwibGlua1wiKVxuICAgICAgLmF0dHIoXCJkXCIsIHBhdGgpXG4gICAgICAuc3R5bGUoXCJzdHJva2Utd2lkdGhcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gTWF0aC5tYXgoMSwgZC5keSk7IH0pXG4gICAgICAuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBiLmR5IC0gYS5keTsgfSk7XG5cbiAgbGluay5hcHBlbmQoXCJ0aXRsZVwiKVxuICAgICAgLnRleHQoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5zb3VyY2UubmFtZSArIFwiIOKGkiBcIiArIGQudGFyZ2V0Lm5hbWUgKyBcIlxcblwiICsgZm9ybWF0KGQudmFsdWUpOyB9KTtcblxuICB2YXIgbm9kZSA9IHN2Zy5hcHBlbmQoXCJnXCIpLnNlbGVjdEFsbChcIi5ub2RlXCIpXG4gICAgICAuZGF0YShlbmVyZ3kubm9kZXMpXG4gICAgLmVudGVyKCkuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm5vZGVcIilcbiAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgZC54ICsgXCIsXCIgKyBkLnkgKyBcIilcIjsgfSlcbiAgICAuY2FsbChkMy5iZWhhdmlvci5kcmFnKClcbiAgICAgIC5vcmlnaW4oZnVuY3Rpb24oZCkgeyByZXR1cm4gZDsgfSlcbiAgICAgIC5vbihcImRyYWdzdGFydFwiLCBmdW5jdGlvbigpIHsgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpOyB9KVxuICAgICAgLm9uKFwiZHJhZ1wiLCBkcmFnbW92ZSkpO1xuXG4gIG5vZGUuYXBwZW5kKFwicmVjdFwiKVxuICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5keTsgfSlcbiAgICAgIC5hdHRyKFwid2lkdGhcIiwgc2Fua2V5Lm5vZGVXaWR0aCgpKVxuICAgICAgLy8uc3R5bGUoXCJmaWxsXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuY29sb3IgPSBjb2xvcihkLm5hbWUucmVwbGFjZSgvIC4qLywgXCJcIikpOyB9KVxuICAgICAgLnN0eWxlKFwic3Ryb2tlXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQzLnJnYihkLmNvbG9yKS5kYXJrZXIoMik7IH0pXG4gICAgLmFwcGVuZChcInRpdGxlXCIpXG4gICAgICAudGV4dChmdW5jdGlvbihkKSB7IHJldHVybiBkLm5vZGUgKyBcIlxcblwiICsgZC52YWx1ZTsgfSk7XG5cbiAgbm9kZS5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAuYXR0cihcInhcIiwgLTYpXG4gICAgICAuYXR0cihcInlcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5keSAvIDI7IH0pXG4gICAgICAuYXR0cihcImR5XCIsIFwiLjM1ZW1cIilcbiAgICAgIC5hdHRyKFwidGV4dC1hbmNob3JcIiwgXCJlbmRcIilcbiAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIG51bGwpXG4gICAgICAvLy50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQubmFtZTsgfSlcbiAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQubmFtZSArIFwiXFxuXCIgKyBkLnZhbHVlOyB9KVxuICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC54IDwgd2lkdGggLyAyOyB9KVxuICAgICAgLmF0dHIoXCJ4XCIsIDYgKyBzYW5rZXkubm9kZVdpZHRoKCkpXG4gICAgICAuYXR0cihcInRleHQtYW5jaG9yXCIsIFwic3RhcnRcIik7XG5cbiAgZnVuY3Rpb24gZHJhZ21vdmUoZCkge1xuICAgIGQzLnNlbGVjdCh0aGlzKS5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKFwiICsgZC54ICsgXCIsXCIgKyAoZC55ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oaGVpZ2h0IC0gZC5keSwgZDMuZXZlbnQueSkpKSArIFwiKVwiKTtcbiAgICBzYW5rZXkucmVsYXlvdXQoKTtcbiAgICBsaW5rLmF0dHIoXCJkXCIsIHBhdGgpO1xuICB9XG59KTtcblxuXG4gIH0sXG4gIFxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIC8vVE9ETyAtIGFkZCAyIHBpZSBjaGFydHMgZm9yIGNsZWFyc3BhcmsgYW5hbHlzaXNcbiAgICByZXR1cm4gKFxuICAgICAgUmVhY3QuRE9NLmRpdihudWxsLCBcbiAgICAgICAgUmVhY3QuRE9NLmRpdih7c3R5bGU6IHtoZWlnaHQ6NDQsYm9yZGVyQm90dG9tOidzb2xpZCAxcHggcmdiKDIyMSwgMjIxLCAyMjEpJ319LCBcbiAgICAgICAgICBSZWFjdC5ET00uaDQoe29uQ2xpY2s6IHRoaXMucmV0dXJuVG9DYWxlbmRhclZpZXcsIFxuICAgICAgICAgICAgICBzdHlsZToge2ZvbnRXZWlnaHQ6MjAwLCBmbG9hdDonbGVmdCcsY3Vyc29yOidwb2ludGVyJyxtYXJnaW5Ub3A6NyxcbiAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdDoyMCxwYWRkaW5nVG9wOjUsIGRpc3BsYXk6J2lubGluZS1ibG9jayd9fSwgXG4gICAgICAgICAgICAgICAgUmVhY3QuRE9NLmkoe2NsYXNzTmFtZTogXCJmYSBmYS1waWUtY2hhcnRcIiwgc3R5bGU6IHttYXJnaW5SaWdodDo1fX0pLCBcbiAgICAgICAgICAgICAgICBcIkFuYWx5dGljcyAtXCIsICBcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmN1cnJlbnRQcm9maWxlLm5hbWVcbiAgICAgICAgICApXG4gICAgICAgICksIFxuICAgICAgICBSZWFjdC5ET00uZGl2KHtpZDogXCJjaGFydFwifSlcbiAgICAgIClcbiAgICApXG4gIH1cbn0pXG4iXX0=
