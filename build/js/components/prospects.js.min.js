(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    currentUser = JSON.parse(localStorage.currentUser)
    _id = Date.now()
    data =  {
      name : $('#listTitle').val().trim(),
      user : appConfig.pointer('_User', currentUser.objectId),
      user_company: Parse._user_company,
      count: 0,
      tmp: _id
    }
    console.log(data)

    thiss = this;
    listClassName = (this.props.listClassName) ? this.props.listClassName : 'ProspectList'
    var _this = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName,
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) { 
        console.log(res) 
        console.log("should be updating")
        _this.props.updateList(_id, res.objectId)
      },
      error: function(err) { console.log(err) }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Create List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "listTitle", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createListButtonClick, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Create List")
                  )

                )
              )
            )
          )
    );
  }
});


},{}]},{},[1])


},{}],2:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // DataRow
  getInitialState: function() {
    return { }
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect
    company = (prospect.company) ? prospect.company : prospect.company_info
    company = (company) ? company : {}
    console.log(prospect)

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    // console.log(this.state.checked)
    // console.log(checked)
    // {prospect.employeeCountRange.name + " employees" }
    // Today
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.website) ?  React.DOM.a({href: "http://"+prospect.website.replace('http://',''), className: "btn btn-xs btn-primary btn-gradient", style: {float:'right',marginLeft:5}}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    //if(parseInt(prospect.linkedin_url.split('/').pop())){
    if(company.linkedin_url){
      btnClass = "btn btn-primary btn-xs btn-gradient"
    } else {
      btnClass = "btn btn-primary btn-xs btn-gradient disabled"
    }
    if(company.logo)
      logo = company.logo

    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 
          React.DOM.td({style: color}, 
              React.DOM.div({style: {backgroundImage: "url("+company.logo+")"}, 
              className: "company-img-thumbnail"})
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold',fontSize:15}}, company.company_name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px',fontSize:11}}, 
              company.headcount)
          ), 


          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:13}}, company.industry), 
            React.DOM.h6({style: {margin:'0px',fontStyle:'italic',marginTop:5,fontSize:11}}, 
              company.city)
          ), 

          React.DOM.td({style: color}, 
            "   ", 
            React.DOM.div({style: {width:290,marginTop:-15}}, 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openLinkedinCompanyProfile}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Search Profiles"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openSimilarCompanies}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Find Similar Companies"
            )
            )
          ), 
          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:11,paddingTop:5}}, moment(company.createdAt).fromNow())
          ), 

          React.DOM.td({style: color}, " ", React.DOM.h6({style: {margin:'0px'}}, ""), " "), 

          React.DOM.td({style: color}, 
            React.DOM.div({style: {width:92, paddingTop:5}}, 
              this.props.li, " ", 
              websiteBtn
            )
          )
        )
    );
  },

  openLinkedinCompanyProfile: function(e) {
    console.log(this.props.prospect.linkedin_url)
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    console.log(cid)
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
    e.stopPropagation()
  },

  openSimilarCompanies: function(e) {
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    //window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    e.stopPropagation()
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});


},{}]},{},[1])


},{}],3:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  deleteList: function() {
    this.props.deleteList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-deleteList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-trash-o"}), "  Delete List?")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({className: "deleteForm", onSubmit: this.deleteList}, 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-danger", 
                      style: {display:'block', width:'100%'}}, 
                      "Delete"
                    ), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-default", 
                      style: {display:'block', width:'100%'}}, 
                      "Cancel"
                    )
                  )

                )
              )
            )
          )
    );
  }
});


},{}]},{},[1])


},{}],4:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Spinner
  render: function() {
    return (
      React.DOM.div({className: "horizantal-spinner"}, 
        React.DOM.div({className: "hoz-bounce1"}), 
        React.DOM.div({className: "hoz-bounce2"}), 
        React.DOM.div({className: "hoz-bounce3"})
      )
    )
  }
})

},{}]},{},[1])


},{}],5:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // LoadingSpinner
  render: function() {
    return (
    React.DOM.div({className: "spinner", style: {marginTop:'180px'}}, 
      React.DOM.div({className: "spinner-container container1"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container2"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container3"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      )
    )
    )
  }
});

},{}]},{},[1])


},{}],6:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //Messenger
  render: function() {
    return (
        React.DOM.div({className: "alert alert-success", 
             'data-alert': "alert", 
             style: {position:'absolute',
                     top: 31, 
                     right:30, 
                     display:'none',
                     width:200}}, 
                     React.DOM.a({className: "close", 
                       href: "javascript:", 
                       onClick: this.hideAlert}, "×"), 
            "Test"
        )
    );
  }
});

},{}]},{},[1])


},{}],7:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Panel Footing
  paginatePrevious: function() {
    var _this = this;

    qry = {
      where: JSON.stringify({archived:{$in: [false, null]}}),
      order: '-createdAt', count: 1,
      skip: (this.props.currentPage-2)*this.props.prospectsPerPage,
      limit: this.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+_this.props.prospectType,
      type:'GET',
      beforeSend: function() {
        console.log('before Send')
        _this.props.setPaginate(true)
      },
      headers: appConfig.parseHeaders,
      data: qry,
      success: function(res){
        console.log(res)
        _this.props.paginate(res.results, _this.props.currentPage - 1)
        _this.props.setPaginate(false)
      },
      error: function(res){ console.log(res) }
    });
  },

  paginate: function(direction) {
    var _this=this;
    prospectsPerPage = this.props.prospectsPerPage
    qry = {count: true}
    if(direction=='previous')
      qry.skip = (this.props.currentPage - 2)*prospectsPerPage
    else if(direction=="forward")
      qry.skip = this.props.currentPage*prospectsPerPage

    Parse.get(this.props.prospectType, qry).done(function(res) {
       console.log(res)
       this.props.paginate(res.results, _this.props.currentPage + 1)
    })
  },

  paginateForward: function() {
    var _this = this;
    qry = {
      where: JSON.stringify({ archived: {$in:[false, null] }}),
      order: '-createdAt', count: 1,
      skip: this.props.currentPage*this.props.prospectsPerPage,
      limit: this.props.prospectsPerPage,
      include: 'company',
    }

    $.ajax({
      url: 'https://api.parse.com/1/classes/'+_this.props.prospectType,
      type:'GET',
      headers: appConfig.parseHeaders,
      data: qry,
      beforeSend: function() {
        _this.props.setPaginate(true)
      },
      success: function(res){
        console.log(res)
        _this.props.paginate(res.results, _this.props.currentPage + 1)
        _this.props.setPaginate(false)
      },
      error: function(res){ console.log(res); }
    });
  },

  componentDidMount: function() {
    paginateForward = this.paginateForward
    paginatePrevious = this.paginatePrevious

    Mousetrap.bind('l', function() { 
      console.log('new forward')
      paginateForward()
    });

    Mousetrap.bind('h', function() { 
      console.log('new back')
      paginatePrevious()
    });
  },

  render: function() {
    // Add Support For Current List
    // Current List
    //console.log('current page')
    //console.log(this.props.currentPage)
    //console.log(this.props.count)

    previous = (this.props.currentPage - 1) ? '' : 'disabled'

    lowerLimit = (this.props.currentPage-1)*this.props.prospectsPerPage
    upperLimit = this.props.currentPage*this.props.prospectsPerPage

    lowerLimit = (lowerLimit) ? lowerLimit : 1
    upperLimit = (upperLimit > this.props.count) ? this.props.count : upperLimit

    lastPage = this.props.currentPage == this.props.pages
    lessThanOnePage = upperLimit - lowerLimit<= this.props.prospectsPerPage - 2
    console.log(this.props.prospectsPerPage)
    forward = (lastPage || lessThanOnePage) ? 'disabled' : ''

    return (
      React.DOM.div({className: "panel-footing", 
           id: "navbar", 
           style: {height:'35px',padding:'0px', paddingTop:'7px'}}, 
          React.DOM.span({style: {float:'right',marginRight:5}}, 
            React.DOM.a({href: "javascript:", 
               style: {marginRight:'5px'}, 
               onClick: this.fastPrevious, 
               className: "blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-fast-backward"})
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginatePrevious, 
             className: "paginate-back-btn blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-chevron-left"})
          ), 
          React.DOM.span({style: {marginLeft:5, marginRight:5,display:'inline',width:'100%', textAlign:'center'}}, 
            React.DOM.span({style: (this.props.count) ? {}:{display:'none'}}, 
              lowerLimit+' - ', " "), " ", upperLimit+' of '+this.props.count
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginateForward, 
             className: "paginate-forward-btn blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-chevron-right"})
          ), 
          React.DOM.a({href: "javascript:", 
             style: {marginLeft:'5px'}, 
             onClick: this.fastForward, 
             className: "blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-fast-forward"}))
          )
        )
    );
  }, 

  fastPrevious: function() {
    var thiss = this;
    qry = {
      where: JSON.stringify({ user_company: Parse.user_company, 
                              archived:{$in: [null, false]}}),
      order: '-createdAt',
      count: 1,
      limit: thiss.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/'+thiss.props.prospectType,
      data: qry,
      beforeSend: function() {
        console.log('before Send')
        thiss.props.setPaginate(true)
      },
      headers: appConfig.headers,
      success: function(res){ console.log(res.results) 
        thiss.props.paginate(res.results, 1)
        thiss.props.setPaginate(false)
      },
      error: function(err) { console.log(err.responseText) }
    })
  },

  fastForward: function() {
    var thiss = this;
    console.log('fast forward')
    console.log(thiss.props.count - thiss.props.prospectsPerPage)
    _prosp = this.props.prospectsPerPage
    qry = {
      where: JSON.stringify({ user_company: Parse.user_company, 
                              archived:{$in: [null, false]}}),
      order: '-createdAt',
      count: 1,
      skip: Math.floor(thiss.props.count / _prosp)*_prosp,
      limit: thiss.props.count - thiss.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/'+thiss.props.prospectType,
      data: qry,
      beforeSend: function() {
        console.log('before Send')
        thiss.props.setPaginate(true)
      },
      headers: appConfig.headers,
      success: function(res){ console.log(res.results) 
        page = Math.ceil(thiss.props.count / 50)
        thiss.props.paginate(res.results, page)
        thiss.props.setPaginate(false)
      },
      error: function(err) { console.log(err.responseText) }
    })
  }
});

},{}]},{},[1])


},{}],8:[function(require,module,exports){
/** @jsx React.DOM */

//TODO - abstract lists
//TODO - rename this
var Lists = require('./side_menu_user_prospects.js.min.js'); 

var UserProspectHeader = require('./user_prospect_header.js.min.js');
var UserProspectRow = require('./user_prospect.js.min.js');

//var CompanyProspectHeader
var CompanyProspectRow = require('./data_row.js.min.js');
var LoadingSpinner = require('./loading_spinner.js.min.js')
var Spinner = require('./spinner.js.min.js')
var Messenger = require('./messenger.js.min.js')
var PanelFooting = require('./panel_footing.js.min.js')

//var CreateProspectListFromCompanyListModal = require('./create_prospect_list_from_company_list.js.min.js')
//var CreateProspectProfileModal = require('./create_title_mining_job.js.min.js')
/*
      <CreateProspectListFromCompanyListModal 
        currentList={this.state.currentList} 
        currentListObjectId={this.state.currentListObjectId}/>
      <CreateProspectProfileModal 
        currentList={this.state.currentList} 
        currentListObjectId={this.state.currentListObjectId}/>
      <RenameListModal renameList={this.props.renameList}/>
      <DeleteListModal deleteList={this.props.deleteList}/>
*/

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {  prospects   : [],
              currentPage : 1,
              className: this.props.className,
              listClassName: this.props.listClassName,
              pages       : 1,
              currentList : 'All',
              currentListObjectId : '',
              loading: true,
              paginating: false,
              prospectsPerPage: 50,
              downloading: false,
              lists : [],
              masterCheckboxChecked: false,
              keyboardActiveProspect: 0, //first
              //selectedProspects: [],
              totalCount  : "~", 
              detailMode: false,
              detailCompany: {},
              count       : "~", }
  },

  setPaginate: function(value) { this.setState({paginating: value}) },
  setDownloading: function(value) { this.setState({downloading: value}) },
  removeProspects: function(objArray) {
    _prospects = _.map(this.state.prospects, function(prospect) {
      console.log(objArray.indexOf(prospect.objectId) == -1)
      if(objArray.indexOf(prospect.objectId) == -1){
          return prospect
      }
    })
    this.setState({prospects: _.compact(_prospects)})
  },

  archiveProspects: function(objects) {
    console.log('ARCHIVE')
    objects = (objects) ? objects : []
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    selectedProspects = selectedProspects.concat(objects)
    qry = {'archived':true}
    console.log('starting parse archive')
    Parse.batchUpdate(this.state.className, selectedProspects, qry).done(function(res) {
      console.log(res)
    })
    this.removeProspects(selectedProspects)
    totalCount = this.state.totalCount
    this.setState({totalCount : totalCount - 1})

    selected = _.map(this.state.prospects, function(prospect) {
      if(selectedProspects.indexOf(prospect.objectId) != -1)
        return prospect
    })

    selected = _.compact(selected)
    selected = _.pluck(selected, 'lists')
    selected = _.flatten(selected)
    selected = _.pluck(selected, 'objectId')
    selected = _.compact(selected)

    _.map(selected, function(list_id) {
      decrement = {count: {__op: 'Increment', amount: -1}}
      Parse.put('ProspectList/'+list_id, decrement, function(res) {
        console.log(res)
      })
    })
  },

  changeList: function(newListName, objectId) {
    localStorage.selectedProspects = JSON.stringify([])
    this.setState({
      currentList : newListName,
      currentListObjectId : objectId,
      prospects  : [],    
      count      : '~',
      pages      : 1,
      loading    : true,
      currentPage: 1,
      keyboardActiveProspect: 0
    })

    qry = {include: 'company', limit: this.state.prospectsPerPage, count: true}
    qry.where = {}
    qry.where.archived = {$in:[null, false]}
    if (newListName == 'Archived')
      qry.where.archived = true
    else if(newListName != "All")
      qry.where.lists = Parse._pointer(this.state.listClassName, objectId)
    qry.where = JSON.stringify(qry.where)
    console.log(qry)

    var _this = this;
    Parse.get(this.state.className, qry).done(function(res) {
      console.log(res)
      _this.setState({
        prospects: res.results,
        count: res.count,
        pages: Math.ceil(res.count/_this.props.prospectsPerPage),
        loading: false,
      })
    })
  },

  checkboxAction: function(checkedState, obj) {
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    if(checkedState)
      selectedProspects.push(obj)
    else
      selectedProspects = _.reject(selectedProspects,function(id){return id == obj})

    selectedProspects = _.uniq(selectedProspects)
    console.log(selectedProspects)
    localStorage.selectedProspects = JSON.stringify(selectedProspects)
    //this.setState({selectedProspects: selectedProspects})
  },

  masterCheckboxChanged: function(masterCheckboxValue) {
    this.setState({masterCheckboxChecked: masterCheckboxValue})
  },

  render: function() {
    this.startKeyboardShortcuts()
    $('body').css({overflow:'auto'})

    prospects = []
    for(i=0;i< this.state.prospects.length;i++) {
      url = this.state.prospects[i].url
      prospect = this.state.prospects[i]

      keyboardSelected = (i == this.state.keyboardActiveProspect)

      selectedProspects = JSON.parse(localStorage.selectedProspects)
      alreadyChecked=false
      for(ii=0;ii< selectedProspects.length;ii++)
        if(prospect.objectId == selectedProspects[ii])
          alreadyChecked = true

      //console.log(alreadyChecked)

      if(this.state.className == "Prospect") { 
      prospects.push(
        UserProspectRow({deleteProspect: this.deleteProspect, 
                      prospect: this.state.prospects[i], 
                      masterCheckboxChecked: this.state.masterCheckboxChecked, 
                      key: this.generate_id(), 
                      link: "", 
                      archiveProspects: this.archiveProspects, 
                      keyboardSelected: keyboardSelected, 
                      alreadyChecked: alreadyChecked, 
                      checkboxAction: this.checkboxAction}
                    )
      )
      } else { 
        prospects.push(
          CompanyProspectRow({deleteProspect: this.deleteProspect, 
                            prospect: this.state.prospects[i], 
                            masterCheckboxChecked: this.state.masterCheckboxChecked, 
                            key: this.generate_id(), 
                            link: "", 
                            keyboardSelected: keyboardSelected, 
                            alreadyChecked: alreadyChecked, 
                            checkboxAction: this.checkboxAction})
        )
      }

      $('#prospectDetailButtons').click(function(e) {
        //e.stopPropagation()
        //setTimeout(function(){ $('.dropdown').show() }, 30);
      })
    }

    if(this.state.currentList == "All"){
      listType = {display:'none'}
      listNameStyle = {display:'none'}
      listBtn = {display:'none'}
      listOptions = {display:'none'}
      copyDropdownStyle = {width:114, right:4}
    } else {
      listType = {float:'left'}
      listNameStyle = {float:'left',display:'inline-block', fontWeight: 200, marginTop: 1, paddingRight: 10, marginLeft: -10}
      listBtn = {float:'left',marginLeft:5}
      listOptions = {float:'right'}
      copyDropdownStyle = {width:114, right:36}
    }

    currentList     = this.state.currentList
    paginateOverlay = (this.state.paginating) ? PaginateOverlay(null) : ""
    downloadIcon    = (!this.state.downloading) ? React.DOM.i({className: "fa fa-download"}) : Spinner({circleStyle: {backgroundColor:'white',height:4,width:4}, spinnerStyle: {height:13, width:13,margin:0,display:'inline-block',paddingTop:2}})
    prospectTableStyle = (this.state.count == 0) ? {display:'none'} :{height:'400px',overflow:'auto'}

    header = (this.props.className == "Prospect") ? UserProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged}) : CompanyProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged})

    return (
        React.DOM.div(null, 
      React.DOM.div({className: "container prospects-container"}, 
        Lists({currentList: this.state.currentList, 
               count: this.state.count, 
               listClassName: this.state.listClassName, 
               currentListObjectId: this.state.currentListObjectId, 
               totalCount: this.state.totalCount, 
               removeProspects: this.removeProspects, 
               changeList: this.changeList, 
               createList: this.createList, 
               lists: this.state.lists}), 

      React.DOM.div({className: "col-lg-10 col-md-10 col-sm-10 col-xs-10", style: {padding:'0'}}, 
              paginateOverlay, 
              React.DOM.div({id: "prospectDetailButtons"}, 
                ListDetailButtons({
                  renameList: this.renameList, 
                  deleteList: this.deleteList, 
                  currentListName: this.state.currentList, 
                  currentList: this.state.currentListObjectId}), 

                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({href: "javascript:", 
                     className: "btn btn-primary btn-xs list-options", 
                     id: "", 
                     style: listOptions}, 
                    React.DOM.i({className: "fa fa-bars"})
                  )
                ), 

                React.DOM.div({className: "dropdown1 copyList", style: {display:'inline-block',float:'right'}}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     id: "copyToList", 
                     href: "javascript:", 
                     className: "drop-target btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-copy"}), "  Copy To List ", 
                     React.DOM.i({className: "fa fa-caret-down"})), 
                  CurrentListsTwo({lists: this.state.lists, 
                                   copyDropdownStyle: copyDropdownStyle, 
                               copySelectedProspects: this.copySelectedProspects})
                ), 
  
                React.DOM.div({className: "dropdown1 moveList", style: {display:'inline-block',float:'right'}}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     href: "javascript:", 
                     id: "moveToList", 
                     className: "btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-share"}), "  Move To List ", 
                     React.DOM.i({className: "fa fa-caret-down"})), 
                CurrentLists({lists: this.state.lists, 
                              moveSelectedProspects: this.moveSelectedProspects})
                ), 

                React.DOM.a({onClick: this.downloadFile, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   downloadIcon, 
                   "  Download CSV  " 
                ), 

                React.DOM.a({href: "javascript:", 
                   onClick: this.archiveProspects, 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   React.DOM.i({className: "fa fa-archive"}), 
                   "  Archive  " 
                ), 

                React.DOM.a({href: "javascript:", 
                   onClick: this.launchProspectProfileModal, 
                   style: {display:'none'}, 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   React.DOM.i({className: "fa fa-cloud-download"}), 
                   "  Find Prospects By Title  " 
                )
              ), 
          (this.state.count == 0) ? EmptyPeopleProspectsPanel({className: this.props.className})  : "", 
          React.DOM.div({id: "autoscroll", style: prospectTableStyle}, 
            React.DOM.table({className: "prospects-table table table-striped", 
                style: {marginBottom:'0px'}}, 
              React.DOM.thead({style: {backgroundColor:'white'}}, 
                header
              ), 
              React.DOM.tbody(null, 
                prospects
              )
            ), " ", (this.state.loading) ? LoadingSpinner(null) : ""
          )
        )
      ), 
      PanelFooting({currentPage: this.state.currentPage, 
                    count: this.state.count, 
                    totalCount: this.state.totalCount, 
                    paginate: this.paginate, 
                    prospectType: 'Prospect', 
                    prospectsPerPage: this.state.prospectsPerPage, 
                    setPaginate: this.setPaginate, 
                    pages: this.state.pages}), 
      Messenger(null)
    )
    );
  },

  launchProspectProfileModal: function(){ $('#createProspectProfileModal').modal() },

  paginate: function(newProspects, newPage) {
    this.setState({
      prospects: newProspects,
      currentPage: newPage,
      keyboardActiveProspect: 0
    })
    this.startKeyboardShortcuts()
    document.getElementById('autoscroll').scrollTop = 0
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern[0]) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return prospect_email
  },

  downloadFile: function() {
    if(this.state.className == "Prospect")
      this.downloadProspects()
    else
      this.downloadCompanies()
  },

  downloadCompanies: function() {
    console.log('download file')
    _list = Parse._pointer('CompanyProspectList', this.state.currentListObjectId)

    var _this = this;
    results = _.map([0,1,2,3,4,5,6,7,8,9], function(num) {
      qry = { count: 1, archived: {$in:[null, false]}, limit: 1000, skip: num*1000}
      qry.include = 'company,company.email_guess'
      if(_this.state.currentList != "All")
        qry.where = JSON.stringify({lists: _list})
      return Parse.get(_this.state.className, qry)
    })

    $.when.apply(this, results).then(function (res) {
      prospects = _.flatten(_.map(arguments, function(arg) { return arg[0].results}))
      prospects = _.map(prospects, function(prospect) {
        // TODO - add email
        if(prospect.company) {
          company = prospect.company
          delete company.name
          _keys = _.keys(prospect).concat(_.keys(company))
          _values = _.values(prospect).concat(_.values(company))
          obj = _.object(_keys, _values)
          obj.address = obj.normalizedLocation

          console.log(obj)
          delete obj.company; delete obj.createdAt; delete obj.updatedAt; delete obj.objectId;
          delete obj.lists; delete obj.loading; delete obj.user; delete obj.user_company;
          delete obj.api_key; delete obj.className;
          return obj;
        } else {
          //console.log(prospect)
          return prospect
        }
      })
      prospects = [Papa.unparse(prospects)]
      var blob = new Blob(prospects, {type: "text/plain;charset=utf-8"});
      console.log(blob)
      saveAs(blob, _this.state.className+".csv");
      _this.setState({downloading: false})
    })
  },

  downloadProspects: function() {
    console.log('download file')
    _list = Parse._pointer('ProspectList', this.state.currentListObjectId)

    var _this = this;
    results = _.map([0,1,2,3,4,5,6,7,8,9], function(num) {
      qry = { count: 1, archived: {$in:[null, false]}, limit: 1000, skip: num*1000}
      qry.include = 'company,company.email_guess'
      if(_this.state.currentList != "All")
        qry.where = JSON.stringify({lists: _list})
      return Parse.get(_this.state.className, qry)
    })

    $.when.apply(this, results).then(function (res) {
      prospects = _.flatten(_.map(arguments, function(arg) { return arg[0].results}))
      prospects = _.map(prospects, function(prospect) {
        // TODO - add email
        if(prospect.company) {
          company = prospect.company
          delete company.name
          _keys = _.keys(prospect).concat(_.keys(company))
          _values = _.values(prospect).concat(_.values(company))
          obj = _.object(_keys, _values)
          obj.address = obj.normalizedLocation
          if(obj.email_pattern && !_.isEqual(obj.email_pattern, []))
            obj.email = _this._make_email(prospect.name, prospect.company.email_pattern)
          else
            obj.email = ""

          console.log(obj)
          delete obj.company; delete obj.createdAt; delete obj.updatedAt; delete obj.objectId;
          delete obj.lists; delete obj.loading; delete obj.user; delete obj.user_company;
          delete obj.api_key; delete obj.className;
          return obj;
        } else {
          //console.log(prospect)
          return prospect
        }
      })
      prospects = [Papa.unparse(prospects)]
      var blob = new Blob(prospects, {type: "text/plain;charset=utf-8"});
      console.log(blob)
      saveAs(blob, _this.state.className+".csv");
      _this.setState({downloading: false})
    })
  },


  hideAlert: function() { $('.alert').hide() },
  startKeyboardShortcuts: function() { /*KeyboardShortcuts.initialize()*/ },
  componentDidUpdate: function() { $('.dropdown').show() },

  componentDidMount: function() {
    $('.dropdown').show(); 
    localStorage.selectedProspects = JSON.stringify([]);

    qry = { lists: currentList }
    if(this.state.currentList == 'All'){
      qry = {
        count: true, order: '-createdAt',
        limit: this.state.prospectsPerPage,
        include: 'email_guesses,email_guesses.pattern,company'
      }
      qry.where = JSON.stringify({ archived: {'$in':[false, null]}, })
    }

    var _this = this;
    Parse.get(_this.state.className, {count: true,limit:0}).done(function(res) {
      console.log(res)
    })
    Parse.get(_this.state.className, qry).done(function(res) {
      console.log(res)
      res.prospects = res.results
      res.loading = false; 
      res.pages = Math.ceil(res.count/_this.props.prospectsPerPage);
      res.totalCount = res.count
      _this.setState(res)
    })

    Parse.get(this.props.listClassName, { order: '-createdAt'}).done(function(res) {
      _this.setState({lists: res.results})
    })
  },

  generate_id : function () {
    return '_' + Math.random().toString(36).substr(2,9); 
  },
});

/*  Dropdown Menus */
var ListsMenu = React.createClass({displayName: 'ListsMenu',
  render: function() {
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {
            minWidth:'inherit',
            top: '20px',
            width: '125px',
            right: '154px',
            left:'auto'
          }}, 
        React.DOM.li(null, React.DOM.a({href: "#books"}, 
          React.DOM.i({className: "fa fa-times"}), "  " + ' ' +
          "Delete List"
        )), 
        React.DOM.li(null, React.DOM.a({href: "#podcasts"}, 
          "Rename Lists"
        ))
      )
    );
  }
});

var ListDetailButtons = React.createClass({displayName: 'ListDetailButtons',
  // Rename List
  getInitialState: function() {
    return {
      editMode: false
    }
  },
  render: function() {
    //console.log(this.props.currentListObjectId)
    if(!this.state.editMode) {
      stuff = React.DOM.span({className: "", style: listNameStyle}, 
            (this.props.currentListName == "All") ? '' : React.DOM.i({className: "fa fa-bars", style: {fontSize:16, marginTop:-5}}), 
            (this.props.currentListName == "All") ? '' : "   " +this.props.currentListName
              )
    } else {
      stuff = React.DOM.input({className: "form-control", style: {width: 100, float: 'left', height: 24, marginTop: -1}})
    }
    return (

          React.DOM.div(null, 
            React.DOM.h4({style: {margin:0}}, " ", stuff, 
              React.DOM.a({href: "javascript:", 
                style: listBtn, 
                'data-toggle': "modal", 
                id: "renameListBtn", 
                'data-target': ".bs-renameList-modal-sm", 
                style: {display:'none'}, 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-pencil"})
              ), 
              React.DOM.a({href: "javascript:", 
                onClick: this.deleteList, 
                style: listBtn, 
                style: {display:'none'}, 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-trash-o"})
              )
            )

          )
      );
  },

  renameList: function(newListName) { this.props.renameList(newListName) },

  deleteList: function(){
    thiss = this;
    swal({   
      title: "Are you sure?",   
      text: "Your will not be able to recover this prospect list!",   
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   swal("Deleted!", "Your prospect list has been deleted.", "success"); 
        console.log('deleted')
        thiss.props.deleteList()
      });
  },

  toggleEdit: function() { this.setState({editMode: !this.state.editMode }) }
});

var PaginateOverlay = React.createClass({displayName: 'PaginateOverlay',
  render: function() {
    return (
        React.DOM.div({id: "paginate-overlay", style: {paddingTop:70}}, 
          Spinner({circleStyle: {backgroundColor:'white'}})
        )
    )
  }
})

var EmptyPeopleProspectsPanel = React.createClass({displayName: 'EmptyPeopleProspectsPanel',
  openLinkedinWindow: function() {
    if(this.props.className == "Prospect")
      window.open('https://www.linkedin.com/vsearch/p?type=people')
    else
      window.open('https://www.linkedin.com/vsearch/c')
  },

  render: function() {

    name = (this.props.className == "Prospect") ? "Prospects" : "Companies"
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-primary", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  ", 
            "Search for "+name+"!")
        )
      )
    )
    );
  }
});

var CompanyProspectHeader = React.createClass({displayName: 'CompanyProspectHeader',
  render: function() {
    return (
      React.DOM.tr(null, 
        React.DOM.th(null), 
        React.DOM.th(null), 
        React.DOM.th({style: {width:400}}, "Name"), 
        React.DOM.th({style: {width:500}}, "Industry"), 
        React.DOM.th({style: {width:137,display:'none'}}, "# of Prospects"), 
        React.DOM.th(null, "  "), 
        React.DOM.th({style: {display:'none'}}, "Signals"), 
        React.DOM.th({style: {width:100}}, "Added"), 
        React.DOM.th(null, " "), 
        React.DOM.th(null, " ")
      )
    );
  }
});

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == $(e.target).text()
    });

    this.props.moveSelectedProspects(listSelect[0].objectId)
  },

  componentDidMount: function() {
    //$(this.getDOMNode().data()
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      console.log(this.props.lists[i].objectId)
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
            className: "dropdown-move-list-name dropdown-list-name", 
            href: "javascript:", 
            'data-move-objectId': "this.props.lists[i].objectId"}, 
           this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:123,top:27}}, 
        lists
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.copySelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               className: "dropdown-copy-list-name dropdown-list-name", 
               href: "javascript:", 
               'data-objectId': this.props.lists[i].objectId}, 
               
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {width:114,right:6,top:27}}, 
        lists
      )
    );
  }
});

},{"./data_row.js.min.js":2,"./loading_spinner.js.min.js":5,"./messenger.js.min.js":6,"./panel_footing.js.min.js":7,"./side_menu_user_prospects.js.min.js":10,"./spinner.js.min.js":11,"./user_prospect.js.min.js":12,"./user_prospect_header.js.min.js":13}],9:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  renameList: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newListName = $('#newListName').val()
    if(newListName.trim() != "")
      this.props.renameList(newListName)
    // Disable Modal
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-renameList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Rename List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.renameList}, 
                    React.DOM.input({id: "newListName", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.renameList, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create List"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}],10:[function(require,module,exports){
/** @jsx React.DOM */

var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var CreateListModal = require('./create_list_modal.js.min.js')
var Messenger = require('./messenger.js.min.js')

var DeleteListModal = require('./delete_list_modal.js.min.js')
var RenameListModal = require('./rename_list_modal.js.min.js')
var SideMenuListOption = require('./user_side_menu_list.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  //SideMenuProspects - SideList
  getInitialState: function() {
    return {
      /*
      createList: 
      renameList:
      deleteList:
      changeList:
      currentList:
      totalCount:
      lists:

      */
     lists: [],
    }
  },

  createList: function (data) {
    this.props.createList(data)
  },

  componentDidUpdate: function() {
    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('move-objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },

  componentDidMount: function() {
    var _this = this;
    Parse.get(this.props.listClassName, { order: '-createdAt'}).done(function(res) {
      _this.setState({lists: res.results})
    })

    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },
  
  removeSelectedProspects: function() {
    // remove selected from list
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    _list = Parse._pointer(this.props.listClassName, this.state.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [_list] } }
    if(this.state.currentList == 'All'){ body = { archived: true } }
    Parse.batchUpdate('Prospect', selectedProspects, body)
    // Update List Counts
    //
  },

  moveSelectedProspects: function(_list) {
    // move to list
    // only if the current list is not all
    // remove prospects from currentList
    if(!this.props.currentListObjectId){ console.log('not supported'); return 0}
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    old_list = Parse._pointer(this.props.listClassName, this.props.currentListObjectId)
    new_list = Parse._pointer(this.props.listClassName, _list)
    this.props.removeProspects(selectedProspects)

    var _this = this;
    console.log(_list)
    console.log(this.props.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [old_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: -1*selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _this.props.currentListObjectId)
          item.count = item.count - amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })

    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
          item.count = (item.count) ? item.count + amount : amount
        return item
      })
      //console.log(lists)
      _this.setState({lists: lists})
    })
    // Update List Counts
  },

  copySelectedProspects: function(_list) {
    // TODO - check to see if prospect exists in the other list
    // TODO - Remove from selected prospects If prospects already exist in list do not increment
    console.log('update')
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    new_list = Parse._pointer(this.props.listClassName, _list)
    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    console.log(body)

    //

    var _this = this;
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function(res) {
      console.log(res)
      // if success
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
            item.count = (item.count) ? item.count + amount : amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })
  },

  changeList: function(e) {
    /*
    currentList = $(e.target).parent()//.data('list')
    console.log(currentList)
    this.props.changeList(currentList.name, currentList.objectId)
    */
  },

  render: function() {
    if(this.props.currentList == "All")
      styles = {'backgroundColor':'rgb(0, 122, 255)', 'color':'white'} 
    else
      styles =  {}

    lists = [SideMenuListOption({list: {name: 'All', count: this.props.totalCount}, 
                                 iconType: 'users', 
                                 changeList: this.props.changeList}), 
             SideMenuListOption({list: {name: 'Archived', count: '~'}, 
                                 iconType: 'archive', 
                                 changeList: this.props.changeList, 
                                 hideCount: true})]

    for(i=0;i< this.state.lists.length;i++){
      list = this.state.lists[i]
      if(list.list_type == "signal_list")
        iconType = "wifi"
      else if (list.list_type == "mining_job")
        iconType = "cloudDownload"
      if(list.list_type)
        lists.push(SideMenuListOption({list: list, 
                                       iconType: iconType, 
                                       changeList: this.props.changeList}))
      else 
        lists.push(SideMenuListOption({list: list, 
                                       changeList: this.props.changeList}))
    }

    return (
      React.DOM.div({className: "col-lg-2 col-md-2 col-sm-2 col-xs-2", 
           style: {padding:'0',height:'438px',backgroundColor:'#e0e9ee',
                   borderRight:'1px solid #b0b8bf',textAlign:'center'}}, 
                   React.DOM.div({className: "prospect-list-header", style: {paddingLeft:10, textAlign:'center'}}, 
                     "Lists"

                   ), 
        React.DOM.div({className: "btn-group-vertical", 
             style: {width:'100%', height: '320px', overflow: 'auto'}}, 
          lists
        ), 
        React.DOM.br(null), React.DOM.br(null), 
        React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
              'data-toggle': "modal", 'data-target': ".bs-example-modal-sm", 
              style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
          React.DOM.i({className: "fa fa-plus-circle"}), "  New List"
        ), 
        CreateListModal({createList: this.createList, 
                         updateList: this.updateList, 
                         listClassName: this.props.listClassName}), " ", React.DOM.br(null)
      )
    );
  },

  createList: function(data) { 
    this.setState({ lists: [data].concat(this.state.lists) }) 
  },

  updateList: function(_id, objId) {
    updated = _.map(this.state.lists, function(list) {
      if(list.tmp == _id)
          list.objectId = objId
      return list
    })
    console.log("update broski")
    this.setState({lists: updated})
  },

  renameList: function(newListName) {
    thiss = this;
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.name == thiss.state.currentList) {
        item.name = newListName
        return item
      }
      return item
    });

    this.setState({lists : filtered, currentList: newListName})

    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    Parse.update(this.props.listClassName, {'name':newListName})
  },

  deleteList: function() {
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.objectId == thiss.state.currentListObjectId)
        return false
      return true
    });

    this.setState({lists: filtered, currentList: 'All'})
    this.changeList('All', '')

    appConfig.closeModal(); 
    $('#newListName').val('');
    Parse.delete(this.props.listClassName+'/'+this.state.currentListObjectId);
  },
});

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == $(e.target).text()
    });

    this.props.moveSelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
            className: "dropdown-list-name", 
            href: "javascript:", 
            onClick: this.listAction}, this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:-23,top:27}}, 
        lists
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.copySelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               className: "dropdown-list-name", 
               href: "javascript:", 
               onClick: this.listAction}, 
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {width:114,right:-71,top:27}}, 
        lists
      )
    );
  }
});

},{"./create_list_modal.js.min.js":1,"./delete_list_modal.js.min.js":3,"./messenger.js.min.js":6,"./rename_list_modal.js.min.js":9,"./user_side_menu_list.js.min.js":14}],11:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Spinner
  render: function() {
    circleStyle=(this.props.circleStyle) ? this.props.circleStyle : {}
    spinnerStyle=this.props.spinnerStyle ? this.props.spinnerStyle : {}
    return (
      React.DOM.div({className: "spinner", style: spinnerStyle}, 
        React.DOM.div({className: "spinner-container container1"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        ), 
        React.DOM.div({className: "spinner-container container2"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        ), 
        React.DOM.div({className: "spinner-container container3"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        )
      )

    )
  },
})

},{}],12:[function(require,module,exports){
/** @jsx React.DOM */
var HorizantalSpinner = require('./horizantal_spinner.js.min.js')
var LoadingSpinner = require('./loading_spinner.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    loading  = true
    if(this.props.prospect.company)
      if(this.props.prospect.company.email_pattern)
        loading  = false
    if(!this.props.prospect.company_name.length)
      loading = false
    return { 
      prospect: this.props.prospect,
      checked: false,
      initialLoading: loading,
      loading: loading,
      editMode: false,
      mouseOver: false
    }
  },

  mouseEnter: function() {
    this.setState({mouseOver: true})
  },

  mouseLeave: function() {
    this.setState({mouseOver: false})
  },

  clickCheck: function(e) {
    e.stopPropagation()
    domNode = this.getDOMNode()
    //isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.state.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidUpdate: function() {
    //
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern[0]) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return ReadOnlyForm({icon: "envelope", value: prospect_email})
  },

  realtimeCompanyInfo: function() {
    var _this = this;
    channel.bind(this.state.prospect.company_name.replace(' ','-'), function(data) {
      _prospect = _this.state.prospect; _prospect.company = data.company;
      _this.setState({prospect: _prospect})
      console.log(data.company)
      console.log('no listening for email')
      if(_prospect.company.email_pattern){
         _this.setState({loading: false}) 
      } else {
        console.log('binding for email pattern')
        console.log(data.company.domain)
        _this.realtimeEmailPattern(data.company.domain)
      }
    });
  },

  realtimeEmailPattern: function(domain) {
    var _this = this;
    channel.bind(domain, function(data) {
      // add email pattern
      console.log('got email pattern')
      console.log(data)
      console.log(_this.state.prospect)
      _prospect = _this.state.prospect
      if(_prospect.company)
        _prospect.company.email_pattern = data.email_pattern
      else
        _prospect.company= {'email_pattern': data.email_pattern}

      _this.setState({prospect: prospect})
      _this.setState({loading: false})
    })
  },

  componentDidMount: function() { 
    //TODO - start if loading is true 
    //if(this.state.loading){
      if(this.state.prospect.company)
        this.realtimeEmailPattern(this.state.prospect.company.domain)
      else
        this.realtimeCompanyInfo(this.state.prospect.company_name)
    //}
  },

  _keyboardShortcuts: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }
  },

  render: function() {
    prospect = this.state.prospect
    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    checked        = this.state.checked || this.props.alreadyChecked
    color = (checked) ? {backgroundColor: '#eef8ff'} : {}
    infoColor = (checked) ? {backgroundColor: '#eef8ff',paddingBottom:2} : {paddingBottom:2}
    checkboxColor = (checked) ? {backgroundColor: '#eef8ff',verticalAlign:'middle'} : {verticalAlign:'middle'}
    company = (prospect.company) ? prospect.company : {}
    prospect_email = ReadOnlyForm({disabled: true, icon: "envelope", value: "No Email Found"})
    if(company.email_pattern)
      if(company.email_pattern.length)
        prospect_email = this._make_email(prospect.name, company.email_pattern)

    //console.log(prospect.name)
    if(prospect.name == "LinkedIn Member" || _.last(prospect.name) == ".")
      prospect_email = ReadOnlyForm({disabled: true, icon: "envelope", 
                                     value: "Ambiguous Name"})
    prospect_email = (this.state.loading) ? LoadingLabel(null) : prospect_email
    if(!this.props.prospect.company_name.length)
        prospect_email = ""

    if(company.phone && company.phone != "null")
      phone = React.DOM.div({style: {display:'block',paddingTop:2}}, ReadOnlyForm({icon: "phone", value: company.phone})) 
    else 
      phone = ""

    company_size   = (this.state.loading) ? LoadingLabel(null) : ""
    if(company.headcount){ 
      company_size = prospect.company.headcount+" employees" 
    }

    if(company.address)
      city = (company.address) ? company.address.normalizedLocation : prospect.locale
    else if(prospect.locale != "" && prospect.locale)
      city = prospect.locale
    else if(_.isEqual(company, {}))
      city = LoadingLabel(null)
    else
      city = ""

    company_url = (company.domain) ? ShinyButton({icon: "globe", link: "http://"+company.domain}) : ""
    position    = (prospect.title) ? prospect.title.trim() : ""

    prospect_company_name = prospect.company_name
    prospect_name = prospect.name
    if(!this.state.prospect.loading){
      if(typeof(prospect.company_name) == "undefined" || prospect.company_name == "" || prospect.company_name == "not_found")
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, formText: "Enter Company Name."}) 
      if(typeof(prospect.name) == "undefined" || prospect.name == "LinkedIn Member")
        prospect_name = UserUpdateForm({updateProspect: this.updateProspect, var: "name", formText: "Enter Full Name."}) 
      if(typeof(position) == "undefined" || position == "")
        position = UserUpdateForm({updateProspect: this.updateProspect, var: "pos", prospect: this.state.prospect, formText: "Enter Title."}) 
    }
    if(this.state.editMode){
        pcn = prospect_company_name; pn = prospect_name; pos = position;
        pcn = (pcn != "" && pcn) ? pcn : "Enter Company Name."
        pn  = (pn != "" && pn) ? pn : "Enter Full Name."
        pos = (pos != "" && pos) ? pos : "Enter Title."
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, value: pcn, single: 1}) 
        prospect_name = UserUpdateForm({updateProspect: this.updateProspect, var: "name", value: pn, single: 1}) 
        position = UserUpdateForm({updateProspect: this.updateProspect, var: "pos", prospect: this.state.prospect, value: pos, single: 1}) 
    }
    if(!this.props.prospect.company_name.length)
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, formText: "Enter Company Name"}) 

    liProfileSimilars = (prospect.linkedin_url) ? React.DOM.a({onClick: this.openSimilars, style: {marginLeft:5, float:'right'}, href: "javascript:", className: "btn btn-xs btn-primary btn-gradient similar_link"}, " ", React.DOM.i({className: "fa fa-copy", style: {fontWeight:'bold'}})) : ""
    
    if(typeof(prospect_name) == "string")
      if(prospect_name.indexOf(".") != -1 || prospect_name == "LinkedIn Member")
        prospect_name = React.DOM.span(null, prospect_name, React.DOM.button({className: "btn btn-xs btn-default", style: {marginLeft:5,marginTop:-4,width:25,fontSize:11,lineHeight:1}, onClick: this.searchProspect}, " ", React.DOM.i({className: "fa fa-search"})))

    optionsMenu = React.DOM.div({style: {fontSize:10, cursor:'pointer',height:20,marginTop:-20}}, 
            React.DOM.a({className: "text-muted", onClick: this.toggleEditMode}, 
              React.DOM.i({className: (this.state.editMode) ? "fa fa-check" : "fa fa-pencil"})
            ), 
            React.DOM.a({className: "text-muted", onClick: this.searchProspect, style: {marginTop:5}}, 
              React.DOM.i({className: "fa fa-search"})
            ), 
            React.DOM.a({className: "text-muted", onClick: this.archiveProspects, 
              style: {marginTop:5}}, 
              React.DOM.i({className: "fa fa-archive"})
            )
            )
          
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
            //keyboardSelected = {}
    //
    if(this.props.keyboardSelected) {
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
    }
    

    return (
      React.DOM.tr({className: "prospects-tr", 
          onClick: this.rowClick, 
          onMouseEnter: this.mouseEnter, 
          onMouseLeave: this.mouseLeave, 
          style: keyboardSelected}, 
          React.DOM.td({style: checkboxColor}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     style: {lineHeight:'normal',marginTop:-8,height:17}, 
                     checked: checked})
          ), 
          React.DOM.td({style: checkboxColor}, 
            (this.state.mouseOver) ? optionsMenu : React.DOM.div({style: {height:20}}, "   ")
          ), 
          React.DOM.td({style: checkboxColor}, 
           (this.state.loading) ? LoadingPulse(null) : "", 
           (!this.state.loading && this.state.initialLoading) ? React.DOM.i({className: "fa fa-check-circle ", style: {color:'rgb(0, 122, 265)',paddingLeft:6,}}) : ""
          ), 
          React.DOM.td({style: color, className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect_name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, " ", position, " ")
          ), 
          React.DOM.td({style: color, className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, " ", prospect_company_name, " "), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}, className: "company-size"}, 
            company_size
            ), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px',display:'none',fontStyle:'italic'}, 
                className: "company-size"}, 
              (prospect.industry) ? prospect.industry : ""
            )
          ), 

          React.DOM.td({style: color}, 
            React.DOM.h6({style: {margin:'0px'}}, city)), 
          React.DOM.td({style: infoColor}, " ", prospect_email, " ", phone, " "), 
          React.DOM.td({style: color}, 
            React.DOM.div({style: {width:92,paddingTop:5,height:5}}, 
              React.DOM.a({href: "javascript:", 
                onClick: this.openLinkedinProfile, 
                className: "btn btn-xs btn-primary btn-gradient linkedin_link", 
                style: {float:'right',marginLeft:5}}, 
                React.DOM.i({className: "fa fa-linkedin-square"})), 
              "   ", 
              liProfileSimilars, 
              company_url
            )
          )
        )
    );
  },

  searchProspect: function(e) {
    e.preventDefault()
    e.stopPropagation()
    url = "http://www.google.com/#q="
    prospect = this.state.prospect
    name = (prospect.name != "LinkedIn Member") ? prospect.name : ""
    args = '-inurl:"/dir/" -inurl:"/find/" -inurl:"/updates"'
    if(name == "" && prospect.company_name != "not_found")
      linkedin = '"at '+prospect.company_name+'" site:linkedin.com '+args
    else
      linkedin = " site:linkedin.com/in/ OR site:linkedin.com/pub/ -site:linkedin.com/pub/dir/"
    window.open(url+name+" "+prospect.company_name+" "+prospect.title+linkedin)
  },

  archiveProspects: function() {
    console.log(this.getDOMNode())
    //$(this.getDOMNode()).click()
    this.props.archiveProspects([this.state.prospect.objectId])
  },

  toggleEditMode: function(e) {
    e.stopPropagation()
    this.setState({editMode: !this.state.editMode})
  },

  openTest: function() {
    e.stopPropagation()
  },

  openLinkedinProfile: function(e) {
    window.open(this.state.prospect.linkedin_url)
    e.stopPropagation()
  },

  emailInputClick: function(e) {e.stopPropagation() },

  openSimilars: function(e) {
    // TODO - move to backend
    console.log('similars')
    if(this.state.prospect.linkedin_url.indexOf('profile') != -1){
      urlargs = this.state.prospect.linkedin_url.split('?')[1].split('&')
      args = []
      for(i=0;i< urlargs.length; i++)
        args.push(urlargs[i].split('='))
      args = _.object(args)
    }
    window.open("https://www.linkedin.com/vsearch/p?pivotType=sim&pid="+args.id)
    e.stopPropagation()
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.state.prospect.objectId, 'Prospect')
  },
  
  updateProspect: function(prop, value) {
    prospect = this.state.prospect
    prospect[prop] = value
    this.setState({prospect: prospect})
  },
  
  refresh: function(e) {
    e.preventDefault()
    e.stopPropagation()
    prospect = this.state.prospect
    console.log(prospect)

    $.ajax({
      //url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
      url:'http://127.0.0.1:5000/profile_detail',
      type:'GET',
      dataType:'json',
      data: prospect,
      //headers:appConfig.headers,
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText) }
    })
  },
});

var UserUpdateForm = React.createClass({displayName: 'UserUpdateForm',
  getInitialState: function() {
    return {
      submitted: false,
      value: this.props.value
    }
  },

  formClick: function(e) { e.stopPropagation() },

  submitForm: function(e) {
    e.preventDefault()
    e.stopPropagation()
    this.props.updateProspect(this.props.var, $(e.target).find('input').val())
    this.setState({submitted: true})
    prospect = this.props.prospect
    prospect[this.props.var] = $(e.target).find('input').val()

    // persist
    data = {}
    varr = this.props.var
    val = $(e.target).find('input').val()
    data[varr] = val
    objectId = this.state.prospect.objectId

    $.ajax({
      //url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
      url:'http://127.0.0.1:5000/profile_detail',
      data: prospect,
      //headers:appConfig.headers,
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText) }
    })

    /*
    $.ajax({
      url:'https://api.parse.com/1/classes/Prospect/'+objectId,
      type: 'PUT',
      data: JSON.stringify(data),
      headers: appConfig.headers,
      success: function(res) { console.log(res) 
        // sent current prospect state as data to 
        $.ajax({
          url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
          data: prospect,
          headers:appConfig.headers,
          success: function(res) { console.log(res)},
          error: function(err) { console.log(err.responseText) }
        })
      },
      error: function(err) { console.log(err.responseText) }
    })
    */
  },

  handleChange: function(event) {
    console.log(event.target.value)
    this.setState({value: event.target.value});
  },

  render: function() {
    //"Enter Website."
    btn = (this.state.submitted) ? "btn btn-xs btn-success" : "btn btn-xs btn-default"
    single = {display:'inline', width:22, marginLeft:5}
    single.display = (this.props.single) ? 'none' : 'inline'
    input = {width:'100%', display:'inline', height:24, marginBottom:6}
    input.width = (this.props.single) ? '100%' : '70%'
    return (
      React.DOM.form({onClick: this.formClick, onSubmit: this.submitForm}, 
        React.DOM.input({style: input, 
          type: "text", className: "form-control input-sm", 
          disabled: this.state.submitted, 
          onChange: this.handleChange, 
          value: this.state.value, 
          placeholder: this.props.formText}), 
        React.DOM.button({type: "submit", className: btn, 
          style: single}, 
          React.DOM.i({className: "fa fa-check"}))
      )
    )
  },

  profileSearch: function(e) {
    e.preventDefault()
    url = "http://www.google.com/#q="
    prospect = this.state.prospect
    name = (prospect.name != "LinkedIn Member") ? prospect.name : ""
    args = '-inurl:"/dir/" -inurl:"/find/" -inurl:"/updates"'
    if(name == "" && prospect.company_name != "not_found")
      linkedin = '"at '+prospect.company_name+'" site:linkedin.com '+args
    else
      linkedin = " site:linkedin.com/in/ OR site:linkedin.com/pub/ -site:linkedin.com/pub/dir/"
    window.open(url+name+" "+prospect.company_name+" "+prospect.pos+linkedin)
  },

  websiteSearch: function(e) {
    e.preventDefault()
    url = "http://www.google.com/#q="
    window.open(url+this.state.prospect.company_name+" site:linkedin.com/company")
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return ReadOnlyForm({icon: "envelope", value: prospect_email})

    if(prospect_email) {
        prospect_email = (prospect_email) ? prospect_email.toLowerCase() : ""
        prospect_email = React.DOM.input({onClick: this.emailInputClick, type: "text", value: prospect_email, className: "form-control form-sm", style: {fontSize:12, width:160, height:22, marginTop: 0}})
        prospect_email = React.DOM.div({className: "input-group input-group-xs"}, 
          React.DOM.span({className: "input-group-addon", id: "sizing-addon3", style: {paddingTop:2,paddingBottom:2}}, 
            React.DOM.i({className: "fa fa-envelope"})
          ), 
          prospect_email
        )
    }
    return email
  },
})

var ReadOnlyForm = React.createClass({displayName: 'ReadOnlyForm',
  render: function() {
    style = {fontSize:12, width:'70%', height:22, marginTop: 0, zIndex:1,cursor:'default'}

    style.fontStyle = (this.props.disabled) ? 'italic' : ''
    return (
      React.DOM.div({className: "input-group input-group-xs", style: {display:'inline-block'}}, 
        React.DOM.span({className: "input-group-addon", id: "sizing-addon3", 
          style: {paddingTop:2,paddingBottom:2,display:'inline-block',
                  height:22,width:37,float:'left',marginTop:0}}, 
          React.DOM.i({className: "fa fa-"+this.props.icon})
        ), 
          React.DOM.input({disabled: this.props.disabled, onClick: this.emailInputClick, type: "text", value: this.props.value, className: "form-control form-sm", style: style})
      )
    )
  },
  emailInputClick: function(e) {
    e.stopPropagation()
  }
})

var LoadingLabel = React.createClass({displayName: 'LoadingLabel',
  render: function() {
    return (
        React.DOM.label({className: "label label-primary", style: {backgroundColor: 'rgb(0, 122, 265)'}}, "Loading...")
    )
  }   
})

var WarningLabel = React.createClass({displayName: 'WarningLabel',
  render: function() {
    return (
        React.DOM.label({className: "label label-warning", style: {display:'block',width:'90%'}}, "Warning...")
    )
  }   
})

var ShinyButton = React.createClass({displayName: 'ShinyButton',
  openLink: function(e) {
    e.stopPropagation()
    window.open(this.props.link)
  },

  render: function() {
    return (
      React.DOM.a({href: "javascript:", 
         onClick: this.openLink, 
         className: "btn btn-xs btn-primary btn-gradient", 
         style: {marginLeft:-5, float:'right'}}, 
       React.DOM.i({className: "fa fa-globe"})
      )
    )
  }
})

var LoadingPulse = React.createClass({displayName: 'LoadingPulse',
  render: function() {
    return (
      React.DOM.div({className: "profile-loading", style: {marginTop:0}}, 
        React.DOM.div({className: "double-bounce1", style: {backgroundColor:'rgb(0, 122, 265)'}}), 
        React.DOM.div({className: "double-bounce2", style: {backgroundColor:'rgb(0, 122, 265)'}})
      )
    )
  }
})

},{"./horizantal_spinner.js.min.js":4,"./loading_spinner.js.min.js":5}],13:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  checkboxAction: function(e) {
    checkboxVal = $(e.target).is(':checked')
    checkboxes = _.rest($('body').find('input[type="checkbox"]'))
    console.log(checkboxes)
    if(checkboxVal){
      _.map(checkboxes, function(checkbox){
        if(!$(checkbox).prop('checked'))
          $(checkbox).click()
      })
      
    } else {
      _.map(checkboxes, function(checkbox){
        if($(checkbox).prop('checked'))
          $(checkbox).click()
      })
    }
  },

  componentDidMount: function() {

  },

  render: function() {
    return (
            React.DOM.tr(null, 
              React.DOM.th({style: {paddingLeft:11}}, 
                React.DOM.input({type: "checkbox", onChange: this.checkboxAction})
              ), 
              React.DOM.th({style: {width:20}}), 
              React.DOM.th(null), 
              React.DOM.th(null, "Name"), 
              React.DOM.th(null, "Company"), 
              React.DOM.th({style: {width:'170px'}}, "City"), 
              React.DOM.th({style: {width:300}}, "Email"), 
              React.DOM.th(null, " ")
            )
    );
  }
});

},{}],14:[function(require,module,exports){
/** @jsx React.DOM */
//TODO - move list
//TODO - copy list
//TODO - create new list

module.exports = React.createClass({displayName: 'exports',
  //SideMenuListOption
  getInitialState: function() {
    return {
      count: '~',
    }
  },


  componentDidMount: function() {
  },

  changeList: function() {
    this.props.changeList(this.props.list.name, this.props.list.objectId)
  },

  getIconType: function(iconType) {
    icon = ""
    if(iconType == "archive"){
      icon = React.DOM.i({className: "fa fa-archive", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "users"){
      icon = React.DOM.i({className: "fa fa-user", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "wifi"){
      icon = React.DOM.i({className: "fa fa-wifi", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "cloudDownload"){
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {float:'left',lineHeight:1.5,marginRight:5}})
    }
    return icon
  },

  render: function() {
    listName = this.props.list.name
    propsCount = this.props.count
    count = (typeof(propsCount)== "undefined") ? this.state.count : propsCount

    icon = ""
    listStyle=(icon == "") ? "list-name" : "icon-list-name"
    if(this.props.iconType == "users")
      listStyle = "all-list-name" 
    count = React.DOM.div({className: "badge badge-default cnt-bg"}, this.props.list.count)
    count = (this.props.hideCount) ? "" : count
    return (
      React.DOM.button({type: "button", 
              onClick: this.changeList, 
              className: "list-names btn btn-default"}, 
              icon, "   ", React.DOM.span({className: listStyle}, listName), " ", count
      )
    );
  }
});


},{}]},{},[8])
//# sourceMappingURL=data:application/json;base64,
