(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */


module.exports = React.createClass({displayName: 'exports',
  // SignalCard
  prospectPerson: function() {
    // Add To Signal List
    // Add Company
    // Add Prospect
    person = this.props.person
    personId = person.objectId
    company = this.props.person.company
    companyId = company.objectId
    person.signalId = person.signalId
    company.signalId = company.objectId
    p = person; c = company;
    delete p.objectId; delete c.objectId;
    delete p.className; delete c.className;
    delete p.__type; delete c.__type;
    delete p.createdAt; delete c.createdAt;
    delete p.updatedAt; delete c.updatedAt;
    p.companySignal = p.company
    delete p.company

    p.linkedin_url = p.url
    p.company = JSON.parse(localStorage.currentUser).company
    p.archived = true
    p.loading = true
    p.city = p.title.split('-')[0]
    p.pos = p.title.split('-').slice(-1)[0].split(' at ')[0]
    p.company_name = p.title.split('-').slice(-1)[0].split(' at ').slice(-1)[0] 
    name = p.link_text.split('|')[0]
    name = name.split('-')[0]
    p.name = name
    p.websiteUrl = company.websiteUrl
    // Automatically Add To The Signal List It Belongs To
    
    console.log(this.props.profile)
    p.lists = [{'__type':'Pointer','className':'ProspectList','objectId':this.props.profile.prospect_list.objectId}] 

    $.ajax({
      url:'https://api.parse.com/1/classes/Prospects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(p),
      success: function(res) {
        console.log(res)
         $.ajax({
          url:'https://api.parse.com/1/classes/PeopleSignal/'+personId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function() { }
         })
      },
      error: function(err) { }
    })

    //Create Company Prospect with Pointer to CompanySignal
    $.ajax({
      url:'https://api.parse.com/1/classes/CompanyProspects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(c),
      success: function(res) {
        //Update Company Signal With Pointer to Company Prospect and date prospected
        console.log(res)
         $.ajax({
           url:'https://api.parse.com/1/classes/CompanySignal/'+companyId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function(err) { }
         })
      },
      error: function(err) { }
    })
    
  },

  render: function() {
    person = this.props.person
    return (
      React.DOM.div({className: "panel panel-default signal-card"}, 
        React.DOM.div({className: "panel-body", style: {paddingLeft:25, paddingRight:25}}, 
          React.DOM.h4(null, 
            person.title
          ), 
          React.DOM.h6({style: {display:'inline-block',width:'100%'}}, 
            React.DOM.span({style: { float:'left',maxWidth: '60%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              person.link_text)
          ), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-building"}), 
            "  ", person.signals[0].company), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-map-marker"}), 
            "  ", person.signals[0].location), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-suitcase"}), 
            " ", person.signals[0].job_title, " "), 

          React.DOM.a({href: "javascript:", className: "btn btn-success", 
            onClick: this.prospectPerson, 
            style: {float:'right',marginTop:15, fontWeight:'bold',width:'100%'}}, 
            "Prospect This Person")
        )
      )
    );
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvcGVvcGxlX3NpZ25hbF9jYXJkLmpzLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qKiBAanN4IFJlYWN0LkRPTSAqL1xuXG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiAnZXhwb3J0cycsXG4gIC8vIFNpZ25hbENhcmRcbiAgcHJvc3BlY3RQZXJzb246IGZ1bmN0aW9uKCkge1xuICAgIC8vIEFkZCBUbyBTaWduYWwgTGlzdFxuICAgIC8vIEFkZCBDb21wYW55XG4gICAgLy8gQWRkIFByb3NwZWN0XG4gICAgcGVyc29uID0gdGhpcy5wcm9wcy5wZXJzb25cbiAgICBwZXJzb25JZCA9IHBlcnNvbi5vYmplY3RJZFxuICAgIGNvbXBhbnkgPSB0aGlzLnByb3BzLnBlcnNvbi5jb21wYW55XG4gICAgY29tcGFueUlkID0gY29tcGFueS5vYmplY3RJZFxuICAgIHBlcnNvbi5zaWduYWxJZCA9IHBlcnNvbi5zaWduYWxJZFxuICAgIGNvbXBhbnkuc2lnbmFsSWQgPSBjb21wYW55Lm9iamVjdElkXG4gICAgcCA9IHBlcnNvbjsgYyA9IGNvbXBhbnk7XG4gICAgZGVsZXRlIHAub2JqZWN0SWQ7IGRlbGV0ZSBjLm9iamVjdElkO1xuICAgIGRlbGV0ZSBwLmNsYXNzTmFtZTsgZGVsZXRlIGMuY2xhc3NOYW1lO1xuICAgIGRlbGV0ZSBwLl9fdHlwZTsgZGVsZXRlIGMuX190eXBlO1xuICAgIGRlbGV0ZSBwLmNyZWF0ZWRBdDsgZGVsZXRlIGMuY3JlYXRlZEF0O1xuICAgIGRlbGV0ZSBwLnVwZGF0ZWRBdDsgZGVsZXRlIGMudXBkYXRlZEF0O1xuICAgIHAuY29tcGFueVNpZ25hbCA9IHAuY29tcGFueVxuICAgIGRlbGV0ZSBwLmNvbXBhbnlcblxuICAgIHAubGlua2VkaW5fdXJsID0gcC51cmxcbiAgICBwLmNvbXBhbnkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5jdXJyZW50VXNlcikuY29tcGFueVxuICAgIHAuYXJjaGl2ZWQgPSB0cnVlXG4gICAgcC5sb2FkaW5nID0gdHJ1ZVxuICAgIHAuY2l0eSA9IHAudGl0bGUuc3BsaXQoJy0nKVswXVxuICAgIHAucG9zID0gcC50aXRsZS5zcGxpdCgnLScpLnNsaWNlKC0xKVswXS5zcGxpdCgnIGF0ICcpWzBdXG4gICAgcC5jb21wYW55X25hbWUgPSBwLnRpdGxlLnNwbGl0KCctJykuc2xpY2UoLTEpWzBdLnNwbGl0KCcgYXQgJykuc2xpY2UoLTEpWzBdIFxuICAgIG5hbWUgPSBwLmxpbmtfdGV4dC5zcGxpdCgnfCcpWzBdXG4gICAgbmFtZSA9IG5hbWUuc3BsaXQoJy0nKVswXVxuICAgIHAubmFtZSA9IG5hbWVcbiAgICBwLndlYnNpdGVVcmwgPSBjb21wYW55LndlYnNpdGVVcmxcbiAgICAvLyBBdXRvbWF0aWNhbGx5IEFkZCBUbyBUaGUgU2lnbmFsIExpc3QgSXQgQmVsb25ncyBUb1xuICAgIFxuICAgIGNvbnNvbGUubG9nKHRoaXMucHJvcHMucHJvZmlsZSlcbiAgICBwLmxpc3RzID0gW3snX190eXBlJzonUG9pbnRlcicsJ2NsYXNzTmFtZSc6J1Byb3NwZWN0TGlzdCcsJ29iamVjdElkJzp0aGlzLnByb3BzLnByb2ZpbGUucHJvc3BlY3RfbGlzdC5vYmplY3RJZH1dIFxuXG4gICAgJC5hamF4KHtcbiAgICAgIHVybDonaHR0cHM6Ly9hcGkucGFyc2UuY29tLzEvY2xhc3Nlcy9Qcm9zcGVjdHMnLFxuICAgICAgdHlwZTonUE9TVCcsXG4gICAgICBoZWFkZXJzOmFwcENvbmZpZy5oZWFkZXJzLFxuICAgICAgZGF0YTpKU09OLnN0cmluZ2lmeShwKSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXMpXG4gICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgIHVybDonaHR0cHM6Ly9hcGkucGFyc2UuY29tLzEvY2xhc3Nlcy9QZW9wbGVTaWduYWwvJytwZXJzb25JZCxcbiAgICAgICAgICB0eXBlOidQVVQnLFxuICAgICAgICAgIGhlYWRlcnM6YXBwQ29uZmlnLmhlYWRlcnMsXG4gICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe3Byb3NwZWN0SWQ6IHJlcy5vYmplY3RJZCwgcHJvc3BlY3RlZF9vbjogRGF0ZS5ub3coKS8xMDAwfSksXG4gICAgICAgICAgc3VjY2VzczpmdW5jdGlvbihyZXMpIHsgY29uc29sZS5sb2cocmVzKSB9LFxuICAgICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHsgfVxuICAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICBlcnJvcjogZnVuY3Rpb24oZXJyKSB7IH1cbiAgICB9KVxuXG4gICAgLy9DcmVhdGUgQ29tcGFueSBQcm9zcGVjdCB3aXRoIFBvaW50ZXIgdG8gQ29tcGFueVNpZ25hbFxuICAgICQuYWpheCh7XG4gICAgICB1cmw6J2h0dHBzOi8vYXBpLnBhcnNlLmNvbS8xL2NsYXNzZXMvQ29tcGFueVByb3NwZWN0cycsXG4gICAgICB0eXBlOidQT1NUJyxcbiAgICAgIGhlYWRlcnM6YXBwQ29uZmlnLmhlYWRlcnMsXG4gICAgICBkYXRhOkpTT04uc3RyaW5naWZ5KGMpLFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIC8vVXBkYXRlIENvbXBhbnkgU2lnbmFsIFdpdGggUG9pbnRlciB0byBDb21wYW55IFByb3NwZWN0IGFuZCBkYXRlIHByb3NwZWN0ZWRcbiAgICAgICAgY29uc29sZS5sb2cocmVzKVxuICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgdXJsOidodHRwczovL2FwaS5wYXJzZS5jb20vMS9jbGFzc2VzL0NvbXBhbnlTaWduYWwvJytjb21wYW55SWQsXG4gICAgICAgICAgdHlwZTonUFVUJyxcbiAgICAgICAgICBoZWFkZXJzOmFwcENvbmZpZy5oZWFkZXJzLFxuICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtwcm9zcGVjdElkOiByZXMub2JqZWN0SWQsIHByb3NwZWN0ZWRfb246IERhdGUubm93KCkvMTAwMH0pLFxuICAgICAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24ocmVzKSB7IGNvbnNvbGUubG9nKHJlcykgfSxcbiAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oZXJyKSB7IH1cbiAgICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgZXJyb3I6IGZ1bmN0aW9uKGVycikgeyB9XG4gICAgfSlcbiAgICBcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIHBlcnNvbiA9IHRoaXMucHJvcHMucGVyc29uXG4gICAgcmV0dXJuIChcbiAgICAgIFJlYWN0LkRPTS5kaXYoe2NsYXNzTmFtZTogXCJwYW5lbCBwYW5lbC1kZWZhdWx0IHNpZ25hbC1jYXJkXCJ9LCBcbiAgICAgICAgUmVhY3QuRE9NLmRpdih7Y2xhc3NOYW1lOiBcInBhbmVsLWJvZHlcIiwgc3R5bGU6IHtwYWRkaW5nTGVmdDoyNSwgcGFkZGluZ1JpZ2h0OjI1fX0sIFxuICAgICAgICAgIFJlYWN0LkRPTS5oNChudWxsLCBcbiAgICAgICAgICAgIHBlcnNvbi50aXRsZVxuICAgICAgICAgICksIFxuICAgICAgICAgIFJlYWN0LkRPTS5oNih7c3R5bGU6IHtkaXNwbGF5OidpbmxpbmUtYmxvY2snLHdpZHRoOicxMDAlJ319LCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5zcGFuKHtzdHlsZTogeyBmbG9hdDonbGVmdCcsbWF4V2lkdGg6ICc2MCUnLCB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJ319LCBcbiAgICAgICAgICAgICAgcGVyc29uLmxpbmtfdGV4dClcbiAgICAgICAgICApLCBcbiAgICAgICAgICBSZWFjdC5ET00uaDYobnVsbCwgXCIgXCIsIFJlYWN0LkRPTS5pKHtjbGFzc05hbWU6IFwiZmEgZmEtYnVpbGRpbmdcIn0pLCBcbiAgICAgICAgICAgIFwiwqAgXCIsIHBlcnNvbi5zaWduYWxzWzBdLmNvbXBhbnkpLCBcbiAgICAgICAgICBSZWFjdC5ET00uaDYobnVsbCwgXCIgXCIsIFJlYWN0LkRPTS5pKHtjbGFzc05hbWU6IFwiZmEgZmEtbWFwLW1hcmtlclwifSksIFxuICAgICAgICAgICAgXCLCoCBcIiwgcGVyc29uLnNpZ25hbHNbMF0ubG9jYXRpb24pLCBcbiAgICAgICAgICBSZWFjdC5ET00uaDYobnVsbCwgXCIgXCIsIFJlYWN0LkRPTS5pKHtjbGFzc05hbWU6IFwiZmEgZmEtc3VpdGNhc2VcIn0pLCBcbiAgICAgICAgICAgIFwiwqBcIiwgcGVyc29uLnNpZ25hbHNbMF0uam9iX3RpdGxlLCBcIiBcIiksIFxuXG4gICAgICAgICAgUmVhY3QuRE9NLmEoe2hyZWY6IFwiamF2YXNjcmlwdDpcIiwgY2xhc3NOYW1lOiBcImJ0biBidG4tc3VjY2Vzc1wiLCBcbiAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMucHJvc3BlY3RQZXJzb24sIFxuICAgICAgICAgICAgc3R5bGU6IHtmbG9hdDoncmlnaHQnLG1hcmdpblRvcDoxNSwgZm9udFdlaWdodDonYm9sZCcsd2lkdGg6JzEwMCUnfX0sIFxuICAgICAgICAgICAgXCJQcm9zcGVjdCBUaGlzIFBlcnNvblwiKVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfVxufSk7XG4iXX0=
