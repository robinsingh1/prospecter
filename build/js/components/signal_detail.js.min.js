(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalDetail
  getInitialState: function() {
    return {
      signals: []
    }
  },

  componentDidMount: function() {
    thissss = this;
    currentProfileReport = JSON.stringify({
      __type: 'Pointer',
      className: 'SignalReport',
      objectId: this.props.currentProfileReport.objectId
    })

    console.log('CURRENT PROFILE')
    console.log(currentProfileReport)
    qry = 'where={"signal_report":'+currentProfileReport+'}&include=company_signal,company_signal.signals&order=-createdAt'
    $.ajax({
      url: 'https://api.parse.com/1/classes/PeopleSignal?'+qry,
      type:'GET',
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('SIGNAL DETAIL')
        console.log(res.results)
        thissss.setState({signals: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  returnToCalendarView: function() {
    console.log('return to calendar view')
  },

  render: function() {
    signals = []
    for(i=0;i< this.state.signals.length; i++)
      signals.push(SignalRow({signal: this.state.signals[i]}))

    currentProfileReport = this.props.currentProfileReport
    return (
      React.DOM.div({className: "container", style: {height:356,paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                      paddingLeft:20,paddingTop:5,display:'inline-block'}}, 
              
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          ), 
          React.DOM.h6({style: {fontSize:13,paddingLeft:5,paddingTop:5,display:'inline-block'}}, 
            React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:9}}), "  ", 
            React.DOM.i({className: "fa fa-clock-o"}), "  ", 
            moment(currentProfileReport.createdAt).fromNow(), "  "
          ), 

          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             className: "btn btn-success btn-xs"}, 
            "Prospect All"
          ), 

          React.DOM.div({className: "btn-group", 
               style: {float:'right',marginTop:10,marginRight:10}, 
               'data-toggle': "buttons"}, 
            React.DOM.label({className: "btn btn-xs btn-default active", style: {width:30}}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-user"})
            ), 
            React.DOM.label({className: "btn btn-xs btn-default", style: {width:30}}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-building"})
            )
          )

        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0}}, 
          React.DOM.div({style: {overflow:'auto',height:356}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th({style: {textAlign:'center',width:90}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 

                React.DOM.th(null, "People"), 

                React.DOM.th(null, "Companies"), 

                React.DOM.th({style: {width:90,textAlign:'center'}}
                )

              ), 
              React.DOM.tbody({className: "reports"}, 
                signals
              )
            )
          )
        )
      )
    );
  }
});

var SignalRow = React.createClass({displayName: 'SignalRow',
  render: function() {
    company = (this.props.signal.company_signal) ? this.props.signal.company_signal : {}
    return (
      React.DOM.tr(null, 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, this.props.signal.link_text), 
          React.DOM.h6(null, this.props.signal.title)
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, this.props.signal.title)
        ), 

        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
        )
      )
    )
  }
})

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
