(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalLoading
  getInitialState: function() {
    return {
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    }
  },

  initialize: function() {
    var thiss = this;
    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.currentProfile.objectId
    var channel = pusher.subscribe(objectId);
    channel.bind("my-event", function(data) {
      console.log(data)
      thiss.setState({
        count: data.count,
        prospectName: data.name,
        prospectTitle: data.title,
        companyName: data.company
      })
    });

    // Get Signal Report Count
    // Get Last PeopleSignal Found
    qry = { profile: appConfig.pointer('ProspectProfile',objectId) }
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        count = (res.results[0]) ? res.results[0].people_count : 0
        
        thiss.setState({count: count })
      },
    });
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        thiss.setState({
          prospectName: (res.results[0]) ? res.results[0].link_text : "",
          prospectTitle: (res.results[0]) ? res.results[0].title : "",
          companyName: (res.results[0]) ? res.results[0].company : ""
        })
      },
    });
  },

  componentDidMount: function() {
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        //window.console.log(message);
      }
    };

    this.initialize()
  },

  componentDidUpdate: function() {
  },

  componentWillReceiveProps: function() {
    this.setState({
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    })
    this.initialize()
  },

  render: function() {
    // Show companies for hiring signals
    return (
      React.DOM.div({style: {background:'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)',height:'100%',paddingTop:10}}, 
        React.DOM.div({className: "signal-card", style: {
            width:500,textAlign:'center',display:'block',marginRight:'auto',
            marginLeft:'auto',marginTop:0,height:200
          }}, 

        React.DOM.div({className: "loading-two-balls", style: {height:20,width:20}}, 
          React.DOM.div({className: "dot1", style: {color:'red'}}), 
          React.DOM.div({className: "dot2", style: {color:'red'}})
        ), 
        React.DOM.div({id: "", style: {color:'#1ca3fd', fontWeight:'bold',marginTop:-10,
                          marginLeft:-200, fontSize:32, fontFamily:'Proxima-Nova'}}, 
            this.state.count + " people found."
          ), 
          React.DOM.div({style: {float:'right',marginTop:-48,marginRight:55}}, 
            React.DOM.h6({style: {marginBottom:3, fontWeight:'bold'}}, this.state.prospectName, " - Â ", 
              React.DOM.span({style: {fontWeight:500, fontStyle:'italic'}}, 
                this.state.prospectTitle)), 
            React.DOM.h6({style: {marginTop:0,textAlign:'left'}}, 
              this.state.companyName
            )
          )
        )
      )
    )
  },
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvbWluaW5nX2pvYl9sb2FkaW5nLmpzLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpfXZhciBmPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKiogQGpzeCBSZWFjdC5ET00gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6ICdleHBvcnRzJyxcbiAgLy8gU2lnbmFsTG9hZGluZ1xuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb3VudDogJ34nLFxuICAgICAgcHJvc3BlY3ROYW1lIDogJ34nLFxuICAgICAgcHJvc3BlY3RUaXRsZSA6ICd+JyxcbiAgICAgIGNvbXBhbnlOYW1lIDogJ34nLFxuICAgIH1cbiAgfSxcblxuICBpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGhpc3MgPSB0aGlzO1xuICAgIHZhciBwdXNoZXIgPSBuZXcgUHVzaGVyKCcxYTY4YTk2YzhmZGU5MzhmYTc1YScpO1xuICAgIG9iamVjdElkID0gdGhpcy5wcm9wcy5jdXJyZW50UHJvZmlsZS5vYmplY3RJZFxuICAgIHZhciBjaGFubmVsID0gcHVzaGVyLnN1YnNjcmliZShvYmplY3RJZCk7XG4gICAgY2hhbm5lbC5iaW5kKFwibXktZXZlbnRcIiwgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgY29uc29sZS5sb2coZGF0YSlcbiAgICAgIHRoaXNzLnNldFN0YXRlKHtcbiAgICAgICAgY291bnQ6IGRhdGEuY291bnQsXG4gICAgICAgIHByb3NwZWN0TmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBwcm9zcGVjdFRpdGxlOiBkYXRhLnRpdGxlLFxuICAgICAgICBjb21wYW55TmFtZTogZGF0YS5jb21wYW55XG4gICAgICB9KVxuICAgIH0pO1xuXG4gICAgLy8gR2V0IFNpZ25hbCBSZXBvcnQgQ291bnRcbiAgICAvLyBHZXQgTGFzdCBQZW9wbGVTaWduYWwgRm91bmRcbiAgICBxcnkgPSB7IHByb2ZpbGU6IGFwcENvbmZpZy5wb2ludGVyKCdQcm9zcGVjdFByb2ZpbGUnLG9iamVjdElkKSB9XG4gICAgJC5hamF4KHtcbiAgICAgIHVybDonaHR0cHM6Ly9hcGkucGFyc2UuY29tLzEvY2xhc3Nlcy9TaWduYWxSZXBvcnQnLFxuICAgICAgaGVhZGVyczphcHBDb25maWcuaGVhZGVycyxcbiAgICAgIGRhdGE6IHsnd2hlcmUnOkpTT04uc3RyaW5naWZ5KHFyeSksb3JkZXI6Jy1jcmVhdGVkQXQnfSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAvL2NvbnNvbGUubG9nKHJlcylcbiAgICAgICAgY291bnQgPSAocmVzLnJlc3VsdHNbMF0pID8gcmVzLnJlc3VsdHNbMF0ucGVvcGxlX2NvdW50IDogMFxuICAgICAgICBcbiAgICAgICAgdGhpc3Muc2V0U3RhdGUoe2NvdW50OiBjb3VudCB9KVxuICAgICAgfSxcbiAgICB9KTtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOidodHRwczovL2FwaS5wYXJzZS5jb20vMS9jbGFzc2VzL1Blb3BsZVNpZ25hbCcsXG4gICAgICBoZWFkZXJzOmFwcENvbmZpZy5oZWFkZXJzLFxuICAgICAgZGF0YTogeyd3aGVyZSc6SlNPTi5zdHJpbmdpZnkocXJ5KSxvcmRlcjonLWNyZWF0ZWRBdCd9LFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2cocmVzKVxuICAgICAgICB0aGlzcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgcHJvc3BlY3ROYW1lOiAocmVzLnJlc3VsdHNbMF0pID8gcmVzLnJlc3VsdHNbMF0ubGlua190ZXh0IDogXCJcIixcbiAgICAgICAgICBwcm9zcGVjdFRpdGxlOiAocmVzLnJlc3VsdHNbMF0pID8gcmVzLnJlc3VsdHNbMF0udGl0bGUgOiBcIlwiLFxuICAgICAgICAgIGNvbXBhbnlOYW1lOiAocmVzLnJlc3VsdHNbMF0pID8gcmVzLnJlc3VsdHNbMF0uY29tcGFueSA6IFwiXCJcbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0sXG5cbiAgY29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgIFB1c2hlci5sb2cgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICBpZiAod2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUubG9nKSB7XG4gICAgICAgIC8vd2luZG93LmNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmluaXRpYWxpemUoKVxuICB9LFxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZTogZnVuY3Rpb24oKSB7XG4gIH0sXG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wczogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBjb3VudDogJ34nLFxuICAgICAgcHJvc3BlY3ROYW1lIDogJ34nLFxuICAgICAgcHJvc3BlY3RUaXRsZSA6ICd+JyxcbiAgICAgIGNvbXBhbnlOYW1lIDogJ34nLFxuICAgIH0pXG4gICAgdGhpcy5pbml0aWFsaXplKClcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIC8vIFNob3cgY29tcGFuaWVzIGZvciBoaXJpbmcgc2lnbmFsc1xuICAgIHJldHVybiAoXG4gICAgICBSZWFjdC5ET00uZGl2KHtzdHlsZToge2JhY2tncm91bmQ6J2xpbmVhci1ncmFkaWVudCgjZGFlOGZmLCNkYWU4ZmYpJywgYmFja2dyb3VuZEltYWdlOiAncmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCBjZW50ZXIgY2VudGVyLCNmZmYsI2RmZjFmZCA5MDBweCknLGhlaWdodDonMTAwJScscGFkZGluZ1RvcDoxMH19LCBcbiAgICAgICAgUmVhY3QuRE9NLmRpdih7Y2xhc3NOYW1lOiBcInNpZ25hbC1jYXJkXCIsIHN0eWxlOiB7XG4gICAgICAgICAgICB3aWR0aDo1MDAsdGV4dEFsaWduOidjZW50ZXInLGRpc3BsYXk6J2Jsb2NrJyxtYXJnaW5SaWdodDonYXV0bycsXG4gICAgICAgICAgICBtYXJnaW5MZWZ0OidhdXRvJyxtYXJnaW5Ub3A6MCxoZWlnaHQ6MjAwXG4gICAgICAgICAgfX0sIFxuXG4gICAgICAgIFJlYWN0LkRPTS5kaXYoe2NsYXNzTmFtZTogXCJsb2FkaW5nLXR3by1iYWxsc1wiLCBzdHlsZToge2hlaWdodDoyMCx3aWR0aDoyMH19LCBcbiAgICAgICAgICBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwiZG90MVwiLCBzdHlsZToge2NvbG9yOidyZWQnfX0pLCBcbiAgICAgICAgICBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwiZG90MlwiLCBzdHlsZToge2NvbG9yOidyZWQnfX0pXG4gICAgICAgICksIFxuICAgICAgICBSZWFjdC5ET00uZGl2KHtpZDogXCJcIiwgc3R5bGU6IHtjb2xvcjonIzFjYTNmZCcsIGZvbnRXZWlnaHQ6J2JvbGQnLG1hcmdpblRvcDotMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbkxlZnQ6LTIwMCwgZm9udFNpemU6MzIsIGZvbnRGYW1pbHk6J1Byb3hpbWEtTm92YSd9fSwgXG4gICAgICAgICAgICB0aGlzLnN0YXRlLmNvdW50ICsgXCIgcGVvcGxlIGZvdW5kLlwiXG4gICAgICAgICAgKSwgXG4gICAgICAgICAgUmVhY3QuRE9NLmRpdih7c3R5bGU6IHtmbG9hdDoncmlnaHQnLG1hcmdpblRvcDotNDgsbWFyZ2luUmlnaHQ6NTV9fSwgXG4gICAgICAgICAgICBSZWFjdC5ET00uaDYoe3N0eWxlOiB7bWFyZ2luQm90dG9tOjMsIGZvbnRXZWlnaHQ6J2JvbGQnfX0sIHRoaXMuc3RhdGUucHJvc3BlY3ROYW1lLCBcIiAtIMKgXCIsIFxuICAgICAgICAgICAgICBSZWFjdC5ET00uc3Bhbih7c3R5bGU6IHtmb250V2VpZ2h0OjUwMCwgZm9udFN0eWxlOidpdGFsaWMnfX0sIFxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUucHJvc3BlY3RUaXRsZSkpLCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5oNih7c3R5bGU6IHttYXJnaW5Ub3A6MCx0ZXh0QWxpZ246J2xlZnQnfX0sIFxuICAgICAgICAgICAgICB0aGlzLnN0YXRlLmNvbXBhbnlOYW1lXG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICB9LFxufSk7XG4iXX0=
