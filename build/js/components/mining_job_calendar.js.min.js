(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // MiningJobCalendar
  getInitialState: function() {
    return {
      reports : []
    }
  },

  getSignalReport: function() {
    thissss = this;
    qry = 'where='+JSON.stringify({profile:{
      __type:'Pointer',
      className:'ProspectProfile',
      objectId:this.props.currentProfile.objectId
    }})

    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport?order=-createdAt',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        thissss.setState({reports: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    this.getSignalReport()
  },

  componentDidUpdate: function() {
    this.getSignalReport()
  },

  setCurrentReport: function(newReport) {
    console.log('CURRENT REPORT')
    console.log(newReport)
    this.props.setCurrentReport(newReport)
  },

  render: function() {
    reports = []
    for(i=0;i< this.state.reports.length; i++)
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    setCurrentView: this.setCurrentView, 
                                    report: this.state.reports[i]}))

    return (
      React.DOM.div({className: "container", style: {height:400, overflow:'auto',paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           overflow:'auto',height:356}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                    React.DOM.i({className: "fa fa-clock-o"}), " " + ' ' +
                    "Scheduled"
                ), 
                React.DOM.th({style: {textAlign:'center'}}, "Prospects"), 
                React.DOM.th({style: {width:150,textAlign:'center'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  rowClick: function() {
    this.props.setCurrentReport(this.props.report)
  },

  prospectAllSignalReportProspects: function(e) {
    e.stopPropagation()
    // Update UI
    console.log(this.props.report.objectId)
    thiss = this
    $.ajax({
      //url:'http://nameless-retreat-3525.herokuapp.com/prospect_signal_report',
      url:'http://127.0.0.1:5000/prospect_signal_report',
      data: {signal_report_id: thiss.props.report.objectId },
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err) }
    })
  },

  render: function() {
    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td(null), 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          React.DOM.i({className: "fa fa-cloud-download", style: {color:'#555'}})
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  People found."
          )
        ), 
        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", 
            onClick: this.prospectAllSignalReportProspects, 
             style: {fontWeight:'bold',marginTop:5}, 
             className: "btn btn-xs btn-success"}, 
            "Prospect All"
          )
        )
      )
    )
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
