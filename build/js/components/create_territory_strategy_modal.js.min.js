/** @jsx React.DOM */
var Jigsaw = require("../lib/jigsaw.min.js")

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createTerritoryStrategyModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-globe"}), "  " + ' ' +
                    "Create Territory Stategy"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Company Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control company-profile-name", 
                   placeholder: "Company Profile Name ..."})
          )
        ), 
                  IndustryMenu(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },

  createProfile: function() {
    profileName = $(".profileName").val()

    titleProfile = {
      'className': 'ProspectTitleProfile',
      'title_keywords': $('.prospect-profile-title').tagsinput('items').reverse()
    }

    revenueProfile = {
      className: "RevenueProfile",
      revenues: _.map($(".revenues:checked"), function(box) { return $(box).parent().parent().text().trim() })
    }

    industryProfile = {
      className: "IndustryProfile",
      industries: _.map($(".industries:checked"), function(box) { return $(box).parent().parent().text().trim() })
    }

    companySizeProfile = {
      className: "EmployeeProfile",
      employees: _.map($(".employees:checked"), function(box) { return $(box).parent().parent().text().trim() })
    }

    profiles = [titleProfile, revenueProfile, industryProfile, companySizeProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });
    console.log(nonemptyProfiles)

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      type: 'prospect_profile',
      mining_job:true,
      list_type:"territory",
      only_people:true,
      timestamp: moment().valueOf(),
      done: 0,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      user_company: Parse._user_company
    }

    if(nonemptyProfiles.length) {
      //this.props.addProfile(newProfile)
      this.persistSignal(nonemptyProfiles, newProfile)
      $('.modal').click()
      $('.prospect-profile-title').val('')
    }
  },

  createCompanyProfile: function() {
    profileName = $(".company-profile-name").val()
    industryProfile = {
      'className': 'IndustryProfile',
      'industries' : $('.company-profile-industries').tagsinput('items').reverse()
    }

    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.company-profile-location').tagsinput('items').reverse()
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#company-profile-employeeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#company-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(locationProfile)
    
    profiles = [industryProfile, locationProfile,
                employeeProfile, revenueProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      mining_job:true,
      list_type:'territory',
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)

    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Company Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control company-profile-name", 
                   placeholder: "Company Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-industries"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.span({style: {display:'block',marginBottom:-10, display:'none'}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-location"}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
        React.DOM.div(null, 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,
                        width:140,marginBottom:20}}, "Company Size "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {width:'75.5%'}, 
                id: "company-profile-employeeBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 1 - 20"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 20 - 50"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 50 - 100"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 100 - 250"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 250 - 1000"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 1000 +"
                )
              ), 

              React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
                "Approx. Revenue  "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {display:'none'}, 
                id: "company-profile-companyRevenueBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " ", '< $1M'
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $1M - $5M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $5M - $25M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $25M +"
                )
              )
        ), 

          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
      )
    )
  },
});

var IndustryMenu = React.createClass({displayName: 'IndustryMenu',

  render: function() {
    revenues = _.map(Jigsaw._annual_revenue(), function(val, key) {
      return SelectGroup({name: key, value: val, _class: "revenues"})
    })
    employees = _.map(Jigsaw._number_of_employees(), function(val, key) {
      return SelectGroup({name: key, value: val, _class: "employees"})
    })
    industries = _.map(Jigsaw._industries(), function(val, key) {
      return SelectGroup({name: key, value: val, _class: "industries"})
    })

    return (
    React.DOM.div({className: "row"}, 
      React.DOM.div({className: "col-md-4"}, 
        React.DOM.h6(null, "Industry"), 
        React.DOM.div({className: "well", style: {height:200, overflow:"auto"}}, 
          industries
        )
      ), 
      React.DOM.div({className: "col-md-4"}, 
        React.DOM.h6(null, "Revenue"), 
        React.DOM.div({className: "well", style: {height:200, overflow:"auto"}}, 
          revenues
        )
      ), 
      React.DOM.div({className: "col-md-4"}, 
        React.DOM.h6(null, "Company Size"), 
        React.DOM.div({className: "well", style: {height:200, overflow:"auto"}}, 
          employees
        )
      )
    )
    )
  }
})

var SelectGroup = React.createClass({displayName: 'SelectGroup',
  getInitialState: function() {
    return {
      hidden: true,
    }
  },

  toggleHidden: function() {
    this.setState({hidden: !this.state.hidden})
  },

  render: function() {

    icon = (this.state.hidden) ? "fa fa-plus" : "fa fa-minus"
    
    plus_btn = React.DOM.i({className: icon, onClick: this.toggleHidden, 
                 style: {float:"left",marginRight:5,marginTop:7,
                         fontSize:9,cursor:"pointer"}})
    plus_btn = (this.props.subs) ? plus_btn : ""
    selects = React.DOM.span(null, " ", plus_btn, 
              React.DOM.label({className: "checkbox-inline"}, 
                React.DOM.input({type: "checkbox", id: "inlineCheckbox1", className: this.props._class, 
                      value: this.props.value}), 
                this.props.name
            ), React.DOM.br(null)
            )
    subs = _.map(this.props.subs, function(sub) {
            return React.DOM.span({style: {marginLeft:30}}, 
              React.DOM.label({className: "checkbox-inline"}, 
              React.DOM.input({type: "checkbox", id: "inlineCheckbox1", value: "option1"}), 
                sub
            ), React.DOM.br(null)
          )
    })
    select = (this.state.hidden) ? selects : _.flatten([[selects], subs])
    return (
      React.DOM.span(null, " ", select, " ")
    )
  }
})
