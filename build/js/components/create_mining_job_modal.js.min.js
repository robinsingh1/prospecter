(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createSignalModal
  getInitialState: function() {
    mining_days = this.props.currentProfile.mining_days
    mining_days = (mining_days) ? mining_days : []
    return {
      mining_days : mining_days
    }
  },

  componentDidUpdate: function() { 
    /*
    mining_days = this.props.currentProfile.mining_days
    mining_days = (mining_days) ? mining_days : []
    this.setState({mining_days: mining_days})
    */
  },

  componentWillReceiveProps: function(nextProps) {
    console.log(nextProps)
    mining_days = nextProps.currentProfile.mining_days
    mining_days = (mining_days) ? mining_days : []
    this.setState({mining_days: mining_days})
  },

  createSignal: function() { },

  createMiningJob: function(date) {
    console.log('create mining job')
    mining_days = this.state.mining_days
    mining_days.push(date)
    this.setState({mining_days: mining_days})

    // Persist Mining_days
    // Start mining job for day
    // Add signal report for that Mining Job
    
      /*
      $.ajax({
        url:'',
        headers:appConfig.headers
        data:{},
        success: function(res) {},
        error: function(err) {},
      })
    */
  },

  render: function() {
    // moment.utc(moment().startOf('day')).valueOf()/1000
    // recieve completed days as props
    console.log(this.props.currentProfile)
    console.log(this.state.mining_days)
    dates = []
    for(i=0;i< 30; i++) {  
      date = moment().subtract((i+1), 'days').startOf('day')
      mining_days = _.indexOf(this.state.mining_days, date.valueOf()/1000) != -1
      dates.push(DownloadDateRow({updateDate: this.updateDate, 
                                  createMiningJob: this.createMiningJob, 
                                  mining_day: mining_days, 
                                  date: date}))
    }

    return (
      React.DOM.div({className: "modal fade bs-createMiningJob-modal-md", 
           tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createMiningJobModal", 
           style: {top:'50px',overflow:'hidden'}}, 
        React.DOM.div({className: "modal-dialog modal-sm", style: {width:350}}, 
          React.DOM.div({className: "modal-content"}, 
            React.DOM.div({className: "modal-header"}, 
              React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                React.DOM.i({className: "fa fa-cloud-download"}), " " + ' ' +
                "Download Prospects"
              ), 
              React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                 onClick: this.createMiningJob, 
                 style: {float:'right',marginTop:-28,
                         marginRight:-5,display:'none'}}, 
                 "Download"
              )
            ), 
            React.DOM.div({className: "modal-body"}, 

              React.DOM.ul({className: "list-group date-download-prospects", 
                  style: {height:400,overflow:'auto',
                  borderBottom:'solid 1px #ddd',
                  cursor:'pointer',
                  borderTop:'solid 1px #ddd'}}, 
                React.DOM.h6({style: {margin:0}}, dates)
              )

            )
          )
        )
      )
    );
  },
});

var DownloadDateRow = React.createClass({displayName: 'DownloadDateRow',
  updateDate: function() {
    //this.createMiningJob()
    date = moment.utc(moment(this.props.date).startOf('day')).valueOf()/1000
    this.props.createMiningJob(date)
  },

  render: function() {
    loading = (this.props.mining_day) ?  React.DOM.div({className: "profile-loading", style: {float:'right',height:20,width:20}}, 
            React.DOM.div({className: "double-bounce1", style: {backgroundColor:'#5cb85c'}}), 
            React.DOM.div({className: "double-bounce2", style: {backgroundColor:'#5cb85c'}})
          ) : ""
    loading = ""
    return (
        React.DOM.li({onClick: this.updateDate, style: {textAlign:'center'}, 
          className: "list-group-item download-date bg-success", 
          style: (this.props.mining_day) ? {backgroundColor:'#dff0d8',textAlign:'center'} : {textAlign:'center'}}, 
          React.DOM.span({style: {width:85}}, 
            React.DOM.i({className: "fa fa-calendar"}), " ", 
            this.props.date.format('ll'), "      "
          ), 
          React.DOM.a({href: "javascript:", style: {width:89}, 
      className: (this.props.mining_day) ? "btn btn-success btn-xs disabled" : "btn btn-success btn-xs"}, 
            (this.props.mining_day) ? "Downloading" : "Download"), 
          loading
        )
    )
  }
})


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
