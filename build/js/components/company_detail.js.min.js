/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //CompanyDetail
  getInitialState: function() {
    return {
      currentScreen:"press",
      press: [],
    }
  },

  changeScreen: function() {
  },

  toggleDetailMode: function() {
    console.log("detail mode")
    this.props.toggleDetailMode()
  },

  getData: function() {
    company = this.props.detailCompany
    console.log(company.company_name)
    qry = {company_name: company.company_name}
    var _this = this;
    Parse._get('CompanyBlogPost', qry).done(function(res) {
      _this.setState({blog_posts: res.results})
    })
    Parse._get('CompanyTechnology', qry).done(function(res) {
      _this.setState({technologies: res.results})
    })
    Parse._get('CompanyPressRelease', qry).done(function(res) {
      _this.setState({press_releases: res.results})
    })
    Parse._get('CompanyGlassdoorReview', qry).done(function(res) {
      _this.setState({reviews: res.results})
    })
    Parse._get('CompanyEmployee', qry).done(function(res) {
      _this.setState({employees: res.results})
    })
    Parse._get('CompanySimilar', qry).done(function(res) {
      _this.setState({similar: res.results})
    })
    Parse._get('CompanyHiring', qry).done(function(res) {
      _this.setState({hiring: res.results})
    })
    Parse._get('CompanyNews', qry).done(function(res) {
      _this.setState({news: res.results})
    })
  },

  changeScreen: function(e) {
    this.setState({currentScreen: $(e.target).text().toLowerCase().trim()})
  },

  componentDidUpdate: function() {
    //this.getData()
  },

  componentWillReceiveProps: function() {
    this.getData()
  },

  componentDidMount: function() {
    this.getData()
  },

  render: function() {
    //console.log(this.state)
    tab_1 = "campaign-tab-link"
    tab_2 = "campaign-tab-link"
    tab_3 = "campaign-tab-link"
    tab_4 = "campaign-tab-link"
    tab_5 = "campaign-tab-link"

    if(this.state.currentScreen == "press")
      the_screen = CompanyPress({press: this.state.press})
    else if(this.state.currentScreen == "news")
      the_screen = CompanyNews({news: this.state.news})
    else if(this.state.currentScreen == "blogs")
      the_screen = CompanyBlogPosts({blog_posts: this.state.blog_posts})
    else if(this.state.currentScreen == "hiring")
      the_screen = CompanyHiring({hiring: this.state.hiring})
    else if(this.state.currentScreen == "employees")
      the_screen = CompanyEmployees({employees: this.state.employees})
    else if(this.state.currentScreen == "similar")
      the_screen = CompanySimilar({similar: this.state.similar})
    else if(this.state.currentScreen == "tech")
      the_screen = CompanyTechnology({technologies: this.state.technologies})
    else if(this.state.currentScreen == "reviews")
      the_screen = CompanyReviews({reviews: this.state.reviews})
    else 
      the_screen = "lol"
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "company_detail_overlay", onClick: this.toggleDetailMode}, " "), 
      React.DOM.div({className: "company_detail_mode"}, 
    React.DOM.div({className: "row"}, 
      React.DOM.div({className: "col-md-2"}, 
      React.DOM.div({style: {backgroundImage: "url("+company.logo+")",height:100,width:100,marginLeft:10,marginTop:10}, 
          className: "company-img-thumbnail"})
      ), 
      React.DOM.div({className: "col-md-3", style: {paddingRight:0,paddingLeft:28,paddingTop:8}}, 
        React.DOM.h4({style: {fontWeight:"bold",fontSize:14}}, company.name), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.industry), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.headcount), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.city)
      ), 
      React.DOM.div({className: "col-md-7"}, 
        React.DOM.p({className: "lead", style: {marginTop:10,fontSize:12,height:100,overflow:'auto'}}, company.description)
      )
    ), 


              React.DOM.ul({className: "nav nav-tabs campaign-tabs detail-tab", role: "tablist", style: {paddingRight:0}}, 
                React.DOM.li({className: "campaign-tab"}, " ", React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_1}, "Press")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_2}, "News")), 
                React.DOM.li({className: "campaign-tab"}, 
                  React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_3, style: {fontSize:12}}, 
                    "Blogs")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_4}, "Hiring")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Employees")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Similar")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Tech")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Reviews"))
              ), 
      the_screen
      )
      )
    )
  }
});

var CompanyReviews = React.createClass({displayName: 'CompanyReviews',
  componentDidUpdate: function() {
    console.log(this.props.reviews)
  },
  render: function() {
    review_rows = ""
    review_rows = _.map(this.props.reviews, function(review) {
            return React.DOM.tr(null, 
              React.DOM.td(null, " ", review.extra, " "), 
              React.DOM.td(null, review.pros), 
              React.DOM.td(null, review.cons), 
              React.DOM.td(null, review.summary)
            )
          })
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Info"), 
            React.DOM.th(null, "Pros"), 
            React.DOM.th(null, "Cons"), 
            React.DOM.th(null, "Summary")
          ), 
          React.DOM.tbody(null, 
            review_rows
          )
        )
      )
    )
  }
})

var CompanyPress = React.createClass({displayName: 'CompanyPress',
  componentDidUpdate: function() {
    console.log(this.props.press)
  },
  render: function() {
    press_rows = ""
    press_rows = _.map(this.props.press, function(technology) {
            return React.DOM.tr(null, 
              React.DOM.td(null, 
              React.DOM.div({style: {backgroundImage: "url("+technology.logo+")",height:20,width:20,marginLeft:10,marginTop:10}, className: "company-img-thumbnail"})
              ), 
              React.DOM.td(null, technology.tech_name), 
              React.DOM.td(null, technology.tech_desc)
            )
          })
    press_rows = (press_rows.length) ? press_rows : EmptyInfoPanel(null)
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Name"), 
            React.DOM.th(null, "Description")
          ), 
          React.DOM.tbody(null, 
            press_rows
          )
        )
      )
    )
  }
})

var EmptyInfoPanel = React.createClass({displayName: 'EmptyInfoPanel',
  render: function() {
    return (
      React.DOM.div({style: {position:'absolute',top:250,left:50}}, 
        React.DOM.h1({className: "text-muted", style: {fontWeight:'bold',color:'#ccc'}}, 
          React.DOM.i({className: "fa fa-search"}), " Â " + ' ' +
          "Unable to find information"
        )
      )
    )
  },
})


var CompanyNews = React.createClass({displayName: 'CompanyNews',
  render: function() {
    news_rows = EmptyInfoPanel(null)
    return (
      React.DOM.div(null, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Name"), 
            React.DOM.th(null, "Description")
          ), 
          React.DOM.tbody(null, 
            news_rows
          )
        )
      )
    )
  }
})
var CompanyBlogPosts = React.createClass({displayName: 'CompanyBlogPosts',
  render: function() {
    rows = ""
    rows = _.map(this.props.blog_posts, function(blog) {
            return React.DOM.tr(null, 
              React.DOM.td(null, 
                React.DOM.a({href: blog.link}, blog.link_text)
              ), 
              React.DOM.td(null, blog.link_span)
            )
          })
    rows = (rows.length) ? rows : EmptyInfoPanel(null)
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Blog Post"), 
            React.DOM.th(null, "Description")
          ), 
          React.DOM.tbody(null, 
            rows
          )
        )
      )
    )
  }
});

var CompanyHiring = React.createClass({displayName: 'CompanyHiring',
  render: function() {
    hiring_rows = ""
    hiring_rows = _.map(this.props.hiring, function(hiring) {
            return React.DOM.tr(null, 
              React.DOM.td(null, hiring.date), 
              React.DOM.td(null, hiring.job_title), 
              React.DOM.td(null, hiring.location), 
              React.DOM.td(null, hiring.summary)
            )
          })

    hiring_rows = (hiring_rows.length) ? hiring_rows : EmptyInfoPanel(null)
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Date"), 
            React.DOM.th(null, "Job Title "), 
            React.DOM.th(null, "Location "), 
            React.DOM.th(null, "Summary")
          ), 
          React.DOM.tbody(null, 
            hiring_rows
          )
        )
      )
    )
  }
})
var CompanyEmployees = React.createClass({displayName: 'CompanyEmployees',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})
var CompanySimilar = React.createClass({displayName: 'CompanySimilar',
  render: function() {
    similar_rows = ""
    similar_rows = _.map(this.props.similar, function(similar) {
            return React.DOM.tr(null, 
              React.DOM.td(null, 
                React.DOM.a({href: similar.link}, 
                  similar.title)
              ), 
              React.DOM.td(null, similar.description)
            )
          })
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Title "), 
            React.DOM.th(null, "Description ")
          ), 
          React.DOM.tbody(null, 
            similar_rows
          )
        )
      )
    )
  }
})
var CompanyTechnology = React.createClass({displayName: 'CompanyTechnology',
  render: function() {
    tech_rows = ""
    tech_rows = _.map(this.props.technologies, function(technology) {
            return React.DOM.tr(null, 
              React.DOM.td(null, 
              React.DOM.div({style: {backgroundImage: "url("+technology.logo+")",height:20,width:20,marginLeft:10,marginTop:10}, className: "company-img-thumbnail"})
              ), 
              React.DOM.td(null, technology.tech_name), 
              React.DOM.td(null, technology.tech_desc)
            )
          })
    return (
      React.DOM.div({style: {height:304,overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Name"), 
            React.DOM.th(null, "Description")
          ), 
          React.DOM.tbody(null, 
            tech_rows
          )
        )
      )
    )
  }
})
