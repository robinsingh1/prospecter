(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalLoading
  getInitialState: function() {
    return {
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    }
  },

  initialize: function() {
    var thiss = this;
    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.currentProfile.objectId
    var channel = pusher.subscribe(objectId);
    channel.bind("my-event", function(data) {
      console.log(data)
      thiss.setState({
        count: data.count,
        prospectName: data.name,
        prospectTitle: data.title,
        companyName: data.company
      })
    });

    // Get Signal Report Count
    // Get Last PeopleSignal Found
    qry = { profile: appConfig.pointer('ProspectProfile',objectId) }
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        count = (res.results[0]) ? res.results[0].people_count : 0
        
        thiss.setState({count: count })
      },
    });
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        thiss.setState({
          prospectName: (res.results[0]) ? res.results[0].link_text : "",
          prospectTitle: (res.results[0]) ? res.results[0].title : "",
          companyName: (res.results[0]) ? res.results[0].company : ""
        })
      },
    });
  },

  componentDidMount: function() {
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        //window.console.log(message);
      }
    };

    this.initialize()
  },

  componentDidUpdate: function() {
  },

  componentWillReceiveProps: function() {
    this.setState({
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    })
    this.initialize()
  },

  render: function() {
    // Show companies for hiring signals
    return (
      React.DOM.div({style: {background:'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)',height:'100%',paddingTop:10}}, 
        React.DOM.div({className: "signal-card", style: {
            width:500,textAlign:'center',display:'block',marginRight:'auto',
            marginLeft:'auto',marginTop:0,height:200
          }}, 

        React.DOM.div({className: "loading-two-balls", style: {height:20,width:20}}, 
          React.DOM.div({className: "dot1", style: {color:'black'}}), 
          React.DOM.div({className: "dot2", style: {color:'black'}})
        ), 
        React.DOM.div({id: "", style: {color:'#1ca3fd', fontWeight:'bold',marginTop:-10,
                          marginLeft:-200, fontSize:32, fontFamily:'Proxima-Nova'}}, 
            this.state.count + " people found."
          ), 
          React.DOM.div({style: {float:'right',marginTop:-48,marginRight:55}}, 
            React.DOM.h6({style: {marginBottom:3, fontWeight:'bold'}}, this.state.prospectName, " - Â ", 
              React.DOM.span({style: {fontWeight:500, fontStyle:'italic'}}, 
                this.state.prospectTitle)), 
            React.DOM.h6({style: {marginTop:0,textAlign:'left'}}, 
              this.state.companyName
            )
          )
        )
      )
    )
  },
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvc2lnbmFsX2xvYWRpbmcuanMubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qKiBAanN4IFJlYWN0LkRPTSAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogJ2V4cG9ydHMnLFxuICAvLyBTaWduYWxMb2FkaW5nXG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvdW50OiAnficsXG4gICAgICBwcm9zcGVjdE5hbWUgOiAnficsXG4gICAgICBwcm9zcGVjdFRpdGxlIDogJ34nLFxuICAgICAgY29tcGFueU5hbWUgOiAnficsXG4gICAgfVxuICB9LFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0aGlzcyA9IHRoaXM7XG4gICAgdmFyIHB1c2hlciA9IG5ldyBQdXNoZXIoJzFhNjhhOTZjOGZkZTkzOGZhNzVhJyk7XG4gICAgb2JqZWN0SWQgPSB0aGlzLnByb3BzLmN1cnJlbnRQcm9maWxlLm9iamVjdElkXG4gICAgdmFyIGNoYW5uZWwgPSBwdXNoZXIuc3Vic2NyaWJlKG9iamVjdElkKTtcbiAgICBjaGFubmVsLmJpbmQoXCJteS1ldmVudFwiLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgdGhpc3Muc2V0U3RhdGUoe1xuICAgICAgICBjb3VudDogZGF0YS5jb3VudCxcbiAgICAgICAgcHJvc3BlY3ROYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgIHByb3NwZWN0VGl0bGU6IGRhdGEudGl0bGUsXG4gICAgICAgIGNvbXBhbnlOYW1lOiBkYXRhLmNvbXBhbnlcbiAgICAgIH0pXG4gICAgfSk7XG5cbiAgICAvLyBHZXQgU2lnbmFsIFJlcG9ydCBDb3VudFxuICAgIC8vIEdldCBMYXN0IFBlb3BsZVNpZ25hbCBGb3VuZFxuICAgIHFyeSA9IHsgcHJvZmlsZTogYXBwQ29uZmlnLnBvaW50ZXIoJ1Byb3NwZWN0UHJvZmlsZScsb2JqZWN0SWQpIH1cbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOidodHRwczovL2FwaS5wYXJzZS5jb20vMS9jbGFzc2VzL1NpZ25hbFJlcG9ydCcsXG4gICAgICBoZWFkZXJzOmFwcENvbmZpZy5oZWFkZXJzLFxuICAgICAgZGF0YTogeyd3aGVyZSc6SlNPTi5zdHJpbmdpZnkocXJ5KSxvcmRlcjonLWNyZWF0ZWRBdCd9LFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIC8vY29uc29sZS5sb2cocmVzKVxuICAgICAgICBjb3VudCA9IChyZXMucmVzdWx0c1swXSkgPyByZXMucmVzdWx0c1swXS5wZW9wbGVfY291bnQgOiAwXG4gICAgICAgIFxuICAgICAgICB0aGlzcy5zZXRTdGF0ZSh7Y291bnQ6IGNvdW50IH0pXG4gICAgICB9LFxuICAgIH0pO1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6J2h0dHBzOi8vYXBpLnBhcnNlLmNvbS8xL2NsYXNzZXMvUGVvcGxlU2lnbmFsJyxcbiAgICAgIGhlYWRlcnM6YXBwQ29uZmlnLmhlYWRlcnMsXG4gICAgICBkYXRhOiB7J3doZXJlJzpKU09OLnN0cmluZ2lmeShxcnkpLG9yZGVyOictY3JlYXRlZEF0J30sXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhyZXMpXG4gICAgICAgIHRoaXNzLnNldFN0YXRlKHtcbiAgICAgICAgICBwcm9zcGVjdE5hbWU6IChyZXMucmVzdWx0c1swXSkgPyByZXMucmVzdWx0c1swXS5saW5rX3RleHQgOiBcIlwiLFxuICAgICAgICAgIHByb3NwZWN0VGl0bGU6IChyZXMucmVzdWx0c1swXSkgPyByZXMucmVzdWx0c1swXS50aXRsZSA6IFwiXCIsXG4gICAgICAgICAgY29tcGFueU5hbWU6IChyZXMucmVzdWx0c1swXSkgPyByZXMucmVzdWx0c1swXS5jb21wYW55IDogXCJcIlxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICB9KTtcbiAgfSxcblxuICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG4gICAgUHVzaGVyLmxvZyA9IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgIGlmICh3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS5sb2cpIHtcbiAgICAgICAgLy93aW5kb3cuY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuaW5pdGlhbGl6ZSgpXG4gIH0sXG5cbiAgY29tcG9uZW50RGlkVXBkYXRlOiBmdW5jdGlvbigpIHtcbiAgfSxcblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNvdW50OiAnficsXG4gICAgICBwcm9zcGVjdE5hbWUgOiAnficsXG4gICAgICBwcm9zcGVjdFRpdGxlIDogJ34nLFxuICAgICAgY29tcGFueU5hbWUgOiAnficsXG4gICAgfSlcbiAgICB0aGlzLmluaXRpYWxpemUoKVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgLy8gU2hvdyBjb21wYW5pZXMgZm9yIGhpcmluZyBzaWduYWxzXG4gICAgcmV0dXJuIChcbiAgICAgIFJlYWN0LkRPTS5kaXYoe3N0eWxlOiB7YmFja2dyb3VuZDonbGluZWFyLWdyYWRpZW50KCNkYWU4ZmYsI2RhZThmZiknLCBiYWNrZ3JvdW5kSW1hZ2U6ICdyYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IGNlbnRlciBjZW50ZXIsI2ZmZiwjZGZmMWZkIDkwMHB4KScsaGVpZ2h0OicxMDAlJyxwYWRkaW5nVG9wOjEwfX0sIFxuICAgICAgICBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwic2lnbmFsLWNhcmRcIiwgc3R5bGU6IHtcbiAgICAgICAgICAgIHdpZHRoOjUwMCx0ZXh0QWxpZ246J2NlbnRlcicsZGlzcGxheTonYmxvY2snLG1hcmdpblJpZ2h0OidhdXRvJyxcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ6J2F1dG8nLG1hcmdpblRvcDowLGhlaWdodDoyMDBcbiAgICAgICAgICB9fSwgXG5cbiAgICAgICAgUmVhY3QuRE9NLmRpdih7Y2xhc3NOYW1lOiBcImxvYWRpbmctdHdvLWJhbGxzXCIsIHN0eWxlOiB7aGVpZ2h0OjIwLHdpZHRoOjIwfX0sIFxuICAgICAgICAgIFJlYWN0LkRPTS5kaXYoe2NsYXNzTmFtZTogXCJkb3QxXCIsIHN0eWxlOiB7Y29sb3I6J2JsYWNrJ319KSwgXG4gICAgICAgICAgUmVhY3QuRE9NLmRpdih7Y2xhc3NOYW1lOiBcImRvdDJcIiwgc3R5bGU6IHtjb2xvcjonYmxhY2snfX0pXG4gICAgICAgICksIFxuICAgICAgICBSZWFjdC5ET00uZGl2KHtpZDogXCJcIiwgc3R5bGU6IHtjb2xvcjonIzFjYTNmZCcsIGZvbnRXZWlnaHQ6J2JvbGQnLG1hcmdpblRvcDotMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbkxlZnQ6LTIwMCwgZm9udFNpemU6MzIsIGZvbnRGYW1pbHk6J1Byb3hpbWEtTm92YSd9fSwgXG4gICAgICAgICAgICB0aGlzLnN0YXRlLmNvdW50ICsgXCIgcGVvcGxlIGZvdW5kLlwiXG4gICAgICAgICAgKSwgXG4gICAgICAgICAgUmVhY3QuRE9NLmRpdih7c3R5bGU6IHtmbG9hdDoncmlnaHQnLG1hcmdpblRvcDotNDgsbWFyZ2luUmlnaHQ6NTV9fSwgXG4gICAgICAgICAgICBSZWFjdC5ET00uaDYoe3N0eWxlOiB7bWFyZ2luQm90dG9tOjMsIGZvbnRXZWlnaHQ6J2JvbGQnfX0sIHRoaXMuc3RhdGUucHJvc3BlY3ROYW1lLCBcIiAtIMKgXCIsIFxuICAgICAgICAgICAgICBSZWFjdC5ET00uc3Bhbih7c3R5bGU6IHtmb250V2VpZ2h0OjUwMCwgZm9udFN0eWxlOidpdGFsaWMnfX0sIFxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUucHJvc3BlY3RUaXRsZSkpLCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5oNih7c3R5bGU6IHttYXJnaW5Ub3A6MCx0ZXh0QWxpZ246J2xlZnQnfX0sIFxuICAgICAgICAgICAgICB0aGlzLnN0YXRlLmNvbXBhbnlOYW1lXG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICB9LFxufSk7XG4iXX0=
