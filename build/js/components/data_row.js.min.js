/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // DataRow
  getInitialState: function() {
    return { }
  },

  toggleDetailMode: function(e) {
    e.stopPropagation()
    this.props.toggleDetailMode(this.props.prospect.company)
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect
    company = (prospect.company) ? prospect.company : prospect.company_info
    company = (company) ? company : {}
    console.log(prospect)

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    // console.log(this.state.checked)
    // console.log(checked)
    // {prospect.employeeCountRange.name + " employees" }
    // Today
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.website) ?  React.DOM.a({href: "http://"+prospect.website.replace('http://',''), className: "btn btn-xs btn-primary btn-gradient", style: {float:'right',marginLeft:5}}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    //if(parseInt(prospect.linkedin_url.split('/').pop())){
    if(company.linkedin_url){
      btnClass = "btn btn-primary btn-xs btn-gradient"
    } else {
      btnClass = "btn btn-primary btn-xs btn-gradient disabled"
    }
    if(company.logo)
      logo = company.logo

    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 
          React.DOM.td({style: color}, 
              React.DOM.div({style: {backgroundImage: "url("+company.logo+")"}, 
              className: "company-img-thumbnail"})
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
              React.DOM.span({style: {fontWeight:'bold',fontSize:15}}, 
            React.DOM.a({href: "javascript:", onClick: this.toggleDetailMode}, company.company_name)
              ), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px',fontSize:11}}, 
              company.headcount)
          ), 


          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:13}}, company.industry), 
            React.DOM.h6({style: {margin:'0px',fontStyle:'italic',marginTop:5,fontSize:11}}, 
              company.city)
          ), 

          React.DOM.td({style: color}, 
            "   ", 
            React.DOM.div({style: {width:290,marginTop:-15}}, 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openLinkedinCompanyProfile}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Employees"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openSimilarCompanies}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Similar Companies"
            )
            )
          ), 
          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:11,paddingTop:5}}, moment(company.createdAt).fromNow())
          ), 

          React.DOM.td({style: color}, " ", React.DOM.h6({style: {margin:'0px'}}, ""), " "), 

          React.DOM.td({style: color}, 
            React.DOM.div({style: {width:92, paddingTop:5}}, 
              this.props.li, " ", 
              websiteBtn
            )
          )
        )
    );
  },

  openLinkedinCompanyProfile: function(e) {
    console.log(this.props.prospect.linkedin_url)
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    console.log(cid)
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
    e.stopPropagation()
  },

  openSimilarCompanies: function(e) {
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    //window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    e.stopPropagation()
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});

