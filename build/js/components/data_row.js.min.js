(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // DataRow
  getInitialState: function() {
    return { }
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    //console.log(this.state.checked)
    //console.log(checked)
    //{prospect.employeeCountRange.name + " employees" }
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.websiteUrl) ?  React.DOM.a({href: "http://"+prospect.websiteUrl.replace('http://','')}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect.name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, prospect.headcount)
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px'}}, moment(prospect.createdAt,'YYYY-MM-DDTh:mm:ss').fromNow())
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.industry)
          ), 

          React.DOM.td({style: color}, 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
              onClick: this.openLinkedinCompanyProfile, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Search Profiles"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
              onClick: this.openSimilarCompanies, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Find Similar Companies"
            )
          ), 

          React.DOM.td({style: color}, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.city)
          ), 

          React.DOM.td({style: color}, 
            this.props.li, " ", this.props.link, 
            websiteBtn
          )
        )
    );
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvZGF0YV9yb3cuanMubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKX12YXIgZj1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwoZi5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxmLGYuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoqIEBqc3ggUmVhY3QuRE9NICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiAnZXhwb3J0cycsXG4gIC8vIERhdGFSb3dcbiAgZ2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geyB9XG4gIH0sXG5cbiAgY2xpY2tDaGVjazogZnVuY3Rpb24oKSB7XG4gICAgZG9tTm9kZSA9IHRoaXMuZ2V0RE9NTm9kZSgpXG4gICAgaXNDaGVja2VkID0gJCgkKGRvbU5vZGUpLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpWzBdKS5wcm9wKCdjaGVja2VkJylcbiAgICAvL2NvbnNvbGUubG9nKGlzQ2hlY2tlZClcbiAgICB0aGlzLnNldFN0YXRlKHtjaGVja2VkOiBpc0NoZWNrZWR9KVxuICAgIHRoaXMucHJvcHMuY2hlY2tib3hBY3Rpb24oaXNDaGVja2VkLCB0aGlzLnByb3BzLnByb3NwZWN0Lm9iamVjdElkKVxuICB9LFxuXG4gIHJvd0NsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAkKCQodGhpcy5nZXRET01Ob2RlKCkpLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpWzBdKS5jbGljaygpXG4gIH0sXG5cbiAga2V5Ym9hcmRDbGljazogZnVuY3Rpb24oKSB7XG4gICAgJCgkKCcua2V5U2VsZWN0JykuZmluZCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJylbMF0pLmNsaWNrKClcbiAgfSxcblxuICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7IH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICBrZXlib2FyZFNlbGVjdGVkID0ge2JvcmRlckxlZnQ6JzdweCBzb2xpZCByZ2JhKDAsMCwwLDApJ31cbiAgICB0aGlzc3NzID0gdGhpc1xuICAgIGlmKHRoaXMucHJvcHMua2V5Ym9hcmRTZWxlY3RlZCkge1xuICAgICAgLy8gQWRqdXN0IFNjcm9sbCBkZXBlbmRpbmcgb24gd2hlcmUgdGhlIHByb3NwZWN0IGlzXG4gICAgICBrZXlib2FyZFNlbGVjdGVkID0ge2JvcmRlckxlZnQ6JzdweCBzb2xpZCAjMDA5NmZmICFpbXBvcnRhbnQnfVxuICAgICAgTW91c2V0cmFwLnVuYmluZCgneCcpXG4gICAgICBNb3VzZXRyYXAuYmluZCgneCcsIGZ1bmN0aW9uKCkgeyBcbiAgICAgICAgdGhpc3Nzcy5rZXlib2FyZENsaWNrKClcbiAgICAgICAgaWYodGhpc3Nzcy5zdGF0ZS5jaGVja2VkKVxuICAgICAgICAgIGNvbnNvbGUubG9nKFwibG1hb1wiKVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvc3BlY3QgPSB0aGlzLnByb3BzLnByb3NwZWN0XG5cbiAgICBpZih0aGlzLnByb3BzLm1hc3RlckNoZWNrYm94Q2hlY2tlZCAmJiB0aGlzLnN0YXRlLmNoZWNrZWQpXG4gICAgICBjaGVja2VkID0gdHJ1ZVxuICAgIGVsc2UgaWYodGhpcy5wcm9wcy5hbHJlYWR5Q2hlY2tlZClcbiAgICAgIGNoZWNrZWQgPSB0cnVlXG4gICAgZWxzZSBpZih0aGlzLnN0YXRlLmNoZWNrZWQpXG4gICAgICBjaGVja2VkID0gdHJ1ZVxuICAgIGVsc2UgaWYodGhpcy5wcm9wcy5tYXN0ZXJDaGVja2JveENoZWNrZWQgfHwgdGhpcy5zdGF0ZS5jaGVja2VkKVxuICAgICAgY2hlY2tlZCA9IHRydWVcbiAgICBlbHNlXG4gICAgICBjaGVja2VkID0gZmFsc2VcblxuICAgIC8vY29uc29sZS5sb2codGhpcy5zdGF0ZS5jaGVja2VkKVxuICAgIC8vY29uc29sZS5sb2coY2hlY2tlZClcbiAgICAvL3twcm9zcGVjdC5lbXBsb3llZUNvdW50UmFuZ2UubmFtZSArIFwiIGVtcGxveWVlc1wiIH1cbiAgICBcbiAgICBjb2xvciA9IHt9XG4gICAgaWYodGhpcy5zdGF0ZS5jaGVja2VkIHx8IHRoaXMucHJvcHMuYWxyZWFkeUNoZWNrZWQpXG4gICAgICBjb2xvciA9IHtiYWNrZ3JvdW5kQ29sb3I6ICcjZWVmOGZmJ31cbiAgICAgIFxuICAgIHJvd0NsID0gKHRoaXMucHJvcHMua2V5Ym9hcmRTZWxlY3RlZCkgPyBcInByb3NwZWN0cy10ciBrZXlTZWxlY3RcIiA6IFwicHJvc3BlY3RzLXRyXCJcbiAgICB3ZWJzaXRlQnRuID0gKHByb3NwZWN0LndlYnNpdGVVcmwpID8gIFJlYWN0LkRPTS5hKHtocmVmOiBcImh0dHA6Ly9cIitwcm9zcGVjdC53ZWJzaXRlVXJsLnJlcGxhY2UoJ2h0dHA6Ly8nLCcnKX0sIFwiIFwiLCBSZWFjdC5ET00uaSh7Y2xhc3NOYW1lOiBcImZhIGZhLWdsb2JlXCJ9KSwgXCIgXCIpIDogXCJcIlxuICAgIHJldHVybiAoXG4gICAgICBSZWFjdC5ET00udHIoe2NsYXNzTmFtZTogcm93Q2wsIFxuICAgICAgICAgIG9uQ2xpY2s6IHRoaXMucm93Q2xpY2ssIFxuICAgICAgICAgIHN0eWxlOiBrZXlib2FyZFNlbGVjdGVkfSwgXG4gICAgICAgICAgUmVhY3QuRE9NLnRkKHtzdHlsZTogY29sb3J9LCBcbiAgICAgICAgICAgICAgUmVhY3QuRE9NLmlucHV0KHt0eXBlOiBcImNoZWNrYm94XCIsIFxuICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IHRoaXMuY2xpY2tDaGVjaywgXG4gICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiBjaGVja2VkfSlcbiAgICAgICAgICApLCBcblxuICAgICAgICAgIFJlYWN0LkRPTS50ZCh7c3R5bGU6IGNvbG9yLCBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZpeGVkLWRhdGEtY29sdW1uXCJ9LCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5zcGFuKHtzdHlsZToge2ZvbnRXZWlnaHQ6J2JvbGQnfX0sIHByb3NwZWN0Lm5hbWUpLCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5oNih7c3R5bGU6IHtmb250V2VpZ2h0Oic0MDAnLG1hcmdpbjonMHB4J319LCBwcm9zcGVjdC5oZWFkY291bnQpXG4gICAgICAgICAgKSwgXG5cbiAgICAgICAgICBSZWFjdC5ET00udGQoe3N0eWxlOiBjb2xvciwgXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmaXhlZC1kYXRhLWNvbHVtblwifSwgXG4gICAgICAgICAgICBSZWFjdC5ET00uaDYoe3N0eWxlOiB7bWFyZ2luOicwcHgnfX0sIG1vbWVudChwcm9zcGVjdC5jcmVhdGVkQXQsJ1lZWVktTU0tRERUaDptbTpzcycpLmZyb21Ob3coKSlcbiAgICAgICAgICApLCBcblxuICAgICAgICAgIFJlYWN0LkRPTS50ZCh7c3R5bGU6IGNvbG9yLCBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiBcImZpeGVkLWRhdGEtY29sdW1uXCJ9LCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5oNih7c3R5bGU6IHttYXJnaW46JzBweCd9fSwgcHJvc3BlY3QuaW5kdXN0cnkpXG4gICAgICAgICAgKSwgXG5cbiAgICAgICAgICBSZWFjdC5ET00udGQoe3N0eWxlOiBjb2xvcn0sIFxuICAgICAgICAgICAgXCLCoCDCoFwiLCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5hKHtocmVmOiBcImphdmFzY3JpcHQ6XCIsIGNsYXNzTmFtZTogXCJidG4gYnRuLXN1Y2Nlc3MgYnRuLXhzXCIsIFxuICAgICAgICAgICAgICBvbkNsaWNrOiB0aGlzLm9wZW5MaW5rZWRpbkNvbXBhbnlQcm9maWxlLCBcbiAgICAgICAgICAgICAgc3R5bGU6IHtiYWNrZ3JvdW5kSW1hZ2U6ICdsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjMDA5NmZmIDAlLCAjMDA1ZGZmIDEwMCUpJ319LCBcbiAgICAgICAgICAgICAgUmVhY3QuRE9NLmkoe2NsYXNzTmFtZTogXCJmYSBmYS1zZWFyY2hcIn0pLCBcIiDCoFwiICsgJyAnICtcbiAgICAgICAgICAgICAgXCJTZWFyY2ggUHJvZmlsZXNcIlxuICAgICAgICAgICAgKSwgXG4gICAgICAgICAgICBcIsKgIMKgXCIsIFxuICAgICAgICAgICAgUmVhY3QuRE9NLmEoe2hyZWY6IFwiamF2YXNjcmlwdDpcIiwgY2xhc3NOYW1lOiBcImJ0biBidG4tc3VjY2VzcyBidG4teHNcIiwgXG4gICAgICAgICAgICAgIG9uQ2xpY2s6IHRoaXMub3BlblNpbWlsYXJDb21wYW5pZXMsIFxuICAgICAgICAgICAgICBzdHlsZToge2JhY2tncm91bmRJbWFnZTogJ2xpbmVhci1ncmFkaWVudCgxODBkZWcsICMwMDk2ZmYgMCUsICMwMDVkZmYgMTAwJSknfX0sIFxuICAgICAgICAgICAgICBSZWFjdC5ET00uaSh7Y2xhc3NOYW1lOiBcImZhIGZhLWNvcHlcIn0pLCBcIiDCoFwiICsgJyAnICtcbiAgICAgICAgICAgICAgXCJGaW5kIFNpbWlsYXIgQ29tcGFuaWVzXCJcbiAgICAgICAgICAgIClcbiAgICAgICAgICApLCBcblxuICAgICAgICAgIFJlYWN0LkRPTS50ZCh7c3R5bGU6IGNvbG9yfSwgXG4gICAgICAgICAgICBSZWFjdC5ET00uaDYoe3N0eWxlOiB7bWFyZ2luOicwcHgnfX0sIHByb3NwZWN0LmNpdHkpXG4gICAgICAgICAgKSwgXG5cbiAgICAgICAgICBSZWFjdC5ET00udGQoe3N0eWxlOiBjb2xvcn0sIFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5saSwgXCLCoFwiLCB0aGlzLnByb3BzLmxpbmssIFxuICAgICAgICAgICAgd2Vic2l0ZUJ0blxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICk7XG4gIH0sXG5cbiAgZGVsZXRlUHJvc3BlY3Q6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucHJvcHMuZGVsZXRlUHJvc3BlY3QodGhpcy5wcm9wcy5wcm9zcGVjdC5vYmplY3RJZCwgJ1Byb3NwZWN0JylcbiAgfVxufSk7XG5cbiJdfQ==
