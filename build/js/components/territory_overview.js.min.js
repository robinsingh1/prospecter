/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalCalendar
  getInitialState: function() {
    return {
      reports : [],
      currentTerritory:'all',
    }
  },

  getSignalReport: function(currentTerritory) {
    thissss = this;
    if(currentTerritory == "all"){
      qry = {'where' : JSON.stringify({profile:{
        __type:'Pointer',
        className:'ProspectProfile',
        objectId:this.props.currentProfile.objectId
      }, is_parent: true }), order:'-createdAt'}
    } else {
      qry = {'where' : JSON.stringify({parent:
            appConfig.pointer('SignalReport', currentTerritory.objectId), 
            }), order:'-createdAt'}
    }
    console.log(qry)

    // Get Signal Reports Of Current Profile
    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log(res.results)
        thissss.setState({reports: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    this.getSignalReport(this.state.currentTerritory)
  },

  componentWillUpdate: function(nextProps, nextState) {
    console.log('UPDATED')
    console.log(this.state.currentTerritory)
    console.log(nextState.currentTerritory)
    //if(this.state.currentTerritory != nextState.currentTerritory)
    if(!_.isEqual(this.state.currentTerritory, nextState.currentTerritory))
      this.getSignalReport(nextState.currentTerritory)
  },

  allTerritories: function() {
    this.setState({currentTerritory: 'all'})
  },

  render: function() {
    reports = (this.props.reports) ? this.props.reports : []

    for(i=0;i< this.state.reports.length; i++) {
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    prospectSignalReport: this.prospectSignalReport, 
                                    setCurrentView: this.setCurrentView, 
                                    rowClick: this.rowClick, 
                                    report: this.state.reports[i]}))
    }

    territory = (this.state.currentTerritory == 'all') ? '' : ' - '+this.state.currentTerritory.territory
    return (
      React.DOM.div({className: "container", style: {paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.allTerritories, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-globe", style: {marginRight:5}}), 
                this.props.currentProfile.name, 
                territory
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           height:356,overflow:'auto'}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                  React.DOM.i({className: "fa fa-clock-o"}), " Last Ran"
                ), 
                React.DOM.th({style: {textAlign:'',paddingLeft:50}}, 
                  "Territory Name"
                ), 
                React.DOM.th(null, "Company Signals"), 
                React.DOM.th({style: {display:'block'}}, "Prospect Companies"), 
                React.DOM.th({style: {width:150,textAlign:'center',display:'none'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  },

  setCurrentReport: function(newReport) {
    this.props.setCurrentReport(newReport)
  },

  prospectSignalReport: function(signalReport) {
    this.props.prospectSignalReport(this.props.currentProfile, signalReport)
  },

  setTerritory: function(territory) {
    //
    this.setState({currentTerritory: territory})
  },

  rowClick: function(report) {
    console.log(report)
    if(report.prospected)
      this.props.setReport('TerritoryDetail', report)
    else
      this.setTerritory(report)
    /*
    if(this.state.selectedTerritory != 'all')
      this.setCurrentReport(report) // 
    else
      this.setTerritory(report)
    */
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  getInitialState: function() {
    return {
      companyCount: '~',
      peopleCount: '~',
      loading: this.props.report.done,
    }
  },

  setTerritory: function() {
    this.props.setTerritory('')
  },

  rowClick: function() {
    this.props.rowClick(this.props.report)
  },

  prospectSignalReport: function(e) {
    this.props.prospectSignalReport(this.props.report)
    e.stopPropagation()
  },

  componentDidMount: function() { 
  },

  render: function() {
    prospected = this.props.report.prospected
    icon = React.DOM.i({className: "fa fa-globe"})
    icon = ""
    //
    loading = (this.state.loading) ? React.DOM.div({className: "profile-loading", style: {marginLeft:30}}, 
          React.DOM.div({className: "double-bounce1", style: {backgroundColor:'#5cb85c'}}), 
          React.DOM.div({className: "double-bounce2", style: {backgroundColor:'#5cb85c'}})
          ) : React.DOM.a({href: "javascript:", onClick: this.prospectSignalReport, 
             style: {fontWeight:'bold',marginTop:5}, 
     className: (prospected) ? "btn btn-xs btn-primary disabled" : "btn btn-xs btn-primary"}, 
             (prospected) ? 'Prospected' : 'Prospect All'
          )
    // if done  - loading
    loading = (this.props.report.prospected) ? React.DOM.span({className: "label label-success"}, " Prospected")  : loading
    loading  = React.DOM.span({className: "label label-success"}, " Prospected")

    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          icon
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td({style: {textAlign:'',paddingLeft:50}}, 
          React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-globe"}), " ", 
            React.DOM.span(null, 
            this.props.report.territory
            )
          )
        ), 
        React.DOM.td(null, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.company_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  Companies found."
          )
        ), 
        React.DOM.td({style: {display:'block'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 

          (this.props.report.prospected) ? React.DOM.div({style: {marginTop:6,padding:6, display:'block',width:146}, className: "label label-primary"}, React.DOM.i({className: "fa fa-check-circle"}), "   Prospected") : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
            style: {backgroundImage: 'linear-gradient(#8add6d, #60b044)',marginTop:4}, 
            style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)',marginTop:4}}, 
            React.DOM.i({className: "fa fa-cloud-download"}), "  " + ' ' +
            "Download Prospects"
          ), 
          React.DOM.h6({style: {display:'none'}}, 
            "  People found."
          )
        ), 
        React.DOM.td({style: (this.props.report.done) ? {display:'none'} : {display:'none',paddingTop:17}}, 
          loading
        )
      )
    )
  }
});
