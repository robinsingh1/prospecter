(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  createProfile: function() {
    profileName = $(".profileName").val()

    titleProfile = {
      'className': 'ProspectTitleProfile',
      'title_keywords'    : $('.prospect-profile-title').tagsinput('items').reverse()
    }

    /*
    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.prospect-location-profile').tagsinput('items').reverse()
    }

    companySizeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#prospect-profile-companySizeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#prospect-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    profiles = [titleProfile, locationProfile,
                companySizeProfile, revenueProfile]
    */
    
    profiles = [titleProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });
    console.log(nonemptyProfiles)

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      type: 'prospect_profile',
      mining_job:true,
      list_type:"mining_job",
      only_people:true,
      timestamp: moment().valueOf(),
      done: 0,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.props.addProfile(newProfile)
      this.persistSignal(nonemptyProfiles, newProfile)
      $('.modal').click()
      $('.prospect-profile-title').val('')
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)

    var thissss = this;
    var thiss = this;
    var _this = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(_.omit(newProfile, 'profiles')),
      success:function(ress) {
        
        user_id = JSON.parse(localStorage.currentUser).objectId
        newProfile.user = appConfig.pointer('_User', user_id) 
        newProfile.company = JSON.parse(localStorage.currentUser).company
        console.log('CREATED NEW PROSPECT PROFILE')
        console.log(ress.result)

        $.ajax({
          url: 'https://api.parse.com/1/classes/ProspectList',
          type: 'POST',
          headers: appConfig.headers,
          data:JSON.stringify(_.pick(newProfile, 
                                     'name','user','list_type',
                                     'open_people', 'company',
                                     'mining_job_list')),
          success: function(res) {
            console.log(res)
            prospectList = appConfig.pointer('ProspectList',res.objectId)
            $.ajax({
              url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
              type:'PUT',
              headers: appConfig.headers,
              data: JSON.stringify({'prospect_list':prospectList}),
              success: function(res){ console.log(res) },
              error: function(err){ console.log(err) }
            })
          },
          error: function() { }
        })

        // Start Mining Job
        if(newProfile.type == 'prospect_profile') {
          $.ajax({
            //url:'https://nameless-retreat-3525.herokuapp.com/mining_job/title',
            ///url:'https://nameless-retreat-3525.herokuapp.com/title_mining_job',
            url:'https://nameless-retreat-3525.herokuapp.com/title_mining_job',
            //url:'http://127.0.0.1:5000/title_mining_job',
            type:'GET',
            data: {prospect_profile: ress.objectId},
            success: function(res) { console.log(res) },
            error: function(err) { console.log(err) }
          })
        }

        // Create Profiles
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            }
          })
        });

        thiss.props.updateProfileWithObjectId(newProfile.timestamp, ress.objectId)
      }
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade ", tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createProspectProfileModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Prospect Profile"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },
  createCompanyProfile: function() {
  },
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width('59.1%')
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createProfile}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Prospect Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control hiring-profile-name profileName", 
                   placeholder: "Prospect Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Title:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role prospect-profile-title"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'none'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'none',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control prospect-location-profile-tmp"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.span({style: {display:'none',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control "}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
          CompanyProfile(null), 

          React.DOM.div({style: {display:'none'}}, 
          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    return (
      React.DOM.div(null, 
          React.DOM.br(null), 
          React.DOM.div({style: {display:'none'}}, 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
                    React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                      style: {width:'73.5%'}, id: "prospect-profile-companySizeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            )
          ), 

          React.DOM.div({style: {display:'none'}}, 
            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Approx. Revenue  "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
              style: {width:'73.5%'}, id: "prospect-profile-companyRevenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
          )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })
    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )
        )
      )
    )
  }
})

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
