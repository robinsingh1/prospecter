/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      name: this.props.initialTemplateValues.name,
      body: this.props.initialTemplateValues.body,
      subject: this.props.initialTemplateValues.subject,
      editMode: this.props.initialTemplateValues.editMode
    }
  },

  componentDidMount: function() {
    console.log('did mount')
    $('.template-body').html(this.state.body)
    if(this.state.editMode) {
      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })
    }

    renderjson.set_show_to_level('all')
    prospect = _.pick(this.props.prospect, 
      'company_name', 'name', 'pos'
    )
    prospect.first_name = prospect.name.split(' ')[0]
    prospect.last_name = _.last(prospect.name.split(' '))
    prospect = _.omit(prospect, 'name')

    document.getElementById("editTemplate").appendChild(renderjson(prospect));
    $('#editTemplateOverlay').html()
    thiss = this;
    $('.renderjson').click(function() {
      thiss.props.toggleTemplateEditMenu()
    })

    $('.renderjson').css({
      'position': 'absolute',
      'z-index': '1000000000',
      'background-color':'rgba(0,0,0,0)',
      'border':'0',
      'color':'white',
      'margin-top':'0px',
      'height': '542px',
      'overflow':'auto',
      'width':'380px'
    })

    $('.key').css({
      'cursor':'pointer'
    })

    $('.timeline').css({
      '-webkit-filter': 'blur(10px)',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': 'blur(10px)',
    })
  },
  componentWillUnmount:function() {
    $('.timeline').css({
      '-webkit-filter': '',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': '',
    })
  },

  clickedOverlay: function() {
    console.log('clicked overlay')
    this.props.toggleTemplateEditMenu()
  },

  changeMode: function() {
    // Update template html on toggle
    parse_headers = appConfig.parseHeaders
    if(this.state.editMode){
      $('.summer').destroy();
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })

      console.log('look at this')
      console.log(name)
      name = (this.props.initialTemplateValues.newTemplate) ? $('#template-name').val() : this.state.name
      this.props.saveTemplate({
        name: name,
        body: $('.summer').code(),
        subject: $('.subject').val(),
      }, this.props.initialTemplateValues.newTemplate)

      this.setState({
        name: $('#template-name').val(),
        body: $('.summer').code(),
        subject: $('.subject').val(),
        editMode: !this.state.editMode,
      })

      objId = this.props.initialTemplateValues.objectId
      $.ajax({
        url:'https://api.parse.com/1/classes/Templates/'+objId,
        type:'PUT',
        headers:parse_headers,
        data:JSON.stringify({body: $('.summer').code(),
                             subject: $('.subject').val()}),
        success: function(res) {
          console.log(res)
        },
        error: function(err) {
          console.log(err)
        }
      });
    } else {
      this.setState({ editMode: !this.state.editMode })
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })
    }
  },

  componentWillUpdate: function(newProps) {
    console.log('THE NEW PROPS')
    console.log(newProps)
  },

  componentDidUpdate: function() {
    /* thiss = this; */
    console.log('OTHER')
    if(this.state.editMode){
      console.log('CALLED')
      // Replace Subject 
      $('.subject').val(this.state.subject)
      $('#template-name').val(this.state.name)

      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })

      // Initialize Editor with html
      $('.summer').code(this.state.body)
    }
  },


  render: function() {
    subjectPlace = (this.state.editMode) ? React.DOM.input({style: {display:'inline',width:480}, className: "form-control subject"}) : this.state.subject

    if(this.state.editMode){
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-success btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-save"}), "   Save Template")

       if(this.props.initialTemplateValues.newTemplate){
         the_name = React.DOM.input({className: "form-control", 
                           id: "template-name", 
                           style: {float:'left',width:200}})
       }
    } else {
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-pencil-square"}), "   Edit Template")

       the_name = React.DOM.h6({style: {float:'left'}}, 
                   React.DOM.i({className: "fa fa-file-text-o"}), " ", 
                   this.state.name
                  )
    }

    return (
      React.DOM.div({id: "editTemplate"}, 
        React.DOM.h5({className: "example-template-title"}, "Example Template Values"), 
        React.DOM.div({className: "example-template-title", 
             style: {marginLeft:215, marginTop:8}}, 
          React.DOM.a({href: "javascript:", 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-left"})), 
          React.DOM.a({href: "javascript:", 
            style: {marginLeft:5}, 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-right"}))
        ), 
        React.DOM.div({onClick: this.clickedOverlay, id: "editTemplateOverlay"}), 
          React.DOM.div({id: "editTemplateView", 
               className: "panel panel-default", 
               style: {display:'block'}}, 
               React.DOM.div({className: "panel-heading", style: {height:50}}, 
                 the_name, 
              React.DOM.a({href: "javascript:", 
                className: "btn btn-default btn-xs", 
                style: {float:'right',marginLeft:5,marginTop:5}}, 
                React.DOM.i({className: "fa fa-trash"})
              ), 
              toggleButton
            ), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.div({className: "editTemplateTitle"}, 
                React.DOM.span(null, "Subject: "), 
                subjectPlace
              ), 
             React.DOM.br(null), 
             React.DOM.div({className: "templateDetails"}, 
               React.DOM.h6({style: {marginBottom:'0'}, className: "text-muted"}, 
                 "Created by Mark on Jul. 21, 2014"
               ), 
               React.DOM.h6({style: {marginTop:'0'}, className: "text-muted"}, 
                 "last updated 7 days ago"
               )
             ), 
            React.DOM.br(null), 
            React.DOM.div({className: "panel panel-default"}, 
              React.DOM.div({className: "panel-body summer template-body"}
              )
            )
        )
      )
    )
    );
  }
});
