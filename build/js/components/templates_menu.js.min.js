(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //TemplatesMenu
  toggleTemplateEditMenu: function(currentTemplate) {
    this.props.toggleTemplateEditMenu(currentTemplate)
  },

  createTemplate: function() {
    this.props.toggleTemplateEditMenu({
      name: '',
      body:'',
      subject:'',
      editMode:true,
      newTemplate: true
    }, true)
  },

  render: function() {
    //console.log(this.props.templates)
    templates = []
    for(i=0;i< this.props.templates.length; i++) {
      templates.push(
        TemplateListItem({
          toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
          template: this.props.templates[i]})
      )
    }

    return (
      React.DOM.div({className: "", style: {padding:'0', borderRight:'2px solid rgba(0,0,0,0)',height:'100%',textAlign:'center'}}, 
        React.DOM.div({className: "panel panel-default", 
             style: {borderRight:0,borderRadius:0,height:'100%', overflow:'auto'}}, 
          React.DOM.div({className: "panel-heading", style: {height:40}}, 
            React.DOM.span({style: {float:'left',fontSize:14,fontWeight:'bold'}}, 
              React.DOM.i({className: "fa fa-file-text-o"}), 
              React.DOM.span({style: {marginLeft:5}}, "Templates")
            ), 
            React.DOM.a({href: "javascript:", 
              className: "btn btn-success btn-xs", 
              onClick: this.createTemplate, 
                style: {float:'right'}}, 
              React.DOM.i({className: "fa fa-plus"}), 
              React.DOM.span({style: {marginLeft:5}}, "Create Template")
            )
          ), 
          React.DOM.ul({className: "list-group", 
              style: {textAlign:'left'}}, 
            templates
          )
        )
      )
    )
  }
});

var TemplateListItem = React.createClass({displayName: 'TemplateListItem',
  toggleTemplateEditMenu: function() {
    console.log(this.props.template)
    template = this.props.template
    template.editMode = false
    this.props.toggleTemplateEditMenu(template)
  },

  render: function() {
    return (
      React.DOM.div(null, 
        React.DOM.a({href: "javascript:", 
          style: {borderBottom: '1px solid rgb(221, 221, 221)',paddingTop:5,paddingBottom:0}, 
           onClick: this.toggleTemplateEditMenu, 
           className: "list-group-item"}, 
           React.DOM.span({className: "label label-default"}, 
             this.props.template.name
           ), 
           React.DOM.h6(null, "Subject:", React.DOM.span({className: "text text-muted"}, 
             " " + this.props.template.subject
           ))
         )
      )
    );
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9yb2Jpbi9Qcm9qZWN0cy9wcm9zcGVjdGVyL3Byb3NwZWN0ZXItcGFyc2UvZGV2L2J1aWxkL2pzL2NvbXBvbmVudHMvdGVtcGxhdGVzX21lbnUuanMubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpfXZhciBmPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKiogQGpzeCBSZWFjdC5ET00gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6ICdleHBvcnRzJyxcbiAgLy9UZW1wbGF0ZXNNZW51XG4gIHRvZ2dsZVRlbXBsYXRlRWRpdE1lbnU6IGZ1bmN0aW9uKGN1cnJlbnRUZW1wbGF0ZSkge1xuICAgIHRoaXMucHJvcHMudG9nZ2xlVGVtcGxhdGVFZGl0TWVudShjdXJyZW50VGVtcGxhdGUpXG4gIH0sXG5cbiAgY3JlYXRlVGVtcGxhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucHJvcHMudG9nZ2xlVGVtcGxhdGVFZGl0TWVudSh7XG4gICAgICBuYW1lOiAnJyxcbiAgICAgIGJvZHk6JycsXG4gICAgICBzdWJqZWN0OicnLFxuICAgICAgZWRpdE1vZGU6dHJ1ZSxcbiAgICAgIG5ld1RlbXBsYXRlOiB0cnVlXG4gICAgfSwgdHJ1ZSlcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIC8vY29uc29sZS5sb2codGhpcy5wcm9wcy50ZW1wbGF0ZXMpXG4gICAgdGVtcGxhdGVzID0gW11cbiAgICBmb3IoaT0wO2k8IHRoaXMucHJvcHMudGVtcGxhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0ZW1wbGF0ZXMucHVzaChcbiAgICAgICAgVGVtcGxhdGVMaXN0SXRlbSh7XG4gICAgICAgICAgdG9nZ2xlVGVtcGxhdGVFZGl0TWVudTogdGhpcy50b2dnbGVUZW1wbGF0ZUVkaXRNZW51LCBcbiAgICAgICAgICB0ZW1wbGF0ZTogdGhpcy5wcm9wcy50ZW1wbGF0ZXNbaV19KVxuICAgICAgKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICBSZWFjdC5ET00uZGl2KHtjbGFzc05hbWU6IFwiXCIsIHN0eWxlOiB7cGFkZGluZzonMCcsIGJvcmRlclJpZ2h0OicycHggc29saWQgcmdiYSgwLDAsMCwwKScsaGVpZ2h0OicxMDAlJyx0ZXh0QWxpZ246J2NlbnRlcid9fSwgXG4gICAgICAgIFJlYWN0LkRPTS5kaXYoe2NsYXNzTmFtZTogXCJwYW5lbCBwYW5lbC1kZWZhdWx0XCIsIFxuICAgICAgICAgICAgIHN0eWxlOiB7Ym9yZGVyUmlnaHQ6MCxib3JkZXJSYWRpdXM6MCxoZWlnaHQ6JzEwMCUnLCBvdmVyZmxvdzonYXV0byd9fSwgXG4gICAgICAgICAgUmVhY3QuRE9NLmRpdih7Y2xhc3NOYW1lOiBcInBhbmVsLWhlYWRpbmdcIiwgc3R5bGU6IHtoZWlnaHQ6NDB9fSwgXG4gICAgICAgICAgICBSZWFjdC5ET00uc3Bhbih7c3R5bGU6IHtmbG9hdDonbGVmdCcsZm9udFNpemU6MTQsZm9udFdlaWdodDonYm9sZCd9fSwgXG4gICAgICAgICAgICAgIFJlYWN0LkRPTS5pKHtjbGFzc05hbWU6IFwiZmEgZmEtZmlsZS10ZXh0LW9cIn0pLCBcbiAgICAgICAgICAgICAgUmVhY3QuRE9NLnNwYW4oe3N0eWxlOiB7bWFyZ2luTGVmdDo1fX0sIFwiVGVtcGxhdGVzXCIpXG4gICAgICAgICAgICApLCBcbiAgICAgICAgICAgIFJlYWN0LkRPTS5hKHtocmVmOiBcImphdmFzY3JpcHQ6XCIsIFxuICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiYnRuIGJ0bi1zdWNjZXNzIGJ0bi14c1wiLCBcbiAgICAgICAgICAgICAgb25DbGljazogdGhpcy5jcmVhdGVUZW1wbGF0ZSwgXG4gICAgICAgICAgICAgICAgc3R5bGU6IHtmbG9hdDoncmlnaHQnfX0sIFxuICAgICAgICAgICAgICBSZWFjdC5ET00uaSh7Y2xhc3NOYW1lOiBcImZhIGZhLXBsdXNcIn0pLCBcbiAgICAgICAgICAgICAgUmVhY3QuRE9NLnNwYW4oe3N0eWxlOiB7bWFyZ2luTGVmdDo1fX0sIFwiQ3JlYXRlIFRlbXBsYXRlXCIpXG4gICAgICAgICAgICApXG4gICAgICAgICAgKSwgXG4gICAgICAgICAgUmVhY3QuRE9NLnVsKHtjbGFzc05hbWU6IFwibGlzdC1ncm91cFwiLCBcbiAgICAgICAgICAgICAgc3R5bGU6IHt0ZXh0QWxpZ246J2xlZnQnfX0sIFxuICAgICAgICAgICAgdGVtcGxhdGVzXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICB9XG59KTtcblxudmFyIFRlbXBsYXRlTGlzdEl0ZW0gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6ICdUZW1wbGF0ZUxpc3RJdGVtJyxcbiAgdG9nZ2xlVGVtcGxhdGVFZGl0TWVudTogZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2codGhpcy5wcm9wcy50ZW1wbGF0ZSlcbiAgICB0ZW1wbGF0ZSA9IHRoaXMucHJvcHMudGVtcGxhdGVcbiAgICB0ZW1wbGF0ZS5lZGl0TW9kZSA9IGZhbHNlXG4gICAgdGhpcy5wcm9wcy50b2dnbGVUZW1wbGF0ZUVkaXRNZW51KHRlbXBsYXRlKVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIFJlYWN0LkRPTS5kaXYobnVsbCwgXG4gICAgICAgIFJlYWN0LkRPTS5hKHtocmVmOiBcImphdmFzY3JpcHQ6XCIsIFxuICAgICAgICAgIHN0eWxlOiB7Ym9yZGVyQm90dG9tOiAnMXB4IHNvbGlkIHJnYigyMjEsIDIyMSwgMjIxKScscGFkZGluZ1RvcDo1LHBhZGRpbmdCb3R0b206MH0sIFxuICAgICAgICAgICBvbkNsaWNrOiB0aGlzLnRvZ2dsZVRlbXBsYXRlRWRpdE1lbnUsIFxuICAgICAgICAgICBjbGFzc05hbWU6IFwibGlzdC1ncm91cC1pdGVtXCJ9LCBcbiAgICAgICAgICAgUmVhY3QuRE9NLnNwYW4oe2NsYXNzTmFtZTogXCJsYWJlbCBsYWJlbC1kZWZhdWx0XCJ9LCBcbiAgICAgICAgICAgICB0aGlzLnByb3BzLnRlbXBsYXRlLm5hbWVcbiAgICAgICAgICAgKSwgXG4gICAgICAgICAgIFJlYWN0LkRPTS5oNihudWxsLCBcIlN1YmplY3Q6XCIsIFJlYWN0LkRPTS5zcGFuKHtjbGFzc05hbWU6IFwidGV4dCB0ZXh0LW11dGVkXCJ9LCBcbiAgICAgICAgICAgICBcIiBcIiArIHRoaXMucHJvcHMudGVtcGxhdGUuc3ViamVjdFxuICAgICAgICAgICApKVxuICAgICAgICAgKVxuICAgICAgKVxuICAgICk7XG4gIH1cbn0pO1xuIl19
