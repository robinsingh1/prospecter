(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
   //Analytics
  render: function () {
    return (
      React.DOM.div({style: {height:'400px'}, className: ""}, 
        React.DOM.div({className: "container", style: {width:'100%',padding:'0',height:'100%'}}, 
          AnalyticsSideMenu(null), 
          React.DOM.div({className: "col-md-3", style: {padding:'0'}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th(null, "Stat"), 
                React.DOM.th(null, "#")
              ), 
              React.DOM.tbody(null, 
                React.DOM.tr(null, React.DOM.td(null, "# of People Prospected"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Companies Prospected"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Sent"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Delivered"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Delivery Failures"), React.DOM.td(null, "lil"))
              )
            )
          )
        )
      )
    );
  }
});

var AnalyticsSideMenu = React.createClass({displayName: 'AnalyticsSideMenu',
  render: function() {
    return (
      React.DOM.div({className: "col-md-2", style: {padding:'0',height:'100%',backgroundColor:'rgb(90, 107, 119)',borderBottomLeftRadius:'3px'}}, 
        React.DOM.div({className: "btn-group-vertical", style: {width:'100%'}}, 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-search"}), "   Prospecting Overview"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-paper-plane"}), "   Email Outreach"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-user"}), "   Team Stats"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-cloud"}), "   CRM Integration"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-circle-o"}), "   Sales Cycle"
          )
        )
      )
    );
  }
});

},{}]},{},[1])


},{}],2:[function(require,module,exports){
/** @jsx React.DOM */

/* TODO
 * 
 * - All count change, when prospect is archived
 * - When is list is chaanged from all and then returned to All prospects take a long     time to load
 * - Fix pagination issues
 *
 * - Parallelize Workers
 * - Scale up google scrape to hundreds of workers (heroku)
 *
 * - Company Shortcuts 
 * - Add ability to switch accounts for admins
 * - Add email uneditable email fields
 */

var Prospects = require('./prospects.js.min.js');
var CompanyProspect = require('./company.js.min.js');
var CompanyProspects = require('./company_prospects.js.min.js');
var DataTable = require('./data_table.js.min.js');
var MiningJob = require('./mining_job.js.min.js');
var Campaigns = require('./email.js.min.js');
var Analytics = require('./analytics.js.min.js');
var SignUp = require('./signup.js.min.js');
var Login = require('./login.js.min.js');
var LandingPage = require('./landing_page.js.min.js');
var LandingPage = require('./landing_page_concept.js.min.js');
var FreeTrial = require('./free_trial.js.min.js');
var Pricing = require('./pricing.js.min.js');
var Signals = require('./signals.js.min.js');
var MouseTrap = require('../lib/mousetrap.min.min.js')
//var checkAuth = require('./auth.min.js')

var Home = React.createClass({displayName: 'Home',
  componentWillMount: function(){
    checkAuth()
  },

  getInitialState: function() {
    // num_of_pages
    console.log(this.props)
    return {prospects: [] , 
            currentPage: 1, 
            pages: 1, 
            count:"~", 
            prospectType:'Prospect', 
            //selectedScreen:'Prospects'}
            selectedScreen: this.props.selectedScreen}
  },

  toggleScreen: function(e) {
    e.preventDefault()
    this.setState({selectedScreen : $(e.target).text().trim()})
  },

  logout: function() {
    localStorage.clear()
    location.href = "#get_started"
  },

  listDropdown: function() {
    console.log('dropdown')
    //$('.dropdown-menu').dropdown()
    $('.prospect-list-select').css('border-bottom-right-radius','0px')
    $('.prospect-list-select').css('border-bottom-left-radius','0px')
      
    $('.list-select-dropdown').css('border-top-left-radius','0px')
    $('.list-select-dropdown').css('border-top-right-radius','0px')
  },

  selectChange : function() {

  },

  stripeCheckout: function() {
    handler.open({
      name: 'Customero',
      description: 'Get 900 free email credits!',
      amount: 0,
      panelLabel: "Start Your Free Trial!",
      opened: function() {
      },
      closed: function() {
        console.log("closed")
        location.reload()
      }
    });
  },

  componentDidMount: function() {
    // Credit Card Verified Check
    localStorage.selectedProspects = "[]"
    currentUser = JSON.parse(localStorage.currentUser)
    if(!currentUser.creditCardVerified)
      this.stripeCheckout()

    /*
     * Make Request To Get Most Up to Date Info
     * On Success Add To Intercom
    */

    /*
    $.ajax({
      url:''
      success: function(res) {
        // Number of Prospects for user
        // Number of Lists
        // Number of Emails found
        Intercom('boot', {
          app_id: 'abc12345',
          email: 'john.doe@example.com',
          created_at: 1234567890,
          name: 'John Doe',
          user_id: '9876'
        });
      },
      error: function(err) {
      }
    });
    */
    // Intercom
    // Mixpanel
  },

  render: function() {
    prospects = "choose btn btn-primary "
    companyProspects = "choose btn btn-primary "
    campaigns = "choose btn btn-primary "
    signals = "choose btn btn-primary "
    switch (this.state.selectedScreen) {
      case 'Prospects':
        currentScreen = Prospects(null)
        prospects = "choose btn btn-primary app-active"
        location.href= "#prospects"
        break;
      case 'Companies':
        currentScreen = CompanyProspects(null)
        currentScreen = DataTable({listClassName: 'CompanyProspectList', 
                                   tableHeader: ['Name','Added On','Industry',
                                                 '# of Prospects','Signals',
                                                 '',''], 
                                   className: 'CompanyProspect'})
        location.href= "#companies"
        companyProspects = "choose btn btn-primary app-active"
        break;
      case 'Mining Jobs':
        currentScreen = MiningJob(null)
        break;
      case 'Analytics':
        currentScreen = Analytics(null)
        break;
      case 'Campaigns':
        currentScreen = Campaigns(null)
        campaigns = "choose btn btn-primary app-active"
        location.href= "#campaigns"
        break;
      case 'Signals':
        currentScreen = Signals(null)
        signals = "choose btn btn-primary app-active"
        location.href= "#signals"
        break;
      case 'Settings':
        currentScreen = Settings(null)
        break;
    }

    return (
      React.DOM.div(null, 
      React.DOM.br(null), 
      React.DOM.br(null), 
      React.DOM.div({className: "container"}, 
        React.DOM.h1({style: {fontWeight:'bold',display:'inline',fontWeight:'100',color:'#1ca3fd'}}, 
          React.DOM.img({src: "build/img/network.png", 
            style: { height:32, marginTop:-4,
              marginRight:5, }}
          ), 
          React.DOM.span({style: {fontWeight:'bold',fontSize:32,fontFamily:'Proxima-Nova'}}, "Customero ")
        ), 
      React.DOM.span({style: {float:'right'}}, 
        React.DOM.img({src: "build/img/user.png", style: {height:'40px',width:'40px',padding:'2px',marginTop:'5px',borderRadius:'23px',display:'inline'}, className: "thumbnail"}), "   ",  
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline'}}, "Welcome")
      ), 
      React.DOM.span({style: {float:'right', marginRight:'150px'}}, 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline',}}, React.DOM.a({href: "javascript:", onClick: this.logout, style: {color:'#1ca3fd'}}, "Logout")), 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline',marginRight:'10px'}}, React.DOM.a({href: "#pricing", style: {color:'#1ca3fd'}}, "Pricing")), 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:'10px'}}, 
          React.DOM.a({href: "http://resources.customerohq.com", style: {color:'#1ca3fd'}}, "Resources")
        ), 
          React.DOM.a({href: "javascript:", 
            style: {marginTop:15, float:'right',marginRight:10,
                    backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}, 
            className: "btn btn-primary btn-xs", 
            onClick: this.downloadSocialProspecter}, 
            React.DOM.i({className: "fa fa-download"}), "  " + ' ' +
            "Download Chrome Social Prospecter"
          )
      ), 
      React.DOM.br(null), 
      React.DOM.br(null), 
        React.DOM.div({className: "panel panel-default"}, 
        React.DOM.div({id: "navbar", className: "panel-heading"}, 

          React.DOM.div({className: "btn-group col-md-offset-4"}, 
            React.DOM.a({href: "javascript:", className: signals, style: {display:'block'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-wifi"}), " Signals"
            ), 
            React.DOM.a({href: "javascript:", className: prospects, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-user"}), " Prospects"
            ), 
            React.DOM.a({href: "javascript:", className: "choose btn btn-primary", style: {display:'none'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-bar-chart-o"}), " Analytics"
            ), 
            React.DOM.a({href: "javascript:", className: "choose btn btn-primary", 
                  style: {width:162,display:'none'}, 
                  onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-tasks"}), " Mining Jobs  ", 
                React.DOM.span({className: "label label-default"}, "BETA")
            ), 
            React.DOM.a({href: "javascript:", className: companyProspects, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-building"}), " Companies"
            ), 
            React.DOM.a({href: "javascript:", className: campaigns, style: {display:'block'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-envelope"}), " Campaigns"
            )
          )
        ), 

          currentScreen

        )
      )
      )
    );
  },
  
  downloadSocialProspecter: function() {
    //chrome.webstore.install('https://chrome.google.com/webstore/detail/ofcalkjbogaiipekcocdefjenclioeci')
    //chrome.webstore.install()
    window.open('https://chrome.google.com/webstore/detail/customero-prospecter/ofcalkjbogaiipekcocdefjenclioeci')
  },

  /*
          <a href="#" className="btn btn-success" onClick={this.downloadFile}
                  style={{float:'right',marginTop:'6px'}}>
            <i className="fa fa-download" />&nbsp;&nbsp;
            <h5 style={{display:'inline'}} >Download CSV</h5>
          </a>
  */

  deleteProspect: function(objectId, endpoint) {
    var filtered = _.filter(this.state.prospects, function(item) {
       return item.objectId != objectId
    });
    this.setState({prospects: filtered})

    $.ajax({
      url:'https://api.parse.com/1/classes/'+endpoint+'/'+objectId,
      type:'DELETE',
      headers: parse_headers,
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
      }
    });
  }
});


var Workspace = Backbone.Router.extend({
  routes: {
    //landing_page
    //""            : "home",
    "get_started" : "landing_page",
    "free_trial"  : "free_trial",
    "signup"      : "signup",
    "login"       : "login",
    "pricing"     : "pricing",
    
    "signals"     : "signals",
    "prospects"   : "prospects",
    "companies"   : "companies",
    "campaigns"   : "campaigns",

    "prospects/p:page"       : "prospects",
    "prospects/list/:list"   : "prospects_list",

    "companies/p:page"       : "companies",
    "companies/list/:list"   : "companies_list",

    "signals/profile/:profile"  : "signals_profile",
    "signals/calendar/:profile" : "signals_calendar",

    "campaigns/followup_feed"      : "campaigns",
    "campaigns/sent_emails"         : "campaigns",
    "campaigns/template/:template" : "campaigns",
  },

  mainRoute: function(route) {
    console.log(route)
    currentUser = localStorage.getItem('currentUser')
    $('#content').html('')
    if (currentUser) 
      React.renderComponent(Home({selectedScreen: route}), 
                            document.getElementById('content'));
    else
      location.href = "#get_started"
  },

  signals  : function() { this.mainRoute('Signals') },
  prospects: function() { this.mainRoute('Prospects') },
  companies: function() { this.mainRoute('Companies') },
  campaigns: function() { this.mainRoute('Campaigns') },

  home: function() {
    currentUser = localStorage.getItem('currentUser')
    if (currentUser) 
      React.renderComponent(Home({selectedScreen: "Prospects"}), 
                            document.getElementById('content'));
    else
      location.href = "#get_started"
  },
  landing_page: function() {
    React.renderComponent(LandingPage(), document.getElementById('content'));
  },
  free_trial: function() {
    React.renderComponent(FreeTrial(), document.getElementById('content'));
  },

  signup: function() {
    React.renderComponent(SignUp(), document.getElementById('content'));
  },
  login: function() {
    React.renderComponent(Login(), document.getElementById('content'));
  },
  pricing: function() {
    React.renderComponent(Pricing(), document.getElementById('content'));
  }
});

$(document).ready(function(){
  checkAuth()
  var workspace = new Workspace;
  Backbone.history.start();
});

},{"../lib/mousetrap.min.min.js":53,"./analytics.js.min.js":1,"./company.js.min.js":5,"./company_prospects.js.min.js":6,"./data_table.js.min.js":17,"./email.js.min.js":20,"./free_trial.js.min.js":23,"./landing_page.js.min.js":24,"./landing_page_concept.js.min.js":25,"./login.js.min.js":27,"./mining_job.js.min.js":29,"./pricing.js.min.js":33,"./prospects.js.min.js":34,"./signals.js.min.js":44,"./signup.js.min.js":45}],3:[function(require,module,exports){
/** @jsx React.DOM */
var TemplatesMenu = require('./templates_menu.js.min.js');
var EditTemplateView = require('./edit_template.js.min.js');
var CreateTemplateView = require('./create_template.js.min.js');
var FollowupTimeline = require('./followup_timeline.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  // Campaign Detail
  getInitialState: function() {
    return {
      selectedTemplate: 0,
      templateDetailMode: false,
      editMode: false,
      followupDay: 0,
      templates:[],
      currentTemplate:'',
      prospectListCount:'~',
      prospects:[],
    }
  },

  componentDidMount: function() {
     thissss = this;
     company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
     qry = 'where={"company":'+company+'}'
    $.ajax({
      url:'https://api.parse.com/1/classes/Template',
      headers: appConfig.headers,
      data: qry,
      success: function(res) { thissss.setState({templates: res.results}) },
      error: function(err) { console.log('error') }
    });

    currentList = JSON.stringify({
      '__type'    : 'Pointer', 
      'className' : 'ProspectList',
      'objectId'  : this.props.selectedCampaign.prospect_list.objectId, 
    })
    qry = 'where={"lists":'+currentList+'}&limit=1000&count=1'
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect',
      headers: appConfig.headers,
      data: qry,
      success: function (res) {
        thissss.setState({
          prospects: res.results,
          prospectListCount: res.count 
        })
      },
      error: function(err) { }
    })
  },

  returnToOverview: function() {
    this.props.toggleScreen('Campaigns')
  },

  render: function() {
    //console.log('campaign detail')
    thiss = this;
    return (
      React.DOM.div({className: "container", 
           style: {width:'100%',height:'100%',paddingLeft:0,paddingRight:0}}, 
        React.DOM.div({style: {marginBottom:30}, id: "campaign-top-detail"}, 
        React.DOM.h5({style: {marginTop:20,marginLeft:20}}, 
          React.DOM.a({href: "javascript:", onClick: this.returnToOverview}, "Campaigns "), 
          React.DOM.small(null, 
            React.DOM.i({style: {marginLeft:10, marginRight:10}, 
               className: "fa fa-chevron-right"})
          ), 
          this.props.selectedCampaign.name
        ), 
        React.DOM.h6({style: {marginLeft:20,display:'inline-block',marginRight:15}}, 
          React.DOM.span({className: "text-muted"}, "Prospect List:"), "  ", 
          (this.props.selectedCampaign.prospect_list.signal_list) ? React.DOM.span(null, React.DOM.i({className: "fa fa-wifi"}), " ") : "", 
          this.props.selectedCampaign.prospect_list.name
        ), 
        React.DOM.span({className: "badge"}, this.state.prospectListCount), 

        React.DOM.h6({style: {marginLeft:20,display:'inline-block',marginRight:15}}, 
          "Batches :"
        ), 
        React.DOM.span({className: "badge"}, "2"), 
        React.DOM.a({href: "javascript:", 
           style: {float: 'right', marginTop: -35, marginRight: 30, display:'none'}, 
           className: "btn btn-success btn-sm"}, 
          React.DOM.i({className: "fa fa-envelope"}), " Send!"
        )
        ), 
          React.DOM.div({className: "col-md-8 panel panel-default", 
               style: {height:'443px',paddingLeft:305,paddingTop:50,overflow:'auto',borderRight:0,borderRadius:0}}, 
               FollowupTimeline({
                  templates: this.state.templates, 
                  prospects: this.state.prospects, 
                  currentCampaign: this.props.selectedCampaign, 
                  toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
                  initialFollowups: this.props.selectedCampaign.followups})
          ), 
          React.DOM.div({className: "col-md-4", 
               style: {paddingLeft:0,paddingRight:0,height:443}}, 
            TemplatesMenu({
              templates: this.state.templates, 
              toggleTemplateEditMenu: this.toggleTemplateEditMenu})
          ), 

          (this.state.templateDetailMode) ? EditTemplateView({
            editMode: this.state.editMode, 
            initialTemplateValues: this.state.currentTemplate, 
            saveTemplate: this.saveTemplate, 
            prospect: this.state.prospects[0], 
            toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
            followupDay: this.state.followupDay}) : ""
      )
    );
  },

  saveTemplate: function(template, newTemplate) {
    templates = this.state.templates
    for(i=0;i< this.state.templates.length; i++)
      if(this.state.templates[i].name == template.name)
        break
    
    console.log(template)
    if(newTemplate){
      template.subject = template.subject
      template.name = template.name
      template.body = template.body
      templates.push(template)

      $.ajax({
        url:'https://api.parse.com/1/classes/Template',
        headers:appConfig.headers,
        type:'POST',
        data:JSON.stringify({
          name : template.name,
          subject: template.subject,
          body: template.body,
          user:{
            __type: 'Pointer',
            className:'_User',
            objectId:JSON.parse(localStorage.currentUser).objectId,
          },
          company:JSON.parse(localStorage.currentUser).company,
        }),
        success: function(res) {
          console.log(res)
        },
        error: function() {
        }
      })
    } else {
      templates[i].subject = template.subject
      templates[i].body = template.body

      $.ajax({
        url:'https://api.parse.com/1/classes/Template/'+templates[i].objectId,
        type:'PUT',
        headers:appConfig.headers,
        data:JSON.stringify({
          name : template.name,
          subject: template.subject,
          body: template.body,
        }),
        success: function(res) {
          console.log(res)
        },
        error: function() {
        }
      })
    }

    this.setState({templates: templates })

  },

  toggleTemplateEditMenu: function(currentTemplate, editMode) {
    editMode = (editMode) ? true : false
    this.setState({
      currentTemplate: currentTemplate,
      templateDetailMode: !this.state.templateDetailMode,
    })
  }
});

},{"./create_template.js.min.js":15,"./edit_template.js.min.js":19,"./followup_timeline.js.min.js":22,"./templates_menu.js.min.js":47}],4:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Campaigns
  getInitialState: function() {
    return {
      selectedScreen: 'Overview',
    }
  },

  changeSelectedCampaign: function(campaign) {
    //this.props.toggleScreen('CampaignDetail')
    this.props.changeSelectedCampaign('CampaignDetail', campaign)
  },

  render: function() {
    campaigns = []
    console.log(this.props)
    for(i=0;i< this.props.campaigns.length; i++){ 
      campaigns.push(CampaignRow({
                        toggleScreen: this.toggleScreen, 
                        changeSelectedCampaign: this.changeSelectedCampaign, 
                        campaign: this.props.campaigns[i]}) )
    }
    return (
      React.DOM.div({style: {overflow:'auto',height:550}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Campaign Name"), 
            React.DOM.th(null, "Prospect List"), 
            React.DOM.th({style: {textAlign:'center'}}, "Delivered"), 
            React.DOM.th({style: {textAlign:'center'}}, "Opened"), 
            React.DOM.th({style: {textAlign:'center',display:'none'}}, "Replied"), 
            React.DOM.th({style: {textAlign:'center',display:'none'}}, "Link Clicks"), 
            React.DOM.th({style: {textAlign:'center'}}, "Bounces"), 
            React.DOM.th({style: {width:150,textAlign:'center'}}, " ")
          ), 
          React.DOM.tbody(null, 
            campaigns
          )
        )
      )
    );
  }
});

var CampaignRow = React.createClass({displayName: 'CampaignRow',
  toggleScreen: function() {
    //this.props.toggleScreen()
    this.props.changeSelectedCampaign(this.props.campaign)
  },

  render: function() {
    prospect_list = (this.props.campaign.prospect_list) ? this.props.campaign.prospect_list : {list_type:"", name:""}
    if(prospect_list.list_type == "signal_list")
        iconType = React.DOM.i({className: "fa fa-wifi", style: {marginRight:5}})
    else if(prospect_list.list_type == "mining_job")
        iconType = React.DOM.i({className: "fa fa-cloud-download", style: {marginRight:5}})
    else 
        iconType =""
    return (
      React.DOM.tr({style: {cursor:'pointer'}, onClick: this.toggleScreen}, 
        React.DOM.td(null), 
        React.DOM.td(null, " ", React.DOM.h6(null, 
            this.props.campaign.name
        ), " "), 
        React.DOM.td(null, " ", React.DOM.h6(null, 
            iconType, 
            prospect_list.name
        ), " "), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "badge", style: {backgroundColor:'#f0ad4e'}}, 
            React.DOM.i({className: "fa fa-paper-plane"}), "  " + ' ' +
            "100%"
          )
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "label label-success"}, 
            React.DOM.i({className: "fa fa-eye"}), "  " + ' ' +
            "100%")
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.span({className: "label label-primary"}, 
            React.DOM.i({className: "fa fa-mail-reply"}), "  " + ' ' +
            "100%")
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.span({className: "label label-info"}, 
            React.DOM.i({className: "fa fa-external-link-square"}), "  " + ' ' +
            "18%")
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "label label-default"}, 
            React.DOM.i({className: "fa fa-exclamation-circle"}), "  " + ' ' +
            "11%")
        ), 
        React.DOM.td({style: {textAlign:'center',paddingTop:12}}, 
          React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs", 
            style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important;',display:'none'}}, 
            React.DOM.i({className: "fa fa-copy", style: {fontWeight:'bold'}}), "  Clone"), 
          React.DOM.a({href: "javascript:", className: "btn-default", 
            style: {marginLeft:5}}, " ", React.DOM.i({className: "fa fa-trash-o"}))
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.h4({style: {margin:0}}, 
            React.DOM.span({className: "label label-success"}, "Ready")
          )
        )
      )
    )
  }
});

},{}],5:[function(require,module,exports){
/** @jsx React.DOM */
// 

module.exports = React.createClass({displayName: 'exports',
  //CompanyProspect
  render: function () {
    prospect = this.props.prospect
    website = (prospect.website) ? React.DOM.a({href: 'http://'+prospect.website}, React.DOM.i({className: "fa fa-globe"})) : ''
    linkedin_profile = (prospect.profile != "") ? React.DOM.a({href: prospect.profile}, React.DOM.i({className: "fa fa-linkedin-square"})) : ''

  /*
            <a href="javascript:" className="btn btn-success btn-xs"
              style={{background: 'linear-gradient(#34c520,#219211)'}}> 
              <i className="fa fa-search" /> &nbsp;
              Find Prospects
            </a>
  */

  console.log

  //<td><a href="javascript:" onClick={this.deleteProspect}><i className="fa fa-times-circle" /></a></td>
    return (
        React.DOM.tr(null, 
          React.DOM.td({style: {width:'300px'}}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect.name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, prospect.headcount)
          ), 
          React.DOM.td(null, 
            React.DOM.h6({style: {margin:'0px'}}, moment(prospect.createdAt,'YYYY-MM-DDTh:mm:ss').fromNow())), 
          React.DOM.td(null, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.industry)
          ), 
          React.DOM.td({style: {textAlign:'center',width:137,display:'none'}}, 
            React.DOM.span({className: "label label-primary", style: {display: 'block', width: 'auto', marginRight: 'auto', marginLeft: 'auto', width: '25px'}}, "0")
          ), 
          React.DOM.td({style: {display:'none'}}, 
            React.DOM.span({className: "label label-info"}, "Hiring")), 
          React.DOM.td({style: {width:320}}, 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
              onClick: this.openLinkedinCompanyProfile, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Search Profiles"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
              onClick: this.openSimilarCompanies, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Find Similar Companies"
            )
          ), 
          React.DOM.td(null, " ", linkedin_profile, "   ", website, " ")
        )
    );
  },

  openLinkedinCompanyProfile: function() {
    cid = this.props.prospect.profile.split('?')[0].split('/company/')[1]
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
  },

  openSimilarCompanies: function() {
    cid = this.props.prospect.profile.split('?')[0].split('/company/')[1]
    window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'CompanyProspect')
  }
});

},{}],6:[function(require,module,exports){
/** @jsx React.DOM */

var CompanyProspect = require('./company.js.min.js');
var LoadingSpinner = require('./loading_spinner.js.min.js')
var SideMenuProspects = require('./side_menu_user_prospects.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {  prospects   : [],
              currentPage : 1,
              loading     : true,
              pages       : 1,
              count       : "~", }
  },
  /*
   *
    cid = this.props.prospect.profile.split('?')[0].split('/company/')[1]
    console.log(this.props)
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
  */
  
  render: function() {
    console.log('company')
    prospects = []
    for(i=0;i<this.state.prospects.length;i++) {
      url = this.state.prospects[i].url

      if(url != "no linkedin website" && typeof(url) != "undefined" && url != ""){
        url = url.replace('http://','')
        the_link = React.DOM.a({href: 'http://'+url}, React.DOM.i({className: "fa fa-globe"}))
      } else {
        the_link = ""
      }

      profile = this.state.prospects[i].profile
      //profile = profile.replace('http://','')
      li = React.DOM.a({href: 'http://'+profile}, React.DOM.i({className: "fa fa-linkedin-square"}))

      if(this.props.prospectType == 'Prospect') {
        prospects.push(
          UserProspect({deleteProspect: this.deleteProspect, 
                        prospect: this.state.prospects[i], 
                        key: this.generate_id(), 
                        link: the_link, li: li})
        )
      } else {
        prospects.push(
          CompanyProspect({deleteProspect: this.deleteProspect, 
                           key: this.generate_id(), 
                           prospect: this.state.prospects[i]})
        )
      }
    }

    previous = (this.state.currentPage - 1) ? '' : 'disabled'
    forward = (this.state.currentPage == this.state.pages) ? 'disabled' : ''

    lowerLimit = (this.state.currentPage-1)*100
    upperLimit = this.state.currentPage*100

    lowerLimit = (lowerLimit) ? lowerLimit : 1
    upperLimit = (upperLimit > this.state.count) ? this.state.count : upperLimit
  
    console.log(prospects.length)
    companyStyle= (prospects.length) ? {padding:'0'} : {display:'none'}

    return (
      React.DOM.div(null, 
      React.DOM.div({className: "container bg-radius", style: {width:'100%',padding:'0'}}, 
        (prospects.length == 0 && this.state.loading == false) ? EmptyCompanyProspectsPanel(null) : "", 
        (this.state.loading) ? LoadingSpinner(null) : "", 
        React.DOM.div({className: "col-md-12", style: companyStyle}, 
          React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead({style: {backgroundColor:'white'}}, 
                CompanyProspectHeader(null)
              ), 
              React.DOM.tbody(null, 
                prospects
              )
            )
          )
        )
      ), 
        React.DOM.div({className: "panel-footing", id: "navbar", style: {height:'35px',padding:'0px',paddingTop:'7px'}}, 
          React.DOM.span({style: {float:'right',marginRight:'20px'}}, 
          React.DOM.a({href: "javascript:", style: {marginRight:'5px'}, onClick: this.paginatePrevious, className: "blue-gradient btn btn-primary btn-xs " + previous}, React.DOM.i({className: "fa fa-fast-backward"})), 
          React.DOM.a({href: "javascript:", onClick: this.paginatePrevious, className: "blue-gradient btn btn-primary btn-xs " + previous}, React.DOM.i({className: "fa fa-chevron-left"})), 
          "   ", 
          React.DOM.span({className: ""}, lowerLimit + ' - '+upperLimit+' of '+this.state.count), 
          "   ", 
          React.DOM.a({href: "javascript:", onClick: this.paginateForward, className: "blue-gradient btn btn-primary btn-xs " + forward}, React.DOM.i({className: "fa fa-chevron-right"})), 
          React.DOM.a({href: "javascript:", style: {marginLeft:'5px'}, onClick: this.paginateForward, className: "blue-gradient btn btn-primary btn-xs " + forward}, React.DOM.i({className: "fa fa-fast-forward"}))
          )
        )
      )
    );
  },

  componentDidMount: function() {
    thisss = this;
    parse_headers = {'X-Parse-Application-Id':'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 'X-Parse-REST-API-Key':'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb'}
    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)

    $.ajax({
      url: 'https://api.parse.com/1/classes/CompanyProspect',
      type:'GET',
      headers: parse_headers,
      async: true,
      data: 'where={"company":'+company+'}&count=1&order=-createdAt',
      success: function(res){
        thisss.setState({prospects: res.results})
        thisss.setState({count: res.count})
        thisss.setState({pages: Math.ceil(res.count/100)})
        thisss.setState({loading: false})
      },
      error: function(res){
        console.log('error')
        console.log(res)
      }
    });
  },

  generate_id : function () {
    return '_' + Math.random().toString(36).substr(2, 9);
  },
});

var SideMenuCompanyProspects = React.createClass({displayName: 'SideMenuCompanyProspects',
  render: function() {
        
    return (
      React.DOM.div({className: "col-md-2", style: {padding:'0',height:'400px',backgroundColor:'#e0e9ee',borderRight:'1px solid #b0b8bf',textAlign:'center'}}, 
        React.DOM.div({className: "prospect-list-header"}, 
          "Lists"
        ), 
        React.DOM.div({className: "btn-group-vertical", style: {width:'100%'}}, 
          React.DOM.button({type: "button", className: "list-names btn btn-default"}, "Templates"), 
          React.DOM.button({type: "button", className: "list-names btn btn-default"}, "Schedules"), 
          React.DOM.button({type: "button", className: "list-names btn btn-default"}, "Rules")
        ), 
        React.DOM.br(null), 
        React.DOM.br(null), 
        React.DOM.a({href: "javascript:", className: "btn btn-primary", 
              style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
          React.DOM.i({className: "fa fa-plus-circle"}), " New Class"
        ), 
        React.DOM.br(null)
      )
    );
  },

  paginatePrevious: function() {
    console.log('previous')
    console.log((this.state.currentPage - 1)*100)
    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect?skip='+(thiss.state.currentPage-2)*100,
      type:'GET',
      headers: parse_headers,
      data: 'where={"company":'+company+'}&count=1',
      success: function(res){
        thiss.setState({prospects: res.results})
        thiss.setState({currentPage: thiss.state.currentPage - 1})
      },
      error: function(res){
        console.log(res)
      }
    });
  },

  paginateForward: function() {
    console.log('forward')

    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect?skip='+thiss.state.currentPage*100,
      type:'GET',
      headers: parse_headers,
      data: 'where={"company":'+company+'}&count=1',
      success: function(res){
        thiss.setState({prospects: res.results})
        thiss.setState({currentPage: thiss.state.currentPage + 1})
      },
      error: function(res){
        console.log(res)
      }
    });
  },
});

var EmptyCompanyProspectsPanel = React.createClass({displayName: 'EmptyCompanyProspectsPanel',
  openLinkedinWindow: function() {
    window.open('https://www.linkedin.com/vsearch/c?type=companies')
  },

  render: function() {
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-success", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
            "Search for companies!")
        )
      )
    )
    );
  }
});

var CompanyProspectHeader = React.createClass({displayName: 'CompanyProspectHeader',
  render: function() {
    return (
      React.DOM.tr(null, 
        React.DOM.th(null, "Name"), 
        React.DOM.th(null, "Added On"), 
        React.DOM.th(null, "Industry"), 
        React.DOM.th(null, "# of Prospects"), 
        React.DOM.th(null, "Signals"), 
        React.DOM.th(null, " "), 
        React.DOM.th(null, " ")
      )
    );
  }
});

},{"./company.js.min.js":5,"./loading_spinner.js.min.js":26,"./side_menu_user_prospects.js.min.js":39}],7:[function(require,module,exports){
/** @jsx React.DOM */


module.exports = React.createClass({displayName: 'exports',
  // SignalCard
  render: function() {
    company = this.props.company
    return (
      React.DOM.div({className: "panel panel-default signal-card"}, 
        React.DOM.div({className: "panel-body", style: {paddingLeft:25, paddingRight:25}}, 
          React.DOM.h4({style: {display:'inline-block',width:'100%'}}, 
            React.DOM.span({style: { float:'left',maxWidth: '60%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              company.name), 
            React.DOM.span({className: "label label-success", 
              style: {marginLeft:7, float:'right',fontSize:12,
                maxWidth: '40%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              React.DOM.i({className: "fa fa-suitcase"}), "  ", 
              (company.signals) ? company.signals[0].job_title : ""
            )
          ), 
          React.DOM.a({href: "javascript:", className: "btn btn-success", 
            style: {float:'right',marginTop:15, fontWeight:'bold'}}, 
            "Prospect This Company"), 
          React.DOM.p({style: {fontSize:12,width:'75%'}}, 
            React.DOM.span(null, 
            (company.signals) ? company.signals[0].summary : ""
            )
          ), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-map-marker"}), 
             " ", (company.signals) ? company.signals[0].location : ""
            )
        )
      )
    );
  }
});

},{}],8:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createCampaign: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newCampaignName = $('#newCampaignName').val()
    prospectListName = $('#prospect_lists').val()
    thiss = this
    for(i=0;i< this.props.prospectLists.length; i++){
      if(this.props.prospectLists[i].name == prospectListName){
        prospect_list = this.props.prospectLists[i]; 
        break;
      }
    }
    if(newCampaignName.trim() != "")
      this.props.createCampaign({
        name: newCampaignName,
        prospect_list: prospect_list
      })
    // Disable Modal
    $('.modal-backdrop').click()
    $('.fade').click()
    $('#newCampaignName').val('')
  },

  render: function() {
    prospect_lists = []
    for(i=0;i< this.props.prospectLists.length; i++) {
      prospect_lists.push( React.DOM.option(null, this.props.prospectLists[i].name))
    }

    return (
      React.DOM.div({className: "modal fade bs-createCampaign-modal-sm", 
           tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 
           'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-envelope"}), "  Create Campaign")
                ), 

                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createCampaign}, 
                    React.DOM.input({id: "newCampaignName", 
                           type: "text", 
                           placeholder: "Enter Campaign Name...", 
                           className: "form-control"}), 

                    React.DOM.select({className: "form-control", 
                            id: "prospect_lists", 
                            style: {marginTop:20,marginBottom:20}}, 
                      prospect_lists
                    ), 

                    React.DOM.a({href: "javascript:", 
                      onClick: this.createCampaign, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create Campaign"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}],9:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createCompanyProfileModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Company Profile"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createCompanyProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },

  createCompanyProfile: function() {
    profileName = $(".company-profile-name").val()
    industryProfile = {
      'className': 'IndustryProfile',
      'industries' : $('.company-profile-industries').tagsinput('items').reverse()
    }

    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.company-profile-location').tagsinput('items').reverse()
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#company-profile-employeeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#company-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(locationProfile)
    
    profiles = [industryProfile, locationProfile,
                employeeProfile, revenueProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      mining_job:true,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)

    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Company Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control company-profile-name", 
                   placeholder: "Company Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-industries"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-location"}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
        React.DOM.div(null, 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,
                        width:140,marginBottom:20}}, "Company Size "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {width:'73.5%'}, 
                id: "company-profile-employeeBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 1 - 50"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 50 - 250"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 250 - 1000"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 1000 +"
                )
              ), 

              React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
                "Approx. Revenue  "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {display:'none'}, 
                id: "company-profile-companyRevenueBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " ", '< $1M'
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $1M - $5M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $5M - $25M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $25M +"
                )
              )
        ), 

          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
      )
    )
  },
});

},{}],10:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  createProfile: function(e) {
    e.preventDefault()
    profileName = $('.funding-profile-name').val()
    
    //Stage
    //Amount Raised
    //Company Size
    //Approx Revenue

    amountRaisedProfile = {
      'className':'FundingProfile', 
      'revenues': _.map($('#amountRaisedBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(amountRaisedProfile)
    profiles = [amountRaisedProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles.reverse(), 
                         _.omit(newProfile,'profiles'))

      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade ", tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createFundingSignalModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Funding Signal"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 

                  React.DOM.div(null, 
                    React.DOM.form({className: "createSignal", onSubmit: this.createProfile}, 
                      React.DOM.span(null, 
                        React.DOM.h6({style: {width:140,display:'inline-block',
                                    marginBottom:20}}, 
                          "Funding Profile Name:  "), 
                        React.DOM.input({type: "text", 
                               style: {display:'inline-block',width:'73.1%'}, 
                               className: "form-control funding-profile-name", 
                               placeholder: "Funding Profile Name ..."})
                      ), 
                      CompanyProfile(null), 

                      React.DOM.div({style: {marginTop:10,display:'none'}}, 
                        React.DOM.h6({style: {width:140,display:'inline-block'}}, 
                          "Auto Prospect:  "), 
                        React.DOM.div({className: "btn-group autoprospect", 
                              'data-toggle': "buttons"}, 
                          React.DOM.label({className: "btn btn-sm btn-default active"}, 
                            React.DOM.input({type: "radio"}), " Yes"
                          ), 
                          React.DOM.label({className: "btn btn-sm btn-default"}, 
                            React.DOM.input({type: "radio"}), " No"
                          )
                        )
                      )
                    )
                  )

                )
              )
            )
          )
    );
  },

  createFundingProfile: function() {
  },

  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width('59.1%')
  },

});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {
      label = $(e.target).parent('label')
      if(label.hasClass('active'))
        label.removeClass('active')
      else
        label.addClass('active')
    });
  },

  render: function() {
    return (
      React.DOM.div(null, 
          React.DOM.h6({style: {display:'none',margin:0,
                      width:140,marginBottom:20}}, "Stage "), 
          React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "employeeBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Seed"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default ", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series A"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series B"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series C"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series D+"
              )
            ), 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,width:140,marginBottom:20}}, 
              "Amount Raised  "), 
            React.DOM.div({className: "btn-group profile-btns", 'data-toggle': "buttons", 
              id: "amountRaisedBtns", style: {width:'74%'}}, 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            ), 

          React.DOM.br(null), 


          React.DOM.h6({style: {display:'none',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "employeeBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            ), 

            React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
              "Approx. Revenue  "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "revenueBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
      )
    )
  }
});

},{}],11:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // CreateHiringSignalModal
  createSignal: function() {
    profileName = $('.hiring-profile-name').val()
    autoProspect = $('.autoprospect > .active').text() ==  " Yes"

    hiringProfile = {
      'className': 'HiringProfile',
      'roles'    : $('.hiring-roles').tagsinput('items')
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#hiring-revenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() })
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#hiring-employeeBtns').find('.active'), 
                         function(empBtn){ return $(empBtn).text().trim() })
    }

    prospectProfile = {
      'className':'ProspectTitleProfile',
      'title_keywords' : $('.prospectRoleKeywords').tagsinput('items')
    }

    profiles = [hiringProfile, revenueProfile, 
                employeeProfile, prospectProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });


    newProfile = {
      name: profileName,
      autoProspect: autoProspect,
      profiles: nonemptyProfiles,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createHiringSignalModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Hiring Signal"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createSignal, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Signal"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  }
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)
  },

  render: function(){
    addCompany = (!this.state.addCompany) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleCompany, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Company Details"
                                        ) : CompanyProfile({hideCompanyDetails: this.state.hideCompanyDetails})

    addProspect = (!this.state.addProspect) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleProspect, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Prospect Details"
                                        ) : ProspectProfile({hideProspectDetails: this.state.hideProspectDetails})
    addCompanyStyle = (!this.state.addCompany) ? {display:'block',textAlign:'center'} : {}
    addProspectStyle = (!this.state.addProspect) ? {display:'block',textAlign:'center'} : {}

    closeCompanyBtns = (!this.state.addCompany) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleCompany, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
                  onClick: this.toggleCompanyDetails, 
                  style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideCompanyDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    closeProspectBtns = (!this.state.addProspect) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspect, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspectDetails, 
               style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideProspectDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    companyHeading = (!this.state.addCompany) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-building"}), "  Company Details")
    prospectHeading = (!this.state.addProspect) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-user"}), "  Prospect Details")
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Hiring Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'413px'}, 
                   className: "form-control hiring-profile-name", 
                   placeholder: "Hiring Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Hiring Role Name:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'50%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role hiring-roles"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.div({style: {marginTop:10}}, 
          React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
          React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
            React.DOM.label({className: "btn btn-sm btn-default active"}, 
              React.DOM.input({type: "radio"}), " Yes"
            ), 
            React.DOM.label({className: "btn btn-sm btn-default"}, 
              React.DOM.input({type: "radio"}), " No"
            )
          )
          ), 
          React.DOM.hr(null), " ", closeCompanyBtns, " ", companyHeading, 
          React.DOM.div({style: addCompanyStyle}, " ", addCompany, " "), 

          React.DOM.hr(null), " ", closeProspectBtns, " ", prospectHeading, 
          React.DOM.div({style: addProspectStyle}, " ", addProspect, " ")
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    showDetails = (this.props.hideCompanyDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.companyFormSubmit}, 
          React.DOM.br(null), 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-employeeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            ), 

            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Revenue Amount "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-revenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
        )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })

    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )

        )
      )
    )
  }
})

/*
  Funding Profile
  - Amount Raised
  - Stage

  People Profile
  - Locale
  - Title

  Company Profile
  - Industries
  - Revenue
  - Locale
  - # of Employees
*/

var GeneralForm = React.createClass({displayName: 'GeneralForm',

  render: function() {
    return (
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-suitcase"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Find Companies Hiring For ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-users"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Number of Employees ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-institution"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Amount of Funding ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-money"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Revenue Amount ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-wrench"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Using Technologies Such As..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.a({href: "javascript:", 
            onClick: this.createSignal, 
            className: "btn btn-default btn-success", 
            style: {display:'block', width:'100%'}}, 
            "Create Signal"
          )
        )
    )
  }
})

},{}],12:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    thiss = this;
    listClassName = (this.props.listClassName) ? this.props.listClassName : 'ProspectList'
    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName,
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Create List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "listTitle", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createListButtonClick, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Create List")
                  )

                )
              )
            )
          )
    );
  }
});


},{}],13:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createSignalModal
  getInitialState: function() {
    return {
      mining_days : []
    }
  },

  componentDidUdpate: function() {

  },

  createSignal: function() {
  },

  updateDate: function(e) {
    if(!$(e.target).hasClass('no-hover')){
    /*
      $(e.target).addClass('list-group-item-success')
      $(e.target).addClass('no-hover')
      $(e.target).append('<span class="label label-success" style="float:right;">Downloading...</span>')
    */

      /*
      $.ajax({
        url:'',
        headers:appConfig.headers
        data:{},
        success: function(res) {},
        error: function(err) {},
      })
      */
    }
  },

  render: function() {
    // moment.utc(moment().startOf('day')).valueOf()/1000
    dates = []
    for(i=0;i< 30; i++) {  
      date = moment().subtract((i+1), 'days').format('ll')

      dates.push(
        React.DOM.li({onClick: this.updateDate, style: {textAlign:'center'}, 
          className: "list-group-item download-date"}, 
          React.DOM.i({className: "fa fa-calendar"}), " ", 
          date, "      ", 
          React.DOM.a({href: "javascript:", 
            className: "btn btn-success btn-xs"}, 
            "Download")
        )
      )
    }

    return (
      React.DOM.div({className: "modal fade bs-createMiningJob-modal-md", 
           tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createMiningJobModal", 
           style: {top:'50px',overflow:'hidden'}}, 
        React.DOM.div({className: "modal-dialog modal-sm", style: {width:350}}, 
          React.DOM.div({className: "modal-content"}, 
            React.DOM.div({className: "modal-header"}, 
              React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                React.DOM.i({className: "fa fa-cloud-download"}), " " + ' ' +
                "Download Prospects"
              ), 
              React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                 onClick: this.createSignal, 
                 style: {float:'right',marginTop:-28,
                         marginRight:-5,display:'none'}}, 
                 "Download"
              )
            ), 
            React.DOM.div({className: "modal-body"}, 

              React.DOM.ul({className: "list-group date-download-prospects", 
                  style: {height:400,overflow:'auto',
                  borderBottom:'solid 1px #ddd',
                  cursor:'pointer',
                  borderTop:'solid 1px #ddd'}}, 
                React.DOM.h6({style: {margin:0}}, dates)
              )

            ), 

            React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
              React.DOM.button({type: "button", className: "btn btn-default"}, 
                "Close"
              ), 
              React.DOM.button({type: "button", className: "btn btn-primary"}, 
                "Send Email"
              )
            )
          )
        )
      )
    );
  },
  
});


},{}],14:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  createProfile: function() {
    profileName = $(".profileName").val()

    titleProfile = {
      'className': 'ProspectTitleProfile',
      'title_keywords'    : $('.prospect-profile-title').tagsinput('items').reverse()
    }

    /*
    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.prospect-location-profile').tagsinput('items').reverse()
    }

    companySizeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#prospect-profile-companySizeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#prospect-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    profiles = [titleProfile, locationProfile,
                companySizeProfile, revenueProfile]
    */
    profiles = [titleProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      type: 'prospect_profile',
      mining_job:true,
      list_type:"mining_job",
      only_people:true,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
      $('.prospect-profile-title').val('')
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    updateProfile = this.props.updateProfileWithObjectId

    thissss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        console.log('Prospect Profile')
        console.log(ress)

        thissss.props.updateProfileWithObjectId(newProfile, ress.objectId)
        
        user_id = JSON.parse(localStorage.currentUser).objectId
        newProfile.user = appConfig.pointer('_User', user_id) 
        newProfile.company = JSON.parse(localStorage.currentUser).company

        if(newProfile.type == 'prospect_profile')
          newProfile.mining_job_list = true
          newProfile.list_type = "mining_job"
          newProfile.only_people = true

        $.ajax({
          url: 'https://api.parse.com/1/classes/ProspectList',
          type: 'POST',
          headers: appConfig.headers,
          data:JSON.stringify(_.pick(newProfile, 
                                     'name','user','list_type',
                                     'open_people', 'company',
                                     'mining_job_list')),
          success: function(res) {
            $.ajax({
              url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
              type:'PUT',
              headers: appConfig.headers,
              data: JSON.stringify({'prospect_list':{ __type:'Pointer',
                                    className:'ProspectList',objectId:res.objectId } }),
              success: function(res){ console.log(res) },
              error: function(err){ console.log(err) }
            })
          },
          error: function() { }
        })

        // Start Mining Job
        if(newProfile.type == 'prospect_profile') {
          $.ajax({
            //url:'https://nameless-retreat-3525.herokuapp.com/mining_job/title',
            ///url:'https://nameless-retreat-3525.herokuapp.com/title_mining_job',
            url:'http://127.0.0.1:5000/title_mining_job',
            type:'GET',
            data: {prospect_profile: ress.objectId},
            success: function(res) { console.log(res) },
            error: function(err) { console.log(err) }
          })
        }

        // Create Profiles
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            }
          })
        });
      }
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade ", tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createProspectProfileModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Prospect Profile"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },
  createCompanyProfile: function() {
  },
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width('59.1%')
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createProfile}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Prospect Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control hiring-profile-name profileName", 
                   placeholder: "Prospect Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Title:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role prospect-profile-title"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'none'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'none',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control prospect-location-profile-tmp"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.span({style: {display:'none',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control "}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
          CompanyProfile(null), 

          React.DOM.div({style: {display:'none'}}, 
          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    return (
      React.DOM.div(null, 
          React.DOM.br(null), 
          React.DOM.div({style: {display:'none'}}, 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
                    React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                      style: {width:'73.5%'}, id: "prospect-profile-companySizeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            )
          ), 

          React.DOM.div({style: {display:'none'}}, 
            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Approx. Revenue  "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
              style: {width:'73.5%'}, id: "prospect-profile-companyRevenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
          )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })
    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )
        )
      )
    )
  }
})

},{}],15:[function(require,module,exports){
/** @jsx react.dom */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      
    }
  },

  componentDidMount: function() {
    $('.template-body').html(this.state.templateBody)
  },

  clickedOverlay: function() {
    console.log('clicked overlay')
    this.props.toggleTemplateEditMenu()
  },

  changeMode: function() {
    // Update template html on toggle
    console.log('EDIT MODE')
    console.log(this.state.editMode)
    parse_headers = appConfig.parseHeaders
    if(this.state.editMode){
      $('.summer').destroy();
      this.props.saveTemplate({
        name: this.state.name,
        templateBody: $('.summer').code(),
        templateSubject: $('.subject').val(),
      })
      this.setState({
        templateBody: $('.summer').code(),
        templateSubject: $('.subject').val(),
        editMode: !this.state.editMode,
      })
      $.ajax({
        url:'https://api.parse.com/1/classes/Templates/'+this.props.initialTemplateValues.objectId,
        type:'PUT',
        headers:parse_headers,
        data:JSON.stringify({body: $('.summer').code(),subject: $('.subject').val()}),
        success: function(res) {
          console.log(res)
        },
        error: function(err) {
          console.log(err)
        }
      });
    } else {
      this.setState({ editMode: !this.state.editMode })
    }
  },

  componentDidUpdate: function() {
    /* thiss = this; */

    console.log('OTHER')
    if(this.state.editMode){
      console.log('CALLED')
      // Replace Subject 
      $('.subject').val(this.state.templateSubject)

      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })

      // Initialize Editor with html
      $('.summer').code(this.state.templateBody)
    }
  },


  render: function() {
    subjectPlace = (this.state.editMode) ? react.dom.input({style: {display:'inline',width:480}, className: "form-control subject"}) : this.state.templateSubject

    if(this.state.editMode){
       toggleButton = react.dom.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-success btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            react.dom.i({className: "fa fa-save"}), "   Save Template")
    } else {
       toggleButton = react.dom.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            react.dom.i({className: "fa fa-pencil-square"}), "   Edit Template")
    }

    return (
      react.dom.div(null, 
      react.dom.div({onClick: this.clickedOverlay, id: "editTemplateOverlay"}), 
      react.dom.div({id: "editTemplateView", 
           className: "panel panel-info", 
           style: {display:'block'}}, 
           react.dom.div({className: "panel-heading", style: {height:50}}, 
             react.dom.h6({style: {float:'left'}}, 
               react.dom.i({className: "fa fa-file-text-o"}), 
               "  " + this.props.initialTemplateValues.name
             ), 
          toggleButton
        ), 
        react.dom.div({className: "panel-body"}, 
          react.dom.div({className: "editTemplateTitle"}, 
            react.dom.span(null, "Subject: "), 
            subjectPlace
          ), 
         react.dom.br(null), 
         react.dom.div({className: "templateDetails"}, 
           react.dom.h6({style: {marginBottom:'0'}, className: "text-muted"}, 
             "Created by Mark on Jul. 21, 2014"
           ), 
           react.dom.h6({style: {marginTop:'0'}, className: "text-muted"}, 
             "last updated 7 days ago"
           )
         ), 
        react.dom.br(null), 
        react.dom.div({className: "panel panel-default"}, 
          react.dom.div({className: "panel-body summer template-body"}
          )
        )
    )
)
)
    );
  }
});

},{}],16:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // DataRow
  getInitialState: function() {
    return { }
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    //console.log(this.state.checked)
    //console.log(checked)
    //{prospect.employeeCountRange.name + " employees" }
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.websiteUrl) ?  React.DOM.a({href: "http://"+prospect.websiteUrl.replace('http://','')}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect.name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, prospect.headcount)
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px'}}, moment(prospect.createdAt,'YYYY-MM-DDTh:mm:ss').fromNow())
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.industry)
          ), 

          React.DOM.td({style: color}, 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs", 
              onClick: this.openLinkedinCompanyProfile, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Search Profiles"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs", 
              onClick: this.openSimilarCompanies, 
              style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Find Similar Companies"
            )
          ), 

          React.DOM.td({style: color}, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.city)
          ), 

          React.DOM.td({style: color}, 
            this.props.li, " ", this.props.link, 
            websiteBtn
          )
        )
    );
  },

  openLinkedinCompanyProfile: function() {
    cid = this.props.prospect.profile.split('?')[0].split('/company/')[1]
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
  },

  openSimilarCompanies: function() {
    cid = this.props.prospect.profile.split('?')[0].split('/company/')[1]
    window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});


},{}],17:[function(require,module,exports){
/** @jsx React.DOM */

//TODO - abstract lists
var SideMenuProspects = require('./side_menu_user_prospects.js.min.js');

var UserProspect = require('./user_prospect.js.min.js');
var DataRow = require('./data_row.js.min.js');

var UserProspectHeader = require('./user_prospect_header.js.min.js');
var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var LoadingSpinner = require('./loading_spinner.js.min.js')
var PanelFooting = require('./panel_footing.js.min.js')
var Messenger = require('./messenger.js.min.js')
var DeleteListModal = require('./delete_list_modal.js.min.js')
var RenameListModal = require('./rename_list_modal.js.min.js')
var CompanyProspect = require('./company.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {  currentPage : 1,
              className: this.props.className,  
              listClassName: this.props.listClassName,
              customRow: this.props.tableRow,
              pages       : 1,
              currentList : 'All',
              currentListObjectId : '',
              loading: true,
              lists : [],
              masterCheckboxChecked: false,
              prospectsPerPage: 50,         //classNames per page
              keyboardActiveProspect: 0,    //first
              selectedProspects: [],        //selectedClassName
              prospects   : [],             //className
              totalCount  : "~", 
              count       : "~", }
  },

  createList: function(data) {
    lists = this.state.lists
    lists.push(data)
    this.setState({ lists: lists })
  },

  renameList: function(newListName) {
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      'Content-Type': 'application/json'
    }
    console.log(this.state.currentListObjectId)
    console.log(this.state.currentList)
    console.log(newListName)

    // Update Local State
    thiss = this;
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.name == thiss.state.currentList){
        item.name = newListName
        return item
      }
      return item
    });

    this.setState({lists : filtered})
    this.setState({currentList: newListName})

    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    // Persist / Ajax
    listClassName = this.state.listClassName
    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName+'/'+this.state.currentListObjectId,
      headers: parseHeaders,
      type:'PUT',
      data:JSON.stringify({'name':newListName}),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  deleteList: function() {
    // TODO 
    // Get All Members Of This List
    // Remove From List Array
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      'Content-Type': 'application/json'
    }
    
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.objectId == thiss.state.currentListObjectId)
        return false
      return true
    });

    this.setState({lists: filtered})
    this.setState({currentList: 'All'})
    this.changeList('All', '')

    // Remove
    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    // Persist / Ajax
    listClassName = this.state.listClassName

    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName+'/'+this.state.currentListObjectId,
      headers: parseHeaders,
      type:'DELETE',
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  changeList: function(newListName,objectId) {
    // add overlay loading
    //console.log(newListName)
    //console.log(objectId)

    localStorage.selectedProspects = JSON.stringify([])

    this.setState({currentList : newListName})
    this.setState({currentListObjectId : objectId})
    this.setState({prospects  : []    })
    this.setState({count      : '~'   })
    this.setState({pages      : 1     })
    this.setState({loading    : true  })
    this.setState({currentPage: 1})
    this.setState({keyboardActiveProspect: 0})

    qry = 'where={"company":'+company+',"archived":true}&count=1&order=-createdAt'
    console.log(newListName)

    if(this.state.currentList != 'All' || typeof(objectId) != "undefined" && newListName != 'Archived'){
      currentList = JSON.stringify({
        'objectId'  : objectId, 
        '__type'    : 'Pointer', 
        'className' : this.state.listClassName
      })

      company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
      qry = 'where={"company":'+company+'}&count=1'
      qry = 'where={"lists":'+currentList+'}&count=1&order=-createdAt'
    } else if (newListName == 'Archived') {
      qry = 'where={"company":'+company+',"archived":false}&count=1&order=-createdAt'
    }
    console.log(qry)

    className = this.state.className

    $.ajax({
      url: 'https://api.parse.com/1/classes/'+className,
      type:'GET',
      headers: parse_headers,
      async: true,
      data: qry,
      ajaxStart: function() {
        console.log('started list')
      },
      success: function(res){
        thisss.setState({prospects: res.results})
        thisss.setState({count: res.count})
        //thisss.setState({totalCount: res.count})
        thisss.setState({pages: Math.ceil(res.count/thisss.props.prospectsPerPage)})
        thisss.setState({loading: false})
      },
      error: function(res){
        //console.log('error')
        //console.log(res)
      }
    })
  },

  checkboxAction: function(checkedState, objId) {
    /* Storing Checked Prospects In LocalStorage To Make it Easier To
     * Copy and Move Prospects 
     *
     * Move To User_Prospects?
     */
    
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    //console.log(checkedState)
    if(checkedState)
      selectedProspects.push(objId)
    else
      selectedProspects = _.reject(selectedProspects, 
                                   function(id){return id == objId})

    console.log(selectedProspects)
    localStorage.selectedProspects = JSON.stringify(selectedProspects)
    this.setState({selectedProspects: selectedProspects})
  },

  masterCheckboxChanged: function(masterCheckboxValue) {
    this.setState({masterCheckboxChecked: masterCheckboxValue})
  },

  render: function() {


    this.startKeyboardShortcuts()
    $('body').css({overflow:'auto'})

    prospects = []
    for(i=0;i< this.state.prospects.length;i++) {
      url = this.state.prospects[i].url
      prospect = this.state.prospects[i]

      if(url != "no linkedin website" && typeof(url) != "undefined" && url != ""){
        url = url.replace('http://','')
        the_link = React.DOM.a({href: 'http://'+url}, React.DOM.i({className: "fa fa-globe"}))
      } else {
        the_link = ""
      }

      //profile = this.state.prospects[i].linkedin_url.replace('http://','')
      //profile = this.state.prospects[i].linkedin_url.replace('https://','')
      li = React.DOM.a({href: 'http://'+profile, className: "linkedin_link"}, React.DOM.i({className: "fa fa-linkedin-square"}))

      keyboardSelected = (i == this.state.keyboardActiveProspect)

      selectedProspects = JSON.parse(localStorage.selectedProspects)
      alreadyChecked=false
      for(ii=0;ii< selectedProspects.length;ii++)
        if(prospect.objectId == selectedProspects[ii])
          alreadyChecked = true

        //console.log(alreadyChecked)

      prospects.push(
        DataRow({deleteProspect: this.deleteProspect, 
                 prospect: this.state.prospects[i], 
                 masterCheckboxChecked: this.state.masterCheckboxChecked, 
                 key: this.generate_id(), 
                 link: the_link, 
                 keyboardSelected: keyboardSelected, 
                 checkboxAction: this.checkboxAction, 
                 alreadyChecked: alreadyChecked, 
                 li: li}))
    }

    listType = (this.state.currentList == "All") ? {display:'none'} : {float:'left'}
    listNameStyle = (this.state.currentList == "All") ? {display:'none'} : {float:'left',display:'inline-block', fontWeight: 200, marginTop: 1, paddingRight: 10, marginLeft: -10}
    listBtn = (this.state.currentList == "All") ? {display:'none'} : {float:'left',marginLeft:5}
    listOptions = (this.state.currentList == "All") ? {display:'none'} : {float:'right'}
    copyDropdownStyle = (this.state.currentList == "All") ? {width:114, right:4} : {width:114, right:36}
    currentList = this.state.currentList
    return (
        React.DOM.div(null, 
      React.DOM.div({className: "container", style: {width:'100%',padding:'0', background: 'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)'}}, 
        SideMenuProspects({currentList: this.state.currentList, 
                           count: this.state.count, 
                           totalCount: this.state.totalCount, 
                           changeList: this.changeList, 
                           listClassName: this.state.listClassName, 
                           createList: this.createList, 
                           lists: this.state.lists}), 

        React.DOM.div({className: "col-md-10", style: {padding:'0'}}, 
              React.DOM.div({id: "prospectDetailButtons"}, 
                ListDetailButtons({
                  renameList: this.renameList, 
                  deleteList: this.deleteList, 
                  currentListName: this.state.currentList, 
                  currentList: this.state.currentListObjectId}), 

                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({href: "javascript:", 
                     className: "btn btn-primary btn-xs list-options", 
                     id: "", 
                     style: {display:'none'}
                     }, 
                    React.DOM.i({className: "fa fa-bars"})
                  )
                ), 

                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     id: "copyToList", 
                     href: "javascript:", 
                     className: "drop-target btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-copy"}), 
                       "  Copy To List  ",  
                     React.DOM.i({className: "fa fa-caret-down"})
                ), 
                CurrentListsTwo({lists: this.state.lists, 
                                 copyDropdownStyle: copyDropdownStyle, 
                                 listAction: this.copySelectedProspects})
                ), 
  
                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     href: "javascript:", 
                     id: "moveToList", 
                     style: listOptions, 
                     className: "btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-share"}), 
                     "  Move To List  ",  
                     React.DOM.i({className: "fa fa-caret-down"})
                ), 
                CurrentLists({lists: this.state.lists, 
                              listAction: this.moveSelectedProspects})
                ), 

                React.DOM.a({onClick: this.downloadFile, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                  React.DOM.i({className: "fa fa-download"}), "   Download CSV  " 
                ), 

                React.DOM.a({onClick: this.downloadFile, 
                   style: listOptions, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                  React.DOM.i({className: "fa fa-cloud-download"}), "   Find Prospects   " 
                )
              ), 
        

          React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
            React.DOM.table({className: "prospects-table table table-striped", style: {marginBottom:'0px'}}, 
              React.DOM.thead({style: {backgroundColor:'white'}}, 
                CompanyProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged})
              ), 
              React.DOM.tbody(null, 
                prospects
              )
            ), 
            (this.state.loading) ? LoadingSpinner(null) : ""
          )
        )
      ), 

      PanelFooting({currentPage: this.state.currentPage, 
                    count: this.state.count, 
                    paginate: this.paginate, 
                    prospectsPerPage: this.state.prospectsPerPage, 
                    pages: this.state.pages}), 
      Messenger(null)
    )
    );
  },

  paginate: function(newProspects, newPage) {
    this.setState({
      prospects: newProspects,
      currentPage: newPage,
      keyboardActiveProspect: 0
    })
    this.startKeyboardShortcuts()
    document.getElementById('autoscroll').scrollTop = 0
  },

  downloadFile: function() {
    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
    }

    // Get List Count
    list = JSON.stringify({
      '__type'   :  'Pointer',
      'className':  this.state.listClassName,
      'objectId' :  this.state.currentListObjectId
    })
    console.log(list)
    // Add Support For More than 1000
    // num_of_requests
    //this.props.paginate(res.results, this.props.currentPage + 1)
    localStorage.download_total = Math.ceil(this.state.count/1000)
    localStorage.downloads      = 0

    if(this.state.currentList == "All")
      qry = 'where={"company":'+company+'}&count=1'
    else
      qry = 'where={"lists":'+list+'}&count=1'

    className = this.state.className

    for(i=0;i< Math.ceil(this.state.count/1000); i++){
      $.ajax({
        url: 'https://api.parse.com/1/classes/'+className+'?limit=1000&skip='+i,
        type:'GET',
        headers: parse_headers,
        downloadFile: 'download_'+i,
        data: qry,
        success: function(res){
          // Clean Results
          // Remove Certain Parse Columns - created_at, updated_at, objectId
          // Rename createdAt as date prospected
          for(i=0;i< res.results.length;i++) {
            delete res.results[i].company
            delete res.results[i].pos
            delete res.results[i].user
            delete res.results[i].objectId
            delete res.results[i].createdAt
            delete res.results[i].updatedAt
          }

          // Add Results To LocalStorage
          localStorage.downloads = JSON.parse(localStorage.downloads) + 1 
          localStorage.setItem(this.downloadFile, JSON.stringify(res.results))

          // Check to see if all ajax reqs in for loop are complete
          if(localStorage.downloads == localStorage.download_total) {
            console.log('matched')
            // Merge all localStorage results
            prospects = []
            for(ii=0;ii < JSON.parse(localStorage.download_total); ii++){
              prospects = prospects.concat(JSON.parse(localStorage.getItem('download_'+ii)))
              console.log(prospects)
            }

            console.log(prospects)
            // Output as CSV
            var blob = new Blob([Papa.unparse(prospects)], {type: "text/plain;charset=utf-8"});
            console.log(blob)
            saveAs(blob, "prospects.csv");
          }
      },

      error: function(res){
        console.log(res)
      }
      });
    }
    
    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
    

  },

  removeSelectedProspects: function() {
    // If List Type is All Archive the prospect
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []

    for(i=0;i< selectedProspects.length;i++){
      if(this.state.currentList != 'All'){
        tmp = {
          method:'PUT',
          path:'/1/classes/'+this.state.className+'/'+selectedProspects[i],
          body: {
            lists: {
              '__op'    : 'Remove',
              "objects" : [{ 
                  '__type':'Pointer',
                  'className':this.state.listClassName,
                  'objectId':this.state.currentListObjectId
              }]
            }
          }
        }
      }else{
        tmp = {
          method:'PUT',
          path:'/1/classes/'+this.state.className+'/'+selectedProspects[i],
          body: {
            archived:false,
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        lists = thiss.state.lists

        for(i=0;i< lists.length; i++) { 
          // Subtract From Old List - Not Working For Archive
          if(lists[i].objectId == thiss.state.currentListObjectId)
            lists[i].count = parseInt(lists[i].count) - parseInt(selectedProspects.length)
        }
        // Update local list count
        thiss.setState({lists: lists})

        // remove from current list ui
        selectedProspects = JSON.parse(localStorage.selectedProspects)
        console.log('remove selected prospects')
        console.log(selectedProspects)
        console.log(thiss.state.prospects)
        var filtered = _.filter(thiss.state.prospects, function(item) {
          for(i=0;i< selectedProspects.length;i++) 
            if(item.objectId == selectedProspects[i])
              return false
          return true
        });
        console.log(filtered)
        thiss.setState({prospects: filtered})
        localStorage.selectedProspects = JSON.stringify([])

        // add alert to inform user
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  moveSelectedProspects: function(listObjectId) {
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    // get the selected objectId from selectedProspects state
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []


    // Batch Update Parse
    // - Remove All Selected Prospects From Current List
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/'+this.state.className+'/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'Remove',
            "objects" : [{ 
                '__type':'Pointer',
                'className':this.state.listClassName,
                'objectId':this.state.currentListObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }
    
    // - Add Other List 
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/'+this.state.className+'/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'AddUnique',
            "objects" : [{ 
                '__type':'Pointer',
                'className':this.state.listClassName,
                'objectId':listObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        lists = thiss.state.lists

        for(i=0;i< lists.length; i++) { 
          // Add To New List
          if(lists[i].objectId == listObjectId)
            lists[i].count = parseInt(lists[i].count) + parseInt(selectedProspects.length)
          // Subtract From Old List
          if(lists[i].objectId == thiss.state.currentListObjectId)
            lists[i].count = parseInt(lists[i].count) - parseInt(selectedProspects.length)
        }
        // Update local list count
        thiss.setState({lists: lists})

        // remove from current list ui
        console.log('selectedProspects')
        console.log(thiss.state.prospects)
        var filtered = _.filter(thiss.state.prospects, function(item) {
          is_selected = true
          for(i=0;i< selectedProspects.length;i++) 
            if(item.objectId == selectedProspects[i])
              is_selected = false
          return is_selected
        });
        console.log(filtered)
        thiss.setState({prospects: filtered})
        localStorage.selectedProspects = JSON.stringify([])

        // add alert to inform user
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  copySelectedProspects: function(listObjectId) {
    console.log(listObjectId)
    
    // make batch ajax request to parse
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    // Add Loading Sign To List

    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/'+this.state.className+'/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'AddUnique',
            "objects" : [{ 
                '__type':'Pointer',
                'className':this.state.listClassName,
                'objectId':listObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        // Update With the number of successes
        // Update local list count
        lists = thiss.state.lists
        for(i=0;i< lists.length; i++) { 
          if(lists[i].objectId == listObjectId)
            lists[i].count = parseInt(lists[i].count) + parseInt(res.length)
        }
        thiss.setState({lists: lists})
        localStorage.selectedProspects = "[]"
        thiss.setState({selectedProspects : [] })
        
        // add alert to inform user
        // Unselect all selected
      },
      error: function(err) {
        console.log(err)
      }
    });

  },

  hideAlert: function() {
    $('.alert').hide()
  },

  adjustHeight: function(whichOne) {
    prospectWindowTop = $('#prospectDetailButtons').position().top
    prospectWindowTop = prospectWindowTop + $('#prospectDetailButtons').height()
    prospectWindowBottom = $('#autoscroll').position().top + $('#autoscroll').height()

    if(whichOne == 'j')
      activeProspect = this.state.keyboardActiveProspect +1 
    else
      activeProspect = this.state.keyboardActiveProspect -1 

    activeTop = $($('.prospects-tr')[activeProspect]).position().top
    selectedHeight = $($('.prospects-tr')[activeProspect]).height()
    activeBottom = $($('.prospects-tr')[activeProspect]).position().top+selectedHeight

    console.log(prospectWindowTop, prospectWindowBottom)
    console.log(activeTop, activeBottom)

    scrollTop = document.getElementById('autoscroll').scrollTop
    if(activeBottom > prospectWindowBottom)
      document.getElementById('autoscroll').scrollTop = scrollTop + activeBottom - prospectWindowBottom

    if(activeTop < 0)
      document.getElementById('autoscroll').scrollTop = scrollTop + activeTop - 37
    else if(activeTop == $($('.prospects-tr')[0]).position().top)
      document.getElementById('autoscroll').scrollTop = 0
      
    // Get Postion of Top
    // Get Position of Bottom 
    // Get Position of Current Selected
    // Adjust by scrolling down or up
  },

  startKeyboardShortcuts: function() {
    /* Keyboard Shortcuts */
    Mousetrap.reset()
    //Mousetrap.unbind(['j','k','o'])
    thiss = this;

    /* Prospect Table Shortcuts */
    Mousetrap.bind('j', function() { 
      keyboard = thiss.state.keyboardActiveProspect
      if(keyboard != thiss.state.prospectsPerPage+1)
        thiss.adjustHeight('j')
        thiss.setState({keyboardActiveProspect: keyboard+1})
    });

    Mousetrap.bind('k', function() { 
      keyboard = thiss.state.keyboardActiveProspect
      if(keyboard != 1)
        thiss.adjustHeight('k')
        thiss.setState({keyboardActiveProspect: keyboard-1})
    });


    Mousetrap.bind('o', function() { 
      console.log('open current prospect')
      console.log($($('.keySelect').find('a.linkedin_link')[0]).attr('href'))
      link = $($('.keySelect').find('a.linkedin_link')[0]).attr('href')
      /*
      window.open(link, '_blank')
      console.log('new')
      */
      //popupWindow.blur();
      //window.focus();
      // keyboard = thiss.state.keyboardActiveProspect
      
      var a = document.createElement("a");
      a.href = link
      var evt = document.createEvent("MouseEvents");
      //the tenth parameter of initMouseEvent sets ctrl key
      // For Mac This Works Check For - Windows
      evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0,
                                  false, false, false, true, 0, null);
      a.dispatchEvent(evt);
    });



    /* List Modification Shortcuts */
    Mousetrap.bind('tab+r', function(){
      //console.log('reload')
      $('#renameListBtn').click()
    })

    Mousetrap.bind('tab+d', function(){
      //console.log('reload')
      $('#deleteListModal').click()
    })

    Mousetrap.bind('tab+s', function(){
      //console.log('reload')
      //$('#downloadProspects').click()
      thiss.downloadFile()
    })

    Mousetrap.bind('shift+l', function(){
      //console.log('reload')
      //$('#downloadProspects').click()
      //thiss.downloadFile()
      $('.new-list-btn').click()
    })

    Mousetrap.bind('e', function(){
      console.log('reload')
      //$('#downloadProspects').click()
      thiss.removeSelectedProspects()
    })

    Mousetrap.bind('c', function() { 
      console.log('copy')
      $('#copyToList').click()
    });

    Mousetrap.bind('m', function() { 
      console.log('copy')
      $('#moveToList').click()
    });

    //Mousetrap.bind('e', function() { console.log('e'); });
    Mousetrap.bind('right', function() { console.log('right'); });
    Mousetrap.bind('left', function() { console.log('left'); });

  },

  componentDidMount: function() {
    /* OnLoad For The First Time Function */
    localStorage.selectedProspects = JSON.stringify([])
    thisss = this;

    //this.startKeyboardShortcuts()

    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb'
    }

    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
    cuid = JSON.parse(localStorage.currentUser).objectId
    user = JSON.stringify({'__type':'Pointer',
                           'objectId':cuid, 
                           'className': 'User'})
    archiveList = JSON.stringify({ //hardCode
      'objectId':'SerPQjckve',
      '__type':'Pointer', 
      'className' : this.state.listClassName
    })

    qry = 'where={"company":'+company+',"archived":true}&count=1&order=-createdAt'

    if(this.state.currentList != 'All'){
      currentList = {
        'objectId':this.state.currentListObjectId, 
        '__type':'Pointer', 
        'className' : this.state.listClassName
      }
      currentList = JSON.stringify(currentList)
      user = JSON.stringify({'__type':'Pointer',
                             'objectId':'xThAXc0LZT',
                             'className':'User'})

      // add company to prospects added through mining job
      qry = 'where={"company":'+company+',"lists":'+currentList+'}&count=1'
    }

    className = this.state.className
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+className+'?limit='+thisss.state.prospectsPerPage,
      type:'GET',
      headers: parse_headers,
      cache: true,
      data: qry,
      success: function(res){
        console.log('COMPANY RESULTS')
        console.log(res.results)
        console.log(res.results.length)
        thisss.setState({prospects: res.results})
        thisss.setState({count: res.count})
        thisss.setState({totalCount: res.count})
        thisss.setState({pages: Math.ceil(res.count/thisss.props.prospectsPerPage)})
        thisss.setState({loading: false})
      },
      error: function(res){
        console.log('error')
        console.log(res)
      }
    })

    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
    }

    currentUser = { 
      '__type'   : 'Pointer',
      'className': '_User',
      'objectId' : JSON.parse(localStorage.currentUser).objectId
    }

    thiss = this;
    listClassName = this.state.listClassName
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+listClassName,
      type: 'GET',
      headers: parse_headers,
      data: 'where={"user":'+JSON.stringify(currentUser)+"}&count=1&order=-createdAt",
      success: function(res) {
        console.log(res)
        results = res.results
        for(i=0;i< results.length; i++) {
          results.count = '~'
        }
        thiss.setState({lists: results})
        // Make batch request to get list counts after they are loaded
        for(i=0;i < res.results.length; i++) {
          localStorage.setItem(res.results[i].objectId, "")
        }

        for(i=0;i< res.results.length; i++) {
          list = {
            '__type'    : 'Pointer',
            'objectId'  : res.results[i].objectId,
            'className' : thiss.state.listClassName,
          }

          className = thiss.state.className
          $.ajax({
            url:'https://api.parse.com/1/classes/'+className,
            type:'GET',
            headers:parse_headers,
            listObjectId: res.results[i].objectId,
            data: 'where={"lists":'+JSON.stringify(list)+'}&count=1',
            success: function(res) {
              //console.log(this.listObjectId)
              localStorage.setItem(this.listObjectId, res.count)
              amount = 0
              for(ii=0;ii< results.length;ii++){
                if(localStorage.getItem(results[ii].objectId) == "")
                  amount = amount + 1
              }

              if(amount == 0) {
                for(ii=0;ii< results.length;ii++)
                  results[ii].count = localStorage.getItem(results[ii].objectId)

                thiss.setState({lists: results})
                //console.log('Got Counts')
              }

              // updated res.count
              //thiss.setState({count: res.count})
            },
            error: function(err) {
              console.log(err)
            }
          })
        }
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
  },

  generate_id : function () {
    return '_' + Math.random().toString(36).substr(2, 9);
  },
});

/*  Dropdown Menus */

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.listAction(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, href: "javascript:", onClick: this.listAction}, this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:158}}, 
        lists
      )
    );
  }
});

var ListsMenu = React.createClass({displayName: 'ListsMenu',
  render: function() {
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {
            minWidth:'inherit',
            top: '20px',
            width: '125px',
            right: '154px',
            left:'auto'
          }}, 
        React.DOM.li(null, React.DOM.a({href: "#books"}, 
          React.DOM.i({className: "fa fa-times"}), "  " + ' ' +
          "Delete List"
        )), 
        React.DOM.li(null, React.DOM.a({href: "#podcasts"}, 
          "Rename Lists"
        ))
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.listAction(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i<this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               href: "javascript:", 
               onClick: this.listAction}, 
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: this.props.copyDropdownStyle}, 
        lists
      )
    );
  }
});

var ListDetailButtons = React.createClass({displayName: 'ListDetailButtons',
  // Rename List
  getInitialState: function() {
    return {
      editMode: false
    }
  },
  render: function() {
    //console.log(this.props.currentListObjectId)
    if(!this.state.editMode) {
      stuff = React.DOM.span({className: "", style: listNameStyle}, 
            (this.props.currentListName == "All") ? '' : React.DOM.i({className: "fa fa-bars", style: {fontSize:16, marginTop:-5}}), 
            (this.props.currentListName == "All") ? '' : "   " +this.props.currentListName
              )
    } else {
      stuff = React.DOM.input({className: "form-control", style: {width: 100, float: 'left', height: 24, marginTop: -1}})
    }
    return (

          React.DOM.div(null, 
            React.DOM.h4({style: {margin:0}}, 
              stuff, 
              React.DOM.a({href: "javascript:", 
                style: listBtn, 
                'data-toggle': "modal", 
                id: "renameListBtn", 
                'data-target': ".bs-renameList-modal-sm", 
                className: " btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-pencil"})
              ), 
              React.DOM.a({href: "javascript:", 
                style: listBtn, 
                'data-toggle': "modal", 
                id: "deleteListModal", 
                'data-target': ".bs-deleteList-modal-sm", 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-trash-o"})
              )
            ), 
            RenameListModal({renameList: this.props.renameList}), 
            DeleteListModal({deleteList: this.props.deleteList})
          )
      );
  },

  renameList: function(newListName) {
    this.props.renameList(newListName)
  },

  deleteList: function(){
    this.props.deleteList()
  },

  toggleEdit: function() {
    this.setState({editMode: !this.state.editMode })
  }
});

var CompanyProspectHeader = React.createClass({displayName: 'CompanyProspectHeader',
  render: function() {
    return (
      React.DOM.tr(null, 
        React.DOM.th(null), 
        React.DOM.th({style: {width:300}}, "Name"), 
        React.DOM.th({style: {width:100}}, "Added On"), 
        React.DOM.th(null, "Industry"), 
        React.DOM.th({style: {width:137,display:'none'}}, "# of Prospects"), 
        React.DOM.th({style: {display:'none'}}, "Signals"), 
        React.DOM.th({style: {width:600}}, " "), 
        React.DOM.th(null, " "), 
        React.DOM.th(null, " ")
      )
    );
  }
});

},{"./company.js.min.js":5,"./data_row.js.min.js":16,"./delete_list_modal.js.min.js":18,"./loading_spinner.js.min.js":26,"./messenger.js.min.js":28,"./panel_footing.js.min.js":31,"./rename_list_modal.js.min.js":35,"./side_menu_user_prospects.js.min.js":39,"./user_prospect.js.min.js":49,"./user_prospect_header.js.min.js":50,"./user_side_menu_list.js.min.js":51}],18:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  deleteList: function() {
    this.props.deleteList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-deleteList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-trash-o"}), "  Delete List?")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({className: "deleteForm", onSubmit: this.deleteList}, 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-danger", 
                      style: {display:'block', width:'100%'}}, 
                      "Delete"
                    ), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-default", 
                      style: {display:'block', width:'100%'}}, 
                      "Cancel"
                    )
                  )

                )
              )
            )
          )
    );
  }
});


},{}],19:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      name: this.props.initialTemplateValues.name,
      body: this.props.initialTemplateValues.body,
      subject: this.props.initialTemplateValues.subject,
      editMode: this.props.initialTemplateValues.editMode
    }
  },

  componentDidMount: function() {
    console.log('did mount')
    $('.template-body').html(this.state.body)
    if(this.state.editMode) {
      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })
    }

    renderjson.set_show_to_level('all')
    prospect = _.pick(this.props.prospect, 
      'company_name', 'name', 'pos'
    )
    prospect.first_name = prospect.name.split(' ')[0]
    prospect.last_name = _.last(prospect.name.split(' '))
    prospect = _.omit(prospect, 'name')

    document.getElementById("editTemplate").appendChild(renderjson(prospect));
    $('#editTemplateOverlay').html()
    thiss = this;
    $('.renderjson').click(function() {
      thiss.props.toggleTemplateEditMenu()
    })

    $('.renderjson').css({
      'position': 'absolute',
      'z-index': '1000000000',
      'background-color':'rgba(0,0,0,0)',
      'border':'0',
      'color':'white',
      'margin-top':'0px',
      'height': '542px',
      'overflow':'auto',
      'width':'380px'
    })

    $('.key').css({
      'cursor':'pointer'
    })

    $('.timeline').css({
      '-webkit-filter': 'blur(10px)',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': 'blur(10px)',
    })
  },
  componentWillUnmount:function() {
    $('.timeline').css({
      '-webkit-filter': '',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': '',
    })
  },

  clickedOverlay: function() {
    console.log('clicked overlay')
    this.props.toggleTemplateEditMenu()
  },

  changeMode: function() {
    // Update template html on toggle
    parse_headers = appConfig.parseHeaders
    if(this.state.editMode){
      $('.summer').destroy();
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })

      console.log('look at this')
      console.log(name)
      name = (this.props.initialTemplateValues.newTemplate) ? $('#template-name').val() : this.state.name
      this.props.saveTemplate({
        name: name,
        body: $('.summer').code(),
        subject: $('.subject').val(),
      }, this.props.initialTemplateValues.newTemplate)

      this.setState({
        name: $('#template-name').val(),
        body: $('.summer').code(),
        subject: $('.subject').val(),
        editMode: !this.state.editMode,
      })

      objId = this.props.initialTemplateValues.objectId
      $.ajax({
        url:'https://api.parse.com/1/classes/Templates/'+objId,
        type:'PUT',
        headers:parse_headers,
        data:JSON.stringify({body: $('.summer').code(),
                             subject: $('.subject').val()}),
        success: function(res) {
          console.log(res)
        },
        error: function(err) {
          console.log(err)
        }
      });
    } else {
      this.setState({ editMode: !this.state.editMode })
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })
    }
  },

  componentWillUpdate: function(newProps) {
    console.log('THE NEW PROPS')
    console.log(newProps)
  },

  componentDidUpdate: function() {
    /* thiss = this; */
    console.log('OTHER')
    if(this.state.editMode){
      console.log('CALLED')
      // Replace Subject 
      $('.subject').val(this.state.subject)
      $('#template-name').val(this.state.name)

      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })

      // Initialize Editor with html
      $('.summer').code(this.state.body)
    }
  },


  render: function() {
    subjectPlace = (this.state.editMode) ? React.DOM.input({style: {display:'inline',width:480}, className: "form-control subject"}) : this.state.subject

    if(this.state.editMode){
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-success btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-save"}), "   Save Template")

       if(this.props.initialTemplateValues.newTemplate){
         the_name = React.DOM.input({className: "form-control", 
                           id: "template-name", 
                           style: {float:'left',width:200}})
       }
    } else {
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-pencil-square"}), "   Edit Template")

       the_name = React.DOM.h6({style: {float:'left'}}, 
                   React.DOM.i({className: "fa fa-file-text-o"}), " ", 
                   this.state.name
                  )
    }

    return (
      React.DOM.div({id: "editTemplate"}, 
        React.DOM.h5({className: "example-template-title"}, "Example Template Values"), 
        React.DOM.div({className: "example-template-title", 
             style: {marginLeft:215, marginTop:8}}, 
          React.DOM.a({href: "javascript:", 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-left"})), 
          React.DOM.a({href: "javascript:", 
            style: {marginLeft:5}, 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-right"}))
        ), 
        React.DOM.div({onClick: this.clickedOverlay, id: "editTemplateOverlay"}), 
          React.DOM.div({id: "editTemplateView", 
               className: "panel panel-default", 
               style: {display:'block'}}, 
               React.DOM.div({className: "panel-heading", style: {height:50}}, 
                 the_name, 
              React.DOM.a({href: "javascript:", 
                className: "btn btn-default btn-xs", 
                style: {float:'right',marginLeft:5,marginTop:5}}, 
                React.DOM.i({className: "fa fa-trash"})
              ), 
              toggleButton
            ), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.div({className: "editTemplateTitle"}, 
                React.DOM.span(null, "Subject: "), 
                subjectPlace
              ), 
             React.DOM.br(null), 
             React.DOM.div({className: "templateDetails"}, 
               React.DOM.h6({style: {marginBottom:'0'}, className: "text-muted"}, 
                 "Created by Mark on Jul. 21, 2014"
               ), 
               React.DOM.h6({style: {marginTop:'0'}, className: "text-muted"}, 
                 "last updated 7 days ago"
               )
             ), 
            React.DOM.br(null), 
            React.DOM.div({className: "panel panel-default"}, 
              React.DOM.div({className: "panel-body summer template-body"}
              )
            )
        )
      )
    )
    );
  }
});

},{}],20:[function(require,module,exports){
/** @jsx React.DOM */

var Templates = require('./templates.js.min.js');
var Schedules = require('./schedule.js.min.js');
var Campaigns = require('./campaigns.js.min.js');
var SentMail = require('./sent_mail.js.min.js');
var FollowupFeed = require('./followup_feed.js.min.js');
var CampaignDetail = require('./campaign_detail.js.min.js');
var CreateCampaignModal = require('./create_campaign.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      selectedScreen: 'Campaigns',
      selectedCampaign:'',
      prospectLists: [],
      campaigns: []
    }
  },

  componentDidMount: function() {
    thiss = this;
     company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
     qry = 'where={"company":'+company+'}&include=prospect_list,followups,followups.template&order=-createdAt'
     $.ajax({
       url:'https://api.parse.com/1/classes/Campaign',
      headers: appConfig.headers,
      data: qry,
      success: function(res) {
        console.log(res.results)
        thiss.setState({campaigns: res.results})
        // TODO  - Add Get Prospect List Count
        // Follow Up Feed Feature
        // - Shows what stages different prospects are at and whether you 
        //   should send a follow up to them.
        // How to get the stage of Prospect List
        // - Where to persist last email sent
        // - What is stored at the campaign level
        // - What is stored at the prospect level
        // - Timeline (General 7 x 7 cadences)
        //   - 
        // - Rules (Sankey / Flow View)
        //   - Shows all or only the ones that havent responded 
        //   - Show all the ones hthat haven't replied
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
     });
    $.ajax({
      url: 'https://api.parse.com/1/classes/ProspectList',
      headers: appConfig.headers,
      // TODO
      // - Company Specific
      success: function(res) {
        thiss.setState({prospectLists: res.results})
      },
      error: function(err) {

      }
    })


  },
  
  toggleScreen: function(screen) {
    this.setState({selectedScreen : screen})
  },

  changeSelectedCampaign: function(screen, selectedCampaign) {
    console.log(selectedCampaign)
    this.setState({
      selectedCampaign : selectedCampaign,
      selectedScreen: screen,
    })
  },

  render: function() {
    thiss = this
    console.log(this.state.selectedCampaign)
    console.log(this.state.selectedScreen)
    console.log(this.state.campaigns)
    switch (this.state.selectedScreen){
      case 'Campaigns':
        CurrentScreen = Campaigns({campaigns: thiss.state.campaigns, 
                            changeSelectedCampaign: thiss.changeSelectedCampaign, 
                            toggleScreen: thiss.toggleScreen})
        break;
      case 'CampaignDetail':
        CurrentScreen = CampaignDetail({
                        selectedCampaign: thiss.state.selectedCampaign, 
                      selectedCampaignObjectId: thiss.state.selectedCampaginObjectId, 
                        toggleScreen: thiss.toggleScreen})
        break;
      case 'Templates':
        CurrentScreen = Templates(null)
        break;
      case 'Overview':
        CurrentScreen = Campaigns({campaigns: thiss.state.campaigns, 
                            changeSelectedCampaign: thiss.changeSelectedCampaign, 
                            toggleScreen: thiss.toggleScreen})
        break;
      case 'Sent Mail':
        CurrentScreen = SentMail(null)
        break;
      case 'Followup Feed':
        CurrentScreen = FollowupFeed(null)
        break;
      case 'Schedules':
        CurrentScreen = Schedules(null)
        break;
    }

    return (
      React.DOM.div({className: "", style: {height:'550px'}}, 
        React.DOM.div({className: "container", style: {padding:'0',width:'100%',height:'100%'}}, 
          SideMenu({
                createCampaign: this.createCampaign, 
                prospectLists: this.state.prospectLists, 
                toggleScreen: this.toggleScreen}), 
              React.DOM.div({className: "col-md-10", 
                   style: {padding:'0',height:'100%'}}, 
            CurrentScreen
          )
        )
      )
    );
  },

  persistCampaign: function(newCampaign) {
    Campaign = {}
    Campaign.name = newCampaign.name
    Campaign.company = JSON.parse(localStorage.currentUser).company
    thiss = this;

    $.ajax({
      url:'https://api.parse.com/1/classes/Campaign',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(Campaign),
      success: function(res) {
        the_campaign = _.find(thiss.state.campaigns, function(campaign){
          first = campaign.name == newCampaign.name 
          second = campaign.prospect_list == newCampaign.prospect_list
          return first && second
        })
        console.log(res)
        console.log(res.objectId)

        the_campaign.objectId = res.objectId
        campaigns = _.filter(thiss.state.campaigns, function(campaign){
          first = campaign.name == newCampaign.name 
          second = campaign.prospect_list == newCampaign.prospect_list
          return !(first && second)
        })
        campaigns.push(the_campaign)
        console.log(campaigns)

        thiss.setState({campaigns:  campaigns})

        $.ajax({
          url:'https://api.parse.com/1/classes/Campaign/'+res.objectId,
          type:'PUT',
          data: JSON.stringify({prospect_list:{
            '__type':'Pointer',
            'className':'ProspectList',
            'objectId':newCampaign.prospect_list.objectId,
          }}),
          headers:appConfig.headers,
          success: function(res){
          },
          error: function() {

          }
        })
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  createCampaign: function(newCampaign) {
    campaigns = this.state.campaigns
    campaigns.push(newCampaign)
    this.setState({campaigns: campaigns})
    console.log(newCampaign)

    $('.modal').click()
    $('.modal-backdrop').click()

    this.persistCampaign(newCampaign)
  }
});

var SideMenu = React.createClass({displayName: 'SideMenu',
  toggleScreen: function(e) {
    this.props.toggleScreen($(e.target).text().trim())
  },

  /*
    <button type="button" className="sharp btn btn-default" onClick={this.toggleScreen}>
      <i className="fa fa-file-text" /> &nbsp; Templates
    </button>
    <button type="button" className="sharp btn btn-default" onClick={this.toggleScreen}>
      <i className="fa fa-clock-o" /> &nbsp; Schedules
    </button>
  */
  createCampaignModal: function() {

  },

  render: function() {
    return (
      React.DOM.div({className: "col-md-2", 
        style: {padding:'0',height:'100%', backgroundColor:'rgb(90, 107, 119)',borderBottomLeftRadius:'3px'}}, 
        React.DOM.div({className: "btn-group-vertical", style: {width:'100%'}}, 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.span({style: {marginLeft:'27px'}}, "Overview")
          ), 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-newspaper-o"}), "  ",  
            React.DOM.span({style: {marginLeft:'4px'}}, "Followup Feed")
          ), 
          React.DOM.button({type: "button", style: {display:'none'}, 
                  className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-code-fork"}), "  ",  
            React.DOM.span({style: {marginLeft:'4px'}}, "Rules")
          ), 
          React.DOM.button({type: "button", style: {display:'none'}, 
                  className: "sharp btn btn-default", onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-pie-chart"}), "   Analytics"
          ), 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-paper-plane"}), "   Sent Mail"
          )
        ), 

        React.DOM.div({className: "", style: {width:'100%',textAlign:'center',marginTop:100}}, 
          React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
                'data-toggle': "modal", 'data-target': ".bs-createCampaign-modal-sm", 
                style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
            React.DOM.i({className: "fa fa-plus-circle"}), "  New Campaign"
          )
        ), 
        CreateCampaignModal({prospectLists: this.props.prospectLists, 
                             createCampaign: this.createCampaign})
      )
    );
  },

  createCampaign: function(newCampaign) {
    this.props.createCampaign(newCampaign)
  }
});

},{"./campaign_detail.js.min.js":3,"./campaigns.js.min.js":4,"./create_campaign.js.min.js":8,"./followup_feed.js.min.js":21,"./schedule.js.min.js":36,"./sent_mail.js.min.js":38,"./templates.js.min.js":46}],21:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // FollowupFeed
  getInitialState: function() {
    return {
      scheduledFollowups: []
    }
  },


  render: function() {
    scheduledFollowups = []
    for(i=0;i< this.state.scheduledFollowups.length; i++){ 
      scheduledFollowups.push(ScheduledFollowupRow(null))
    }

    return (
      React.DOM.div({style: {overflow:'auto', height:550}}, 
        React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Prospect Name"), 
            React.DOM.th(null, "Prospect Email"), 
            React.DOM.th({style: {textAlign:'center'}}, "Status")
          ), 
          React.DOM.tbody(null, 
            scheduledFollowups
          )
        )
      )
    );
  }
});

var ScheduledFollowupRow = React.createClass({displayName: 'ScheduledFollowupRow',
  render: function() {
    return (
      React.DOM.tr(null

      )
    );
  }
})

},{}],22:[function(require,module,exports){
/** @jsx React.DOM */
var SendEmailModal = require('./send_email_modal.js.min.js')
var TimelineDayElement = require('./timeline_day_element.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  // FollowupTimeline
  getInitialState: function() {
    initialFollowups = this.props.initialFollowups
    initialFollowups = (initialFollowups) ? initialFollowups : []

    return {
      followups: initialFollowups,
      loading: false,
      currentTemplate:''
    }
  },

  componentDidMount: function() {
    thiss = this;
    $('.day').tooltip({
      placement: 'right',
      title:'+ Add a follow-up'
    })
    // Followups that belong to campaign
     company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
     currentCampaign = {
       '__type': 'Pointer',
       'className':'Campaign',
       'objectId':this.props.currentCampaign.objectId
     }
     currentCampaign = JSON.stringify(currentCampaign)
     //qry = 'where={"company":'+company+',"campaign":'+currentCampaign+'}&include=template'
     qry = 'where={"campaign":'+currentCampaign+'}&include=template'
     //qry = 'where={"campaign":'+currentCampaign+'}'
     $.ajax({
       url:'https://api.parse.com/1/classes/Followup',
       type:'GET',
       headers: appConfig.headers,
       data: qry,
       success: function(res) {
         console.log('followup timeline')
         console.log(res.results)
       },
       error: function(err) {
         console.log('error')
         console.log(err)
       }
     })
  },
  
  render: function() {
    batches =  _.countBy(this.props.prospects, 
                      function(prospect) { return prospect.last_contacted })

    timelineElements = []
    followups = (this.state.followups) ? this.state.followups : []
    console.log(followups)
    for(i=0;i< 31;i++){
      batchCount = (batches[i]) ? batches[i] : 0
      
      addTemplateMode = false; 
      currentTemplate = false;
      elementType = false
      for(ii=0;ii< followups.length; ii++){
        // TODO - Replace with underscore method
        //console.log('FOLLOWUPS ERROR')
        //console.log(followups)
        elementType = i == followups[ii].day
        if(elementType) {
          addTemplateMode = (followups[ii].addTemplateMode) ? true : false
          currentTemplate = followups[ii].template
          break
        }
      }

      timelineElements.push(TimelineDayElement({
                              dayCount: i, 
                              templates: this.props.templates, 
                              currentTemplate: currentTemplate, 
                              batchCount: batchCount, 
                              addTemplateMode: addTemplateMode, 
                              elementType: !elementType, 
                              addFollowup: this.addFollowup, 
                              editFollowup: this.editFollowup, 
                              saveFollowup: this.saveFollowup, 
                              removeFollowup: this.removeFollowup, 
                              setCurrentTemplate: this.setCurrentTemplate}))
    }
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "timeline", 
             style: {height:'100%',backgroundColor:'rgb(90, 107, 119)',
                     width:5,marginTop:-35}}, 
             timelineElements
        ), 
        SendEmailModal({prospects: this.props.prospects, 
                        currentTemplate: this.state.currentTemplate})
      )
    );
  },

  createFollowup: function() {
    //
  },         

  addFollowup: function(day) {
    //console.log('called template edit menu')
    followups = this.state.followups
    followups.push({addTemplateMode: true, day: day})
    this.setState({
      followups: followups
    })
  },

  editFollowup: function(day) {
    // find template set editmode is false
    for(i=0;i< this.state.followups.length; i++){
      if(this.state.followups[i].day == day){
        break
      }
    }

    followups = this.state.followups
    followups[i].addTemplateMode = true
    this.setState({followups: followups})
  },

  saveFollowup: function(day, chosenTemplate) {
    new_followups = this.state.followups
    new_followups[day].addTemplateMode = false
    new_followups[day].template = chosenTemplate

    this.setState({followups: new_followups})

    if(new_followups[day].objectId){
      url = "/"+new_followups[i].objectId; type="PUT"

      data = {template:{
        __type:'Pointer',
        className:'Template',
        objectId: chosenTemplate.objectId
      }}
    } else {
      url = ""; type="POST";

      data = {
        day: day,
        campaign: {
          __type: 'Pointer',
          className:'Campaign',
          objectId: this.props.currentCampaign.objectId
        },
        template: {
          __type: 'Pointer',
          className:'Template',
          objectId:chosenTemplate.objectId,
        }
      }
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/Followup',
      type:type,
      data:JSON.stringify(data),
      headers:appConfig.headers,
      success: function(res) {
        
        new_followups[day].objectId = res.objectId
        thiss.setState({followups: new_followups})

        console.log(res)
        $.ajax({
          url:'https://api.parse.com/1/classes/Campaign/'+thiss.props.currentCampaign.objectId,
          type:'PUT',
          data:JSON.stringify({followups: {
            __op: 'AddUnique',
            objects:[{
              __type:'Pointer', 
              className:'Followup',
              objectId:res.objectId
            }]
          }}),
          headers:appConfig.headers,
          success: function() {
          },
          error: function() {
          }
        })
      },
      error: function() {

      },
    })
  },

  removeFollowup: function(day) {
    followups = []
    for(i=0;i< this.state.followups.length;i++)
      if(this.state.followups[i].day != day)
        followups.push(this.state.followups[i])
      
    for(i=0;i< this.state.followups.length;i++)
      if(this.state.followups[i].day == day)
        break
    
    this.setState({followups: followups}) 
    id = this.state.followups[i]

    thiss = this;
    if(id) {
      id = id.objectId
      $.ajax({
        url:'https://api.parse.com/1/classes/Followup/'+id,
        headers:appConfig.headers,
        type:'DELETE',
        success: function(res) {
          console.log(res)
        }
      })

     console.log('REMOVE ARRAY')
      $.ajax({
        url:'https://api.parse.com/1/classes/Campaign/'+thiss.props.currentCampaign.objectId,
        headers:appConfig.headers,
        type:'PUT',
        data: JSON.stringify({
          followups: {
            __op : 'Remove',
            objects: [{
              __type: 'Pointer',
              className: 'Followup',
              objectId: id
            }]
          }
        }),
        success: function(res){
          console.log(res)
        },
        error: function() {
        }
      })
    }
  },

  setCurrentTemplate: function(template) {
    this.setState({currentTemplate: template })
  }
});



},{"./send_email_modal.js.min.js":37,"./timeline_day_element.js.min.js":48}],23:[function(require,module,exports){
/** @jsx React.DOM */

data = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // free trial
  open: function() {
    console.log('open')
    handler.open({
      name: 'Customero',
      description: 'Get 900 free email credits!',
      amount: 0,
      panelLabel: "Start Your Free Trial!",
      open: function() {
        console.log($('.close'))
        $('.close').hide()
      },
      closed: function() {
        console.log("closed")
      }
    });
  },

  componentDidMount: function() {
    $('body').css({overflow:'hidden'})


    //console.log(this.getDOMNode())
    /*
    $(this.getDOMNode()).append(' <form action="" method="POST"> <script src="https://checkout.stripe.com/checkout.js" class="stripe-button" data-key="pk_test_4T5Pftl4ho0EgFVo1G7OKRda" data-amount="2000" data-name="Demo Site" data-description="2 widgets ($20.00)" data-image=""> </script> </form>')

  setTimeout(function() {
    console.log($('.stripe-button-el').html())
    $('.stripe-button-el').click()

  }, 400)
*/

  },

  render: function() { 
  data = data()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div(null, 
      React.DOM.div({id: "signup"}, " "), 

      React.DOM.div(null, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Get 900 free email credits. 100% refund guarantee.  We will only start charging your card after 1 month.")

      ), 

      React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
        React.DOM.div({className: "", style: {marginLeft:34}}, 
        imgs_1, 
        imgs_2
        )
      )
      )
    )
  }
});

},{"../lib/data.min.js":52}],24:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Landing Page
  login: function() {
    console.log('login')
    email = $('#email').val()
    password = $('#password').val()
    p = {"X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
         "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"}
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: p,
      type:'GET',
      data: {
        'username':email,
        'password':password
      },
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  render: function() {
    $('body').css({overflow:'auto'})

    return (
      React.DOM.div({className: ""}, 
        React.DOM.div({className: "background-image"}), 
        React.DOM.nav({className: "thenavbar navbar navbar-default navbar-fixed-top", role: "navigation"}, 
          React.DOM.div({className: "container-fluid"}, 
            React.DOM.a({className: "the-title tk-foco brand navbar-brand", style: {fontWeight:'100'}, 
                href: "#"}, 
              "Customero", 
              React.DOM.span({style: {fontSize:'22px',marginLeft:'30px'}}, "Supercharge your sales! ")
            )
          ), 
          React.DOM.a({href: "#login", className: "btn-lg btn login-btn"}, "Log In")
        ), 
        React.DOM.div({className: "col-md-12", style: {marginTop:'100px',paddingTop:'100px'}}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'bold',textAlign:'center',fontSize:'56px'}}, " Generate High Quality Prospect Lists "), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',fontSize:'56px'}}, " Accelerate Sales "), 
          React.DOM.a({href: "#signup", className: "btn-lg btn-success btn start-trial"}, "Start Your Free Trial Today"), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " ")
          )
        ), 
        React.DOM.div({className: "gradient"}, " ")
      )
    );
  }
});

},{}],25:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Landing Page
  login: function() {
    console.log('login')
    email = $('#email').val()
    password = $('#password').val()
    p = {"X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
         "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"}
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: p,
      type:'GET',
      data: {
        'username':email,
        'password':password
      },
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  render: function() {
    $('body').css({overflow:'auto'})

    return (
      React.DOM.div({className: ""}, 
        React.DOM.div({className: "background-image"}), 
        React.DOM.nav({className: "thenavbar navbar navbar-default navbar-fixed-top", role: "navigation"}, 
          React.DOM.div({className: "container-fluid"}, 
            React.DOM.img({className: "network-logo", src: "build/img/network.png"}), 
            React.DOM.a({className: "the-title tk-foco brand navbar-brand", style: {fontWeight:'100'}, 
                href: "#"}, 
              "Customero", 
              React.DOM.span({style: {fontSize:'20px',marginLeft:'30px',fontFamily:'Open Sans'}}, "Social Prospecting On Steroids ")
            )
          ), 
          React.DOM.a({href: "#login", className: "btn-lg btn login-btn", style: {fontFamily:'proxima-nova'}}, "LOG IN")
        ), 

        React.DOM.div({className: "col-md-7 col-sm-7", style: {marginTop:'100px',paddingTop:'80px'}}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',color:'white',textAlign:'center',fontSize:'38px',fontFamily:'Open Sans',fontSize:'40px'}}, " Generate High Quality Prospect Lists "), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',color:'white',fontSize:'46px',fontFamily:'Open Sans', fontStyle:'italic'}}, " Accelerate Sales "), 
          React.DOM.a({href: "#signup", className: "btn-lg btn-success btn start-trial"}, "Start Your Free Trial Today"), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " ")
          )
        ), 
        React.DOM.div({className: "gradient"}, " "), 

        React.DOM.div({className: "col-md-5 col-sm-5", id: "network-picture", 
             style: {height:500,backgroundImage:"url('build/img/network_icon_1.png')"}}
        )
      )
    );
  }
});

},{}],26:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // LoadingSpinner
  render: function() {
    return (
    React.DOM.div({className: "spinner", style: {marginTop:'180px'}}, 
      React.DOM.div({className: "spinner-container container1"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container2"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container3"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      )
    )
    )
  }
});

},{}],27:[function(require,module,exports){
/** @jsx React.DOM */

theData = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // SignUp
  componentDidMount: function() {
    $('body').css({overflow:'hidden'})
  },

  login: function() {
    console.log('login')
    email = $('#email').val()
    password = $('#password').val()
    p = {"X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
         "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"}
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: p,
      type:'GET',
      data: {
        'username':email,
        'password':password
      },
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  render: function() { 
    data = theData()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div(null, 
      React.DOM.div({id: "signup"}, " "), 
      React.DOM.div(null, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Generate high quality prospect lists. Accelerate Sales."), 
          React.DOM.div({className: "panel panel-default login-info", style: {display:'block'}}, 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            )
          )
      ), 

        React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
          React.DOM.div({className: "", style: {marginLeft:34, display:'none'}}, 
          imgs_1, 
          imgs_2
          )
        )
      )
    )
  }
});

},{"../lib/data.min.js":52}],28:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //Messenger
  render: function() {
    return (
        React.DOM.div({className: "alert alert-success", 
             'data-alert': "alert", 
             style: {position:'absolute',
                     top: 31, 
                     right:30, 
                     display:'none',
                     width:200}}, 
                     React.DOM.a({className: "close", 
                       href: "javascript:", 
                       onClick: this.hideAlert}, "×"), 
            "Test"
        )
    );
  }
});

},{}],29:[function(require,module,exports){
/** @jsx React.DOM */

var LoadingSpinner = require('./loading_spinner.js.min.js')

var Job = React.createClass({displayName: 'Job',
  startJob: function() {
    // Add Linkedin Locations
    // Email When Completed
    // Have Report For Number of Profiles Found / number of emails found per mining job
    
    miningJob = this.props.miningJob
    miningJob.status = "Running"
    miningJob.last_ran = Math.round(+new Date()/1000)

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      // status should be waiting
      data : JSON.stringify({'status':'Running', 'last_ran':Math.round(+new Date()/1000)+"" }),
      success: function(res) {
        console.log(res)
        // make request to heroku api
        $.ajax({
          //url: 'https://0.0.0.0:5000/mining_job' ,
          url: 'http://agile-plains-2430.herokuapp.com/mining_job' ,
          //type:'POST',
          crossDomain: true,
          data:{'locale':miningJob.locale, 
                'current_title':miningJob.prospect_title,
                'current_user_id':JSON.parse(localStorage.currentUser).objectId,
                'company_id':JSON.parse(localStorage.currentUser).company.objectId,
                'mining_job_id':miningJob.objectId},
          success: function(res) {
            console.log(res)
          },
          error: function(err) {
            console.log(err)
          }
        })
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.setState({miningJob: miningJob})
  },

  deleteJob: function() {
    //console.log(this.state.miningJob)
    this.props.deleteJob(this.state.miningJob)
      /*
    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+this.state.miningJob.objectId,
      type:'DELETE',
      headers: appConfig.parseHeaders,
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
      */
  },

  cancelJob: function() {
    miningJob = this.state.miningJob
    miningJob.status = ""

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      data : JSON.stringify({'status':''}),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
    this.setState({miningJob: miningJob})
  },

  render: function(){
    miningJob = this.props.miningJob
    button = (miningJob.status == "") ? React.DOM.a({href: "javascript:", className: "btn btn-xs btn-success", onClick: this.startJob}, " ", React.DOM.i({className: "fa fa-check"}), " Run ") : React.DOM.a({href: "javascript:", className: "btn btn-xs btn-danger", onClick: this.cancelJob}, " ", React.DOM.i({className: "fa fa-times"}), " Cancel ")

    disabled = ""
    disabled_trash = ""
    /*
    disabled = (miningJob.status == "") ? "btn btn-xs btn-success" : "btn btn-xs btn-success disabled"
    disabled_trash = (miningJob.status == "") ? "btn btn-xs btn-default" :  "btn btn-xs btn-default disabled"
    button = <a href="javascript:" className={disabled} onClick={this.startJob}> <i className="fa fa-check" />&nbsp;Run </a> 
    */

    //console.log(miningJob)
    return (
      React.DOM.tr(null, 
        React.DOM.td(null, React.DOM.h6(null, miningJob.prospect_title)), 
        React.DOM.td(null, React.DOM.h6(null, miningJob.locale)), 
        React.DOM.td(null, React.DOM.h6(null, (miningJob.last_ran == "" ) ? "----" : moment.unix(miningJob.last_ran).fromNow())), 
        React.DOM.td(null, 
          React.DOM.span({className: "badge"}, 
            (miningJob.results == "") ? 0 : miningJob.results
          ), " ",  
          React.DOM.h6({style: {display:'inline-block'}}, "profiles found")
        ), 
        React.DOM.td({style: {paddingTop:'12px'}}, 
          React.DOM.span({className: (miningJob.status == "" ) ? "label label-primary" : "label label-success"}, 
            (miningJob.status == "") ? "Ready" : miningJob.status
          )
        ), 
        React.DOM.td({style: {paddingTop:'13px',width:'105px'}}, 
          button, 
          " ", 
          React.DOM.a({href: "javascript:", className: disabled_trash, 
                  onClick: this.deleteJob}, 
            React.DOM.i({className: "fa fa-trash-o"})
          )
        )
      )
    );
  }
});


module.exports = React.createClass({displayName: 'exports',
  // Mining Jobs
  //{(prospects.length == 0 && this.state.loading == false) ? <EmptyCompanyProspectsPanel /> : ""}
  getInitialState: function() {
    return { 
      miningJobs : [],
      loading    : true
    }
  },

  deleteJob: function(job) {
    //console.log(job.objectId)
    var filtered = _.filter(this.state.miningJobs, function(item) {
       console.log(item.objectId != job.objectId)
       return item.objectId != job.objectId
    });
    //console.log(filtered)
    this.setState({miningJobs: filtered})
  },

  render: function () {
    //console.log('render')
    miningJobs = []
    for(i=0;i<this.state.miningJobs.length;i++){
      miningJob = this.state.miningJobs[i]
      miningJobs.push(
        Job({deleteJob: this.deleteJob, miningJob: miningJob})
      )
    }

    return (
      React.DOM.div(null, 
      React.DOM.div({className: "mining-job-toolbar container", style: {width:'100%'}}, 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Prospects By Title and Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Hiring For Roles"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Who Just Raised Funding"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies By Industy And Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Press Coverage"
        )
    ), 
      React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Job Title"), 
            React.DOM.th(null, "City"), 
            React.DOM.th(null, "Last Ran"), 
            React.DOM.th(null, "Results"), 
            React.DOM.th(null, "Status"), 
            React.DOM.th(null, " ")
          ), 
          React.DOM.tbody(null, 
            miningJobs
          )
        ), 
          (this.state.loading) ? LoadingSpinner(null) : "", 
        createJobModal({createJob: this.createJob})
      )
      )
    );
  },
  
  runMiningJob: function() {

  },

  createJob: function(data) {
    miningJobs = this.state.miningJobs
    miningJobs.push(data)
    this.setState({ miningJobs: miningJobs })

    $('#miningJobModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  componentDidMount: function() {
    console.log('this did mount')
    thiss = this;
    qry = 'where={"company":'+company+'}&count=1&order=-createdAt'
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'GET',
      headers: appConfig.parseHeaders,
      data: qry,
      success: function(res) {
        thiss.setState({miningJobs : res.results})
        thiss.setState({loading    : false})
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  }

});

var createJobModal = React.createClass({displayName: 'createJobModal',
  createMiningJob: function() {
    console.log('mining job')
    console.log($('#prospectTitle').val())
    console.log($('#locale').val())

    data =  {
      'prospect_title': $('#prospectTitle').val(),
      'locale'        : $('#locale').val(),
      'last_ran'      : '',
      'results'       : '',
      'status'        : '',   //Waiting , Running
    }
    //  update local jobs state
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.props.createJob(data)
    
    //$('button.close').click()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "miningJobModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-bolt"}), "  Create Mining Job")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "prospectTitle", type: "text", placeholder: "Enter prospect title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.input({id: "locale", type: "text", placeholder: "Enter City Area...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createMiningJob, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Start Mining!")
                  )

                )
              )
            )
          )
    );
  }
});

var EmptyMiningJob = React.createClass({displayName: 'EmptyMiningJob',
  render: function() {
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-success", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
            "Search for companies!")
        )
      )
    )
    );
  }
});

},{"./loading_spinner.js.min.js":26}],30:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // MiningJobCalendar
  getInitialState: function() {
    return {
      reports : []
    }
  },

  getSignalReport: function() {
    thissss = this;
    qry = 'where='+JSON.stringify({profile:{
      __type:'Pointer',
      className:'ProspectProfile',
      objectId:this.props.currentProfile.objectId
    }})

    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport?order=-createdAt',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        thissss.setState({reports: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    this.getSignalReport()
  },

  componentDidUpdate: function() {
    this.getSignalReport()
  },

  setCurrentReport: function(newReport) {
    console.log('CURRENT REPORT')
    console.log(newReport)
    this.props.setCurrentReport(newReport)
  },

  render: function() {
    reports = []
    for(i=0;i< this.state.reports.length; i++)
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    setCurrentView: this.setCurrentView, 
                                    report: this.state.reports[i]}))

    return (
      React.DOM.div({className: "container", style: {height:400, overflow:'auto',paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           overflow:'auto',height:356}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                    React.DOM.i({className: "fa fa-clock-o"}), " " + ' ' +
                    "Scheduled"
                ), 
                React.DOM.th({style: {textAlign:'center'}}, "Prospects"), 
                React.DOM.th({style: {width:150,textAlign:'center'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  rowClick: function() {
    this.props.setCurrentReport(this.props.report)
  },

  prospectAllSignalReportProspects: function(e) {
    e.stopPropagation()
    // Update UI
    console.log(this.props.report.objectId)
    thiss = this
    $.ajax({
      //url:'http://nameless-retreat-3525.herokuapp.com/prospect_signal_report',
      url:'http://127.0.0.1:5000/prospect_signal_report',
      data: {signal_report_id: thiss.props.report.objectId },
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err) }
    })
  },

  render: function() {
    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td(null), 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          React.DOM.i({className: "fa fa-cloud-download", style: {color:'#555'}})
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  People found."
          )
        ), 
        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", 
            onClick: this.prospectAllSignalReportProspects, 
             style: {fontWeight:'bold',marginTop:5}, 
             className: "btn btn-xs btn-success"}, 
            "Prospect All"
          )
        )
      )
    )
  }
});

},{}],31:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Panel Footing
  paginatePrevious: function() {
    thiss = this;

    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospects?skip='+(thiss.props.currentPage-2)*thiss.props.prospectsPerPage,
      type:'GET',
      headers: parse_headers,
      data: 'where={"company":'+company+',"archived":true}&count=1',
      success: function(res){
        //thiss.setState({prospects: res.results})
        //thiss.setState({currentPage: this.props.currentPage - 1})
        thiss.props.paginate(res.results, thiss.props.currentPage - 1)
      },
      error: function(res){
        console.log(res)
      }
    });
  },


  paginate: function(direction) {
    prospectsPerPage = this.props.prospectsPerPage
    if(direction=='previous')
      skip = (this.props.currentPage - 2)*prospectsPerPage
    else if(direction=="forward")
      skip = this.props.currentPage*prospectsPerPage

    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect?skip='+skip,
      type:'GET',
      headers: parse_headers,
      data: 'where={"company":'+company+'}&count=1',
      success: function(res){
        //thiss.setState({prospects: res.results})
        //thiss.setState({currentPage: this.props.currentPage + 1})
        this.props.paginate(res.results, this.props.currentPage + 1)
      },
      error: function(res){
        console.log(res)
      }
    });
  },

  paginateForward: function() {
    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospects?skip='+thiss.props.currentPage*thiss.props.prospectsPerPage,
      type:'GET',
      headers: parse_headers,
      data: 'where={"company":'+company+',"archived":true}&count=1',
      success: function(res){
        //thiss.setState({prospects: res.results})
        //thiss.setState({currentPage: thiss.props.currentPage + 1})
        console.log("success")
        thiss.props.paginate(res.results, thiss.props.currentPage + 1)
      },
      error: function(res){
        console.log(res)
      }
    });
  },
  componentDidMount: function() {
    paginateForward = this.paginateForward
    paginatePrevious = this.paginatePrevious

    Mousetrap.bind('l', function() { 
      console.log('new forward')
      paginateForward()
    });

    Mousetrap.bind('h', function() { 
      console.log('new back')
      paginatePrevious()
    });
  },

  render: function() {
    // Should be handled by Panle Footing


    previous = (this.props.currentPage - 1) ? '' : 'disabled'
    forward = (this.props.currentPage == this.props.pages) ? 'disabled' : ''

    lowerLimit = (this.props.currentPage-1)*this.props.prospectsPerPage
    upperLimit = this.props.currentPage*this.props.prospectsPerPage

    lowerLimit = (lowerLimit) ? lowerLimit : 1
    upperLimit = (upperLimit > this.props.count) ? this.props.count : upperLimit

    return (
      React.DOM.div({className: "panel-footing", 
           id: "navbar", 
           style: {height:'35px',padding:'0px', paddingTop:'7px'}}, 
          React.DOM.span({style: {float:'right',marginRight:'20px'}}, 
            React.DOM.a({href: "javascript:", 
               style: {marginRight:'5px'}, 
               onClick: this.paginatePrevious, 
               className: "blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-fast-backward"})
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginatePrevious, 
             className: "paginate-back-btn blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-chevron-left"})
          ), 
          React.DOM.span({style: {marginLeft:5, marginRight:5,display:'inline-block',width:115, textAlign:'center'}}, 
            lowerLimit+' - '+upperLimit+' of '+this.props.count
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginateForward, 
             className: "paginate-forward-btn blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-chevron-right"})
          ), 
          React.DOM.a({href: "javascript:", 
             style: {marginLeft:'5px'}, 
             onClick: this.paginateForward, 
             className: "blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-fast-forward"}))
          )
        )
    );
  }
});

},{}],32:[function(require,module,exports){
/** @jsx React.DOM */


module.exports = React.createClass({displayName: 'exports',
  // SignalCard
  prospectPerson: function() {
    // Add To Signal List
    // Add Company
    // Add Prospect
    person = this.props.person
    personId = person.objectId
    company = this.props.person.company
    companyId = company.objectId
    person.signalId = person.signalId
    company.signalId = company.objectId
    p = person; c = company;
    delete p.objectId; delete c.objectId;
    delete p.className; delete c.className;
    delete p.__type; delete c.__type;
    delete p.createdAt; delete c.createdAt;
    delete p.updatedAt; delete c.updatedAt;
    p.companySignal = p.company
    delete p.company

    p.linkedin_url = p.url
    p.company = JSON.parse(localStorage.currentUser).company
    p.archived = true
    p.loading = true
    p.city = p.title.split('-')[0]
    p.pos = p.title.split('-').slice(-1)[0].split(' at ')[0]
    p.company_name = p.title.split('-').slice(-1)[0].split(' at ').slice(-1)[0] 
    name = p.link_text.split('|')[0]
    name = name.split('-')[0]
    p.name = name
    p.websiteUrl = company.websiteUrl
    // Automatically Add To The Signal List It Belongs To
    
    console.log(this.props.profile)
    p.lists = [{'__type':'Pointer','className':'ProspectList','objectId':this.props.profile.prospect_list.objectId}] 

    $.ajax({
      url:'https://api.parse.com/1/classes/Prospects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(p),
      success: function(res) {
        console.log(res)
         $.ajax({
          url:'https://api.parse.com/1/classes/PeopleSignal/'+personId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function() { }
         })
      },
      error: function(err) { }
    })

    //Create Company Prospect with Pointer to CompanySignal
    $.ajax({
      url:'https://api.parse.com/1/classes/CompanyProspects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(c),
      success: function(res) {
        //Update Company Signal With Pointer to Company Prospect and date prospected
        console.log(res)
         $.ajax({
           url:'https://api.parse.com/1/classes/CompanySignal/'+companyId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function(err) { }
         })
      },
      error: function(err) { }
    })
  },

  render: function() {
    person = this.props.person
    signal = (person.signals) ? person.signals[0] : {}
    
    return (
      React.DOM.div({className: "panel panel-default signal-card"}, 
        React.DOM.div({className: "panel-body", style: {paddingLeft:25, paddingRight:25}}, 
          React.DOM.h4(null, 
            person.title
          ), 
          React.DOM.h6({style: {display:'inline-block',width:'100%'}}, 
            React.DOM.span({style: { float:'left',maxWidth: '60%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              person.link_text)
          ), 
        React.DOM.div({id: "signal-stuff", 
            style: (_.isEqual(signal, {})) ? {display:'none'} : {display:'block'}}, 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-building"}), 
            "  ", signal.company), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-map-marker"}), 
            "  ", signal.location), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-suitcase"}), 
            " ", signal.job_title, " ")
        ), 

          React.DOM.a({href: "javascript:", className: "btn btn-success", 
            onClick: this.prospectPerson, 
            style: {float:'right',marginTop:15, fontWeight:'bold',width:'100%'}}, 
            "Prospect This Person")
        )
      )
    );
  }
});

},{}],33:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    $('body').css({overflow:'hidden'})
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "background-image"}), 
        React.DOM.nav({className: "thenavbar navbar navbar-default navbar-fixed-top", role: "navigation"}, 
          React.DOM.div({className: "container-fluid"}, 
            React.DOM.a({className: "the-title tk-foco brand navbar-brand", style: {fontWeight:'100'}, 
                href: "#"}, 
              "Customero", 
              React.DOM.span({style: {fontSize:'22px',marginLeft:'30px'}}, "Supercharge your sales! ")
            )
          )
        ), 
          PricingTables(null), 
        React.DOM.div({className: "gradient"}, " ")
      )
    )
    /*
              <a href="#signup" className="btn btn-success btn-lg" style={{display:'block',backgroundColor:'#1ca3fd',float:'right',marginTop:'13px' }}>Log In</a>
    */
  }
});

var PricingTables = React.createClass({displayName: 'PricingTables',
  render: function() {
    return (
      React.DOM.div(null, 
    React.DOM.div({className: "container", style: {marginTop:150}}, 
        React.DOM.div({className: "row flat"}, 
            React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
                React.DOM.ul({className: "signal-card plan plan2"}, 
                    React.DOM.li({className: "plan-name"}, " Startup "), 
                    React.DOM.li({className: "plan-price"}, 
                      React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$499 ", React.DOM.small(null, "/ month"))
                    ), 

                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 1000 Email Credits"), " "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 10 Team Members")), 
                  React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, 'Emails & Phone Numbers')), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Quick Start Package")), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Signals")), 
                  React.DOM.li({className: "", style: {paddingBottom:0}}, 
                    React.DOM.a({href: "#", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
                  )
             )
         ), 

         React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
            React.DOM.ul({className: "signal-card plan plan3 featured"}, 
                React.DOM.li({className: "plan-name"}, " Growth "), 
                React.DOM.li({className: "plan-price"}, 
                  React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$1299 ", React.DOM.small(null, "/ month"))
                ), 

            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 2500 Email Credits"), " "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 25 Team Members")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "All Startup Features ")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.i({className: "fa fa-plus"})), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Bulk Salesforce Integration")), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Mining Jobs")), 
            React.DOM.li({className: "", style: {paddingBottom:0}}, 
              React.DOM.a({href: "#", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
            )
         )
     ), 

     React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
        React.DOM.ul({className: "signal-card plan plan4"}, 
            React.DOM.li({className: "plan-name"}, " Premium "), 
            React.DOM.li({className: "plan-price"}, 
              React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$2999 ", React.DOM.small(null, "/ month"))
            ), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 7500 Email Credits"), " "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 50 Team Members")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "All Growth Features ")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.i({className: "fa fa-plus"})), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Dedicated Happiness Officer")), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Improved territory planning")), 
            React.DOM.li({className: "", style: {paddingBottom:0}}, 
              React.DOM.a({href: "#", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
            )
         )
       ), 
            React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
                React.DOM.ul({className: "signal-card plan plan1"}, 
                    React.DOM.li({className: "plan-name"}, " Enterprise "), 
                    React.DOM.li({className: ""}, " "), 
                    React.DOM.li(null, " ", React.DOM.strong(null), " "), 
                    React.DOM.li(null, " ", React.DOM.strong(null), " "), 
                    React.DOM.li({style: {fontSize:22}}, " ", React.DOM.strong(null, "Contact Us"), " "), 
                    React.DOM.li(null, " ", React.DOM.strong(null), " "), 
                    React.DOM.li(null, " ", React.DOM.strong(null), "  ")
                )
            )

)

)
      )
    );
  },
});

},{}],34:[function(require,module,exports){
/** @jsx React.DOM */

//TODO - abstract lists
var SideMenuProspects = require('./side_menu_user_prospects.js.min.js');

var UserProspect = require('./user_prospect.js.min.js');
var UserProspectHeader = require('./user_prospect_header.js.min.js');
var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var LoadingSpinner = require('./loading_spinner.js.min.js')
var PanelFooting = require('./panel_footing.js.min.js')
var Messenger = require('./messenger.js.min.js')
var DeleteListModal = require('./delete_list_modal.js.min.js')
var RenameListModal = require('./rename_list_modal.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {  prospects   : [],
              currentPage : 1,
              className: 'Prospect',
              listClassName: 'ProspectList',
              pages       : 1,
              currentList : 'All',
              currentListObjectId : '',
              loading: true,
              prospectsPerPage: 50,
              lists : [],
              masterCheckboxChecked: false,
              keyboardActiveProspect: 0, //first
              selectedProspects: [],
              totalCount  : "~", 
              count       : "~", }
  },

  createList: function(data) {
    lists = this.state.lists
    lists.push(data)
    this.setState({ lists: lists })
  },

  renameList: function(newListName) {
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      'Content-Type': 'application/json'
    }
    console.log(this.state.currentListObjectId)
    console.log(this.state.currentList)
    console.log(newListName)

    // Update Local State
    thiss = this;
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.name == thiss.state.currentList){
        item.name = newListName
        return item
      }
      return item
    });

    this.setState({lists : filtered})
    this.setState({currentList: newListName})

    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    // Persist / Ajax
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList/'+this.state.currentListObjectId,
      headers: parseHeaders,
      type:'PUT',
      data:JSON.stringify({'name':newListName}),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  deleteList: function() {
    // TODO 
    // Get All Members Of This List
    // Remove From List Array
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      'Content-Type': 'application/json'
    }
    
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.objectId == thiss.state.currentListObjectId)
        return false
      return true
    });

    this.setState({lists: filtered})
    this.setState({currentList: 'All'})
    this.changeList('All', '')

    // Remove
    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    // Persist / Ajax
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList/'+this.state.currentListObjectId,
      headers: parseHeaders,
      type:'DELETE',
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  changeList: function(newListName,objectId) {
    // add overlay loading
    //console.log(newListName)
    //console.log(objectId)

    localStorage.selectedProspects = JSON.stringify([])

    this.setState({currentList : newListName})
    this.setState({currentListObjectId : objectId})
    this.setState({prospects  : []    })
    this.setState({count      : '~'   })
    this.setState({pages      : 1     })
    this.setState({loading    : true  })
    this.setState({currentPage: 1})
    this.setState({keyboardActiveProspect: 0})

    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
    qry = 'where={"company":'+company+',"archived":true}&count=1&order=-createdAt'
    console.log(newListName)

    if(this.state.currentList != 'All' || typeof(objectId) != "undefined" && newListName != 'Archived'){
      currentList = JSON.stringify({
        'objectId'  : objectId, 
        '__type'    : 'Pointer', 
        'className' : 'ProspectList' 
      })

      company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
      qry = 'where={"company":'+company+'}&count=1'
      qry = 'where={"lists":'+currentList+'}&count=1&order=-createdAt&include=email_guesses,email_guesses.pattern'
    } else if (newListName == 'Archived') {
      qry = 'where={"company":'+company+',"archived":false}&count=1&order=-createdAt&include=email_guesses,email_guesses.pattern'
    }
    console.log(qry)

    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect',
      type:'GET',
      headers: parse_headers,
      async: true,
      data: qry,
      ajaxStart: function() {
        console.log('started list')
      },
      success: function(res){
        thisss.setState({prospects: res.results})
        thisss.setState({count: res.count})
        //thisss.setState({totalCount: res.count})
        thisss.setState({pages: Math.ceil(res.count/thisss.props.prospectsPerPage)})
        thisss.setState({loading: false})
      },
      error: function(res){
        //console.log('error')
        //console.log(res)
      }
    })
  },

  checkboxAction: function(checkedState, objId) {
    /* Storing Checked Prospects In LocalStorage To Make it Easier To
     * Copy and Move Prospects 
     *
     * Move To User_Prospects?
     */
    
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    //console.log(checkedState)
    if(checkedState)
      selectedProspects.push(objId)
    else
      selectedProspects = _.reject(selectedProspects, 
                                   function(id){return id == objId})

    console.log(selectedProspects)
    localStorage.selectedProspects = JSON.stringify(selectedProspects)
    this.setState({selectedProspects: selectedProspects})
  },

  masterCheckboxChanged: function(masterCheckboxValue) {
    this.setState({masterCheckboxChecked: masterCheckboxValue})
  },

  render: function() {
    this.startKeyboardShortcuts()
    $('body').css({overflow:'auto'})

    prospects = []
    for(i=0;i<this.state.prospects.length;i++) {
      url = this.state.prospects[i].url
      prospect = this.state.prospects[i]

      if(url != "no linkedin website" && typeof(url) != "undefined" && url != ""){
        url = url.replace('http://','')
        the_link = React.DOM.a({href: 'http://'+url}, React.DOM.i({className: "fa fa-globe"}))
      } else {
        the_link = ""
      }

      profile = this.state.prospects[i].linkedin_url.replace('http://','')
      profile = this.state.prospects[i].linkedin_url.replace('https://','')
      li = React.DOM.a({href: 'http://'+profile, className: "linkedin_link"}, React.DOM.i({className: "fa fa-linkedin-square"}))

      keyboardSelected = (i == this.state.keyboardActiveProspect)

      selectedProspects = JSON.parse(localStorage.selectedProspects)
      alreadyChecked=false
      for(ii=0;ii< selectedProspects.length;ii++)
        if(prospect.objectId == selectedProspects[ii])
          alreadyChecked = true

        //console.log(alreadyChecked)

      prospects.push(
        UserProspect({deleteProspect: this.deleteProspect, 
                      prospect: this.state.prospects[i], 
                      masterCheckboxChecked: this.state.masterCheckboxChecked, 
                      key: this.generate_id(), 
                      link: the_link, 
                      keyboardSelected: keyboardSelected, 
                      checkboxAction: this.checkboxAction, 
                      alreadyChecked: alreadyChecked, 
                      li: li}))
    }

    listType = (this.state.currentList == "All") ? {display:'none'} : {float:'left'}
    listNameStyle = (this.state.currentList == "All") ? {display:'none'} : {float:'left',display:'inline-block', fontWeight: 200, marginTop: 1, paddingRight: 10, marginLeft: -10}
    listBtn = (this.state.currentList == "All") ? {display:'none'} : {float:'left',marginLeft:5}
    listOptions = (this.state.currentList == "All") ? {display:'none'} : {float:'right'}
    copyDropdownStyle = (this.state.currentList == "All") ? {width:114, right:4} : {width:114, right:36}
    currentList = this.state.currentList
    return (
        React.DOM.div(null, 
      React.DOM.div({className: "container", style: {width:'100%',padding:'0', background: 'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)'}}, 
        SideMenuProspects({currentList: this.state.currentList, 
                           count: this.state.count, 
                           totalCount: this.state.totalCount, 
                           changeList: this.changeList, 
                           createList: this.createList, 
                           lists: this.state.lists}), 

        React.DOM.div({className: "col-md-10 col-sm-10 col-xs-10", style: {padding:'0'}}, 
              React.DOM.div({id: "prospectDetailButtons"}, 
                ListDetailButtons({
                  renameList: this.renameList, 
                  deleteList: this.deleteList, 
                  currentListName: this.state.currentList, 
                  currentList: this.state.currentListObjectId}), 

                React.DOM.div({className: "dropdown", style: {display:'none'}}, 
                  React.DOM.a({href: "javascript:", 
                     className: "btn btn-primary btn-xs list-options", 
                     id: "", 
                     style: listOptions}, 
                    React.DOM.i({className: "fa fa-bars"})
                  )
                ), 

                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     id: "copyToList", 
                     href: "javascript:", 
                     className: "drop-target btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-copy"}), 
                       "  Copy To List  ",  
                     React.DOM.i({className: "fa fa-caret-down"})
                ), 
                CurrentListsTwo({lists: this.state.lists, 
                                 copyDropdownStyle: copyDropdownStyle, 
                                 listAction: this.copySelectedProspects})
                ), 
  
                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     href: "javascript:", 
                     id: "moveToList", 
                     style: listOptions, 
                     className: "btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-share"}), 
                     "  Move To List  ",  
                     React.DOM.i({className: "fa fa-caret-down"})
                ), 
                CurrentLists({lists: this.state.lists, 
                              listAction: this.moveSelectedProspects})
                ), 

                React.DOM.a({onClick: this.downloadFile, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                  React.DOM.i({className: "fa fa-download"}), "   Download CSV  " 
                ), 
                React.DOM.a({onClick: this.downloadFile, 
                     style: listOptions, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                  React.DOM.i({className: "fa fa-building"}), "   Generate Company List  " 
                )
              ), 
        

          React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
            React.DOM.table({className: "prospects-table table table-striped", style: {marginBottom:'0px'}}, 
              React.DOM.thead({style: {backgroundColor:'white'}}, 
                UserProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged})
              ), 
              React.DOM.tbody(null, 
                prospects
              )
            ), 
            (this.state.loading) ? LoadingSpinner(null) : ""
          )
        )
      ), 

      PanelFooting({currentPage: this.state.currentPage, 
                    count: this.state.count, 
                    paginate: this.paginate, 
                    prospectsPerPage: this.state.prospectsPerPage, 
                    pages: this.state.pages}), 
      Messenger(null)
    )
    );
  },

  paginate: function(newProspects, newPage) {
    this.setState({
      prospects: newProspects,
      currentPage: newPage,
      keyboardActiveProspect: 0
    })
    this.startKeyboardShortcuts()
    document.getElementById('autoscroll').scrollTop = 0
  },

  downloadFile: function() {
    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
    }

    // Get List Count
    list = JSON.stringify({
      '__type'   :  'Pointer',
      'className':  'ProspectList',
      'objectId' :  this.state.currentListObjectId
    })
    console.log(list)
    // Add Support For More than 1000
    // num_of_requests
    localStorage.download_total = Math.ceil(this.state.count/1000)
    localStorage.downloads      = 0

    if(this.state.currentList == "All")
      qry = 'where={"company":'+company+'}&count=1'
    else
      qry = 'where={"lists":'+list+'}&count=1'

    for(i=0;i< Math.ceil(this.state.count/1000); i++){
      $.ajax({
        url: 'https://api.parse.com/1/classes/Prospect?limit=1000&skip='+i,
        type:'GET',
        headers: parse_headers,
        downloadFile: 'download_'+i,
        data: qry,
        success: function(res){
          // Clean Results
          // Remove Certain Parse Columns - created_at, updated_at, objectId
          // Rename createdAt as date prospected
          for(i=0;i< res.results.length;i++) {
            delete res.results[i].company
            delete res.results[i].pos
            delete res.results[i].user
            delete res.results[i].objectId
            delete res.results[i].createdAt
            delete res.results[i].updatedAt
          }

          // Add Results To LocalStorage
          localStorage.downloads = JSON.parse(localStorage.downloads) + 1 
          localStorage.setItem(this.downloadFile, JSON.stringify(res.results))

          // Check to see if all ajax reqs in for loop are complete
          if(localStorage.downloads == localStorage.download_total) {
            console.log('matched')
            // Merge all localStorage results
            prospects = []
            for(ii=0;ii < JSON.parse(localStorage.download_total); ii++){
              prospects = prospects.concat(JSON.parse(localStorage.getItem('download_'+ii)))
              console.log(prospects)
            }

            console.log(prospects)
            // Output as CSV
            var blob = new Blob([Papa.unparse(prospects)], {type: "text/plain;charset=utf-8"});
            console.log(blob)
            saveAs(blob, "prospects.csv");
          }
      },

      error: function(res){
        console.log(res)
      }
      });
    }
    
    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
    

  },

  removeSelectedProspects: function() {
    // If List Type is All Archive the prospect
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []

    for(i=0;i< selectedProspects.length;i++){
      if(this.state.currentList != 'All'){
        tmp = {
          method:'PUT',
          path:'/1/classes/Prospect/'+selectedProspects[i],
          body: {
            lists: {
              '__op'    : 'Remove',
              "objects" : [{ 
                  '__type':'Pointer',
                  'className':'ProspectList',
                  'objectId':this.state.currentListObjectId
              }]
            }
          }
        }
      }else{
        tmp = {
          method:'PUT',
          path:'/1/classes/Prospect/'+selectedProspects[i],
          body: {
            archived:false,
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        lists = thiss.state.lists

        for(i=0;i< lists.length; i++) { 
          // Subtract From Old List - Not Working For Archive
          if(lists[i].objectId == thiss.state.currentListObjectId)
            lists[i].count = parseInt(lists[i].count) - parseInt(selectedProspects.length)
        }
        // Update local list count
        thiss.setState({lists: lists})

        // remove from current list ui
        selectedProspects = JSON.parse(localStorage.selectedProspects)
        console.log('remove selected prospects')
        console.log(selectedProspects)
        console.log(thiss.state.prospects)
        var filtered = _.filter(thiss.state.prospects, function(item) {
          for(i=0;i< selectedProspects.length;i++) 
            if(item.objectId == selectedProspects[i])
              return false
          return true
        });
        console.log(filtered)
        thiss.setState({prospects: filtered})
        localStorage.selectedProspects = JSON.stringify([])

        // add alert to inform user
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  moveSelectedProspects: function(listObjectId) {
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    // get the selected objectId from selectedProspects state
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []


    // Batch Update Parse
    // - Remove All Selected Prospects From Current List
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/Prospect/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'Remove',
            "objects" : [{ 
                '__type':'Pointer',
                'className':'ProspectList',
                'objectId':this.state.currentListObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }
    
    // - Add Other List 
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/Prospect/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'AddUnique',
            "objects" : [{ 
                '__type':'Pointer',
                'className':'ProspectList',
                'objectId':listObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        lists = thiss.state.lists

        for(i=0;i< lists.length; i++) { 
          // Add To New List
          if(lists[i].objectId == listObjectId)
            lists[i].count = parseInt(lists[i].count) + parseInt(selectedProspects.length)
          // Subtract From Old List
          if(lists[i].objectId == thiss.state.currentListObjectId)
            lists[i].count = parseInt(lists[i].count) - parseInt(selectedProspects.length)
        }
        // Update local list count
        thiss.setState({lists: lists})

        // remove from current list ui
        console.log('selectedProspects')
        console.log(thiss.state.prospects)
        var filtered = _.filter(thiss.state.prospects, function(item) {
          is_selected = true
          for(i=0;i< selectedProspects.length;i++) 
            if(item.objectId == selectedProspects[i])
              is_selected = false
          return is_selected
        });
        console.log(filtered)
        thiss.setState({prospects: filtered})
        localStorage.selectedProspects = JSON.stringify([])

        // add alert to inform user
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  copySelectedProspects: function(listObjectId) {
    console.log(listObjectId)
    
    // make batch ajax request to parse
    parseHeaders = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
      "Content-Type" : "application/json"
    }

    // Add Loading Sign To List

    selectedProspects = JSON.parse(localStorage.selectedProspects)
    batchData = []
    for(i=0;i< selectedProspects.length;i++){
      tmp = {
        method:'PUT',
        path:'/1/classes/Prospect/'+selectedProspects[i],
        body: {
          lists: {
            '__op'    : 'AddUnique',
            "objects" : [{ 
                '__type':'Pointer',
                'className':'ProspectList',
                'objectId':listObjectId
            }]
          }
        }
      }
      batchData.push(tmp)
    }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/batch',
      type:'POST',
      headers:parseHeaders,
      data: JSON.stringify({requests: batchData}),
      success:function(res) {
        console.log(res)
        // Update With the number of successes
        // Update local list count
        lists = thiss.state.lists
        for(i=0;i< lists.length; i++) { 
          if(lists[i].objectId == listObjectId)
            lists[i].count = parseInt(lists[i].count) + parseInt(res.length)
        }
        thiss.setState({lists: lists})
        localStorage.selectedProspects = "[]"
        thiss.setState({selectedProspects : [] })
        
        // add alert to inform user
        // Unselect all selected
      },
      error: function(err) {
        console.log(err)
      }
    });

  },

  hideAlert: function() {
    $('.alert').hide()
  },

  adjustHeight: function(whichOne) {
    prospectWindowTop = $('#prospectDetailButtons').position().top
    prospectWindowTop = prospectWindowTop + $('#prospectDetailButtons').height()
    prospectWindowBottom = $('#autoscroll').position().top + $('#autoscroll').height()

    if(whichOne == 'j')
      activeProspect = this.state.keyboardActiveProspect +1 
    else
      activeProspect = this.state.keyboardActiveProspect -1 

    activeTop = $($('.prospects-tr')[activeProspect]).position().top
    selectedHeight = $($('.prospects-tr')[activeProspect]).height()
    activeBottom = $($('.prospects-tr')[activeProspect]).position().top+selectedHeight

    console.log(prospectWindowTop, prospectWindowBottom)
    console.log(activeTop, activeBottom)

    scrollTop = document.getElementById('autoscroll').scrollTop
    if(activeBottom > prospectWindowBottom)
      document.getElementById('autoscroll').scrollTop = scrollTop + activeBottom - prospectWindowBottom

    if(activeTop < 0)
      document.getElementById('autoscroll').scrollTop = scrollTop + activeTop - 37
    else if(activeTop == $($('.prospects-tr')[0]).position().top)
      document.getElementById('autoscroll').scrollTop = 0
      
    // Get Postion of Top
    // Get Position of Bottom 
    // Get Position of Current Selected
    // Adjust by scrolling down or up
  },

  startKeyboardShortcuts: function() {
    /* Keyboard Shortcuts */
    Mousetrap.reset()
    //Mousetrap.unbind(['j','k','o'])
    thiss = this;

    /* Prospect Table Shortcuts */
    Mousetrap.bind('j', function() { 
      keyboard = thiss.state.keyboardActiveProspect
      if(keyboard != thiss.state.prospectsPerPage+1)
        thiss.adjustHeight('j')
        thiss.setState({keyboardActiveProspect: keyboard+1})
    });

    Mousetrap.bind('k', function() { 
      keyboard = thiss.state.keyboardActiveProspect
      if(keyboard != 1)
        thiss.adjustHeight('k')
        thiss.setState({keyboardActiveProspect: keyboard-1})
    });


    Mousetrap.bind('o', function() { 
      console.log('open current prospect')
      console.log($($('.keySelect').find('a.linkedin_link')[0]).attr('href'))
      link = $($('.keySelect').find('a.linkedin_link')[0]).attr('href')
      /*
      window.open(link, '_blank')
      console.log('new')
      */
      //popupWindow.blur();
      //window.focus();
      // keyboard = thiss.state.keyboardActiveProspect
      
      var a = document.createElement("a");
      a.href = link
      var evt = document.createEvent("MouseEvents");
      //the tenth parameter of initMouseEvent sets ctrl key
      // For Mac This Works Check For - Windows
      evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0,
                                  false, false, false, true, 0, null);
      a.dispatchEvent(evt);
    });



    /* List Modification Shortcuts */
    Mousetrap.bind('tab+r', function(){
      //console.log('reload')
      $('#renameListBtn').click()
    })

    Mousetrap.bind('tab+d', function(){
      //console.log('reload')
      $('#deleteListModal').click()
    })

    Mousetrap.bind('tab+s', function(){
      //console.log('reload')
      //$('#downloadProspects').click()
      thiss.downloadFile()
    })

    Mousetrap.bind('shift+l', function(){
      //console.log('reload')
      //$('#downloadProspects').click()
      //thiss.downloadFile()
      $('.new-list-btn').click()
    })

    Mousetrap.bind('e', function(){
      console.log('reload')
      //$('#downloadProspects').click()
      thiss.removeSelectedProspects()
    })

    Mousetrap.bind('c', function() { 
      console.log('copy')
      $('#copyToList').click()
    });

    Mousetrap.bind('m', function() { 
      console.log('copy')
      $('#moveToList').click()
    });

    //Mousetrap.bind('e', function() { console.log('e'); });
    Mousetrap.bind('right', function() { console.log('right'); });
    Mousetrap.bind('left', function() { console.log('left'); });

  },

  componentDidMount: function() {
    /* OnLoad For The First Time Function */
    localStorage.selectedProspects = JSON.stringify([])
    thisss = this;

    //this.startKeyboardShortcuts()

    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb'
    }

    cuid = JSON.parse(localStorage.currentUser).objectId
    user = JSON.stringify({'__type':'Pointer',
                           'objectId':cuid, 
                           'className': 'User'})
    archiveList = JSON.stringify({ //hardCode
      'objectId':'SerPQjckve', // Differente For Wach User
      '__type':'Pointer', 
      'className' : 'ProspectList' 
    })

    qry = {
      where: JSON.stringify({
        company: JSON.parse(localStorage.currentUser).company,
        archived: true,
      }),
      count: 1,
      order: '-createdAt',
      limit: this.state.prospectPerPage,
      include: 'email_guesses,email_guesses.pattern'
    }

    //qry = 'where={"company":'+company+',"archived":true}&count=1&order=-createdAt&incude=email_guesses'

    if(this.state.currentList != 'All'){
      currentList = {
        'objectId':this.state.currentListObjectId, 
        '__type':'Pointer', 
        'className' : 'ProspectList' 
      }
      currentList = JSON.stringify(currentList)
      user = JSON.stringify({'__type':'Pointer',
                             'objectId':'xThAXc0LZT',
                             'className':'User'})

      // add company to prospects added through mining job
      qry = 'where={"company":'+company+',"lists":'+currentList+'}&count=1'
    }

    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect',
      type:'GET',
      headers: appConfig.parseHeaders,
      cache: true,
      data: qry,
      success: function(res){
        console.log(res)
        thisss.setState({prospects: res.results})
        thisss.setState({count: res.count})
        thisss.setState({totalCount: res.count})
        thisss.setState({pages: Math.ceil(res.count/thisss.props.prospectsPerPage)})
        thisss.setState({loading: false})
      },
      error: function(res){
        console.log('error')
        console.log(res)
      }
    })

    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
    }

    currentUser = { 
      '__type'   : 'Pointer',
      'className': '_User',
      'objectId' : JSON.parse(localStorage.currentUser).objectId
    }

    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/ProspectList',
      type: 'GET',
      headers: parse_headers,
      data: 'where={"user":'+JSON.stringify(currentUser)+"}&count=1&order=-createdAt",
      success: function(res) {
        console.log(res)
        results = res.results
        for(i=0;i< results.length; i++) {
          results.count = '~'
        }
        thiss.setState({lists: results})
        // Make batch request to get list counts after they are loaded
        for(i=0;i < res.results.length; i++) {
          localStorage.setItem(res.results[i].objectId, "")
        }

        for(i=0;i< res.results.length; i++) {
          list = {
            '__type'    : 'Pointer',
            'objectId'  : res.results[i].objectId,
            'className' : 'ProspectList', 
          }

          $.ajax({
            url:'https://api.parse.com/1/classes/Prospect',
            type:'GET',
            headers:parse_headers,
            listObjectId: res.results[i].objectId,
            data: 'where={"lists":'+JSON.stringify(list)+'}&count=1',
            success: function(res) {
              //console.log(this.listObjectId)
              localStorage.setItem(this.listObjectId, res.count)
              amount = 0
              for(ii=0;ii< results.length;ii++){
                if(localStorage.getItem(results[ii].objectId) == "")
                  amount = amount + 1
              }

              if(amount == 0) {
                for(ii=0;ii< results.length;ii++)
                  results[ii].count = localStorage.getItem(results[ii].objectId)

                thiss.setState({lists: results})
                //console.log('Got Counts')
              }

              // updated res.count
              //thiss.setState({count: res.count})
            },
            error: function(err) {
              console.log(err)
            }
          })
        }
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
  },

  generate_id : function () {
    return '_' + Math.random().toString(36).substr(2, 9);
  },
});

/*  Dropdown Menus */

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.listAction(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, href: "javascript:", onClick: this.listAction}, this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:158}}, 
        lists
      )
    );
  }
});

var ListsMenu = React.createClass({displayName: 'ListsMenu',
  render: function() {
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {
            minWidth:'inherit',
            top: '20px',
            width: '125px',
            right: '154px',
            left:'auto'
          }}, 
        React.DOM.li(null, React.DOM.a({href: "#books"}, 
          React.DOM.i({className: "fa fa-times"}), "  " + ' ' +
          "Delete List"
        )), 
        React.DOM.li(null, React.DOM.a({href: "#podcasts"}, 
          "Rename Lists"
        ))
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.listAction(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i<this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               href: "javascript:", 
               onClick: this.listAction}, 
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: this.props.copyDropdownStyle}, 
        lists
      )
    );
  }
});

var ListDetailButtons = React.createClass({displayName: 'ListDetailButtons',
  // Rename List
  getInitialState: function() {
    return {
      editMode: false
    }
  },
  render: function() {
    //console.log(this.props.currentListObjectId)
    if(!this.state.editMode) {
      stuff = React.DOM.span({className: "", style: listNameStyle}, 
            (this.props.currentListName == "All") ? '' : React.DOM.i({className: "fa fa-bars", style: {fontSize:16, marginTop:-5}}), 
            (this.props.currentListName == "All") ? '' : "   " +this.props.currentListName
              )
    } else {
      stuff = React.DOM.input({className: "form-control", style: {width: 100, float: 'left', height: 24, marginTop: -1}})
    }
    return (

          React.DOM.div(null, 
            React.DOM.h4({style: {margin:0}}, 
              stuff, 
              React.DOM.a({href: "javascript:", 
                style: listBtn, 
                'data-toggle': "modal", 
                id: "renameListBtn", 
                'data-target': ".bs-renameList-modal-sm", 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-pencil"})
              ), 
              React.DOM.a({href: "javascript:", 
                onClick: this.deleteList, 
                style: listBtn, 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-trash-o"})
              )
            ), 

            RenameListModal({renameList: this.props.renameList}), 
            DeleteListModal({deleteList: this.props.deleteList})
          )
      );
  },

  renameList: function(newListName) {
    this.props.renameList(newListName)
  },

  deleteList: function(){
    thiss = this;
    swal({   
      title: "Are you sure?",   
      text: "Your will not be able to recover this prospect list!",   
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   swal("Deleted!", "Your prospect list has been deleted.", "success"); 
        console.log('deleted')
        thiss.props.deleteList()
      });
  },

  toggleEdit: function() {
    this.setState({editMode: !this.state.editMode })
  }
});


},{"./delete_list_modal.js.min.js":18,"./loading_spinner.js.min.js":26,"./messenger.js.min.js":28,"./panel_footing.js.min.js":31,"./rename_list_modal.js.min.js":35,"./side_menu_user_prospects.js.min.js":39,"./user_prospect.js.min.js":49,"./user_prospect_header.js.min.js":50,"./user_side_menu_list.js.min.js":51}],35:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  renameList: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newListName = $('#newListName').val()
    if(newListName.trim() != "")
      this.props.renameList(newListName)
    // Disable Modal
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-renameList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Rename List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.renameList}, 
                    React.DOM.input({id: "newListName", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.renameList, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create List"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}],36:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div(null, 
        "Scheduls"
      )
    );
  }
});

},{}],37:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      currentProspect: 0,
    }
  },
  //SendEmailModal
  render: function() {
    //console.log(this.props.currentTemplate)
    prospect = this.props.prospects[this.state.currentProspect]
    prospect = (prospect) ? prospect : {'name':'','email':''}
    //console.log(prospect)
    prospects = []
    for(i=0; i< this.props.prospects.length; i++){
      prospects.push(UserPlaceHolder({prospect: this.props.prospects[i]}))
    }
    email = (prospect.email) ? prospect.email.toLowerCase() : ""
    return (
          React.DOM.div({className: "modal fade bs-sendEmail-modal-lg", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "sendEmailModal", style: {top:'10px'}}, 
            React.DOM.div({className: "modal-dialog modal-lg"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
        React.DOM.button({type: "button", 
                style: {float:'right'}, 
                className: "btn btn-primary btn-sm"}, 
                React.DOM.i({className: "fa fa-paper-plane"}), " " + ' ' +
                "Send Email"), 
        React.DOM.button({type: "button", style: {marginRight:10, float:'right'}, 
                className: "btn btn-default btn-sm", 'data-dismiss': "modal"}, "Close"), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-envelope"}), "  Send Email" + ' ' +
                    "  ", 
                    React.DOM.small(null, "("+this.props.prospects.length+")")
                  )
                ), 
                React.DOM.div({className: "modal-body", style: {paddingTop:5}}, 
                  React.DOM.h4(null, "People"), 
                  
                  React.DOM.div({className: "prospect-container"}, 
                    prospects
                  ), 
                  React.DOM.br(null), 
                  React.DOM.h4({style: {display:'inline-block'}}, "Emails    ", 
                    React.DOM.small(null, (this.state.currentProspect+1)+' of '+this.props.prospects.length)), 
                  "   ", 
                  React.DOM.a({href: "javascript:", 
              className: (this.state.currentProspect == 0 ) ? "btn disabled" : "btn", 
                    onClick: this.previousProspect}, React.DOM.i({className: "fa fa-arrow-left"})), 
                  React.DOM.a({href: "javascript:", 
            className: (this.state.currentProspect == 135 ) ? "btn disabled" : "btn", 
                    onClick: this.nextProspect}, React.DOM.i({className: "fa fa-arrow-right"})), 

                  React.DOM.div(null, 

React.DOM.ul({className: "list-group email-holder", style: {borderTop:'solid 1px #eee'}}, 
  React.DOM.li({className: "list-group-item"}, 
    React.DOM.h5({style: {display:'inline-block',marginTop:0,marginBottom:0}}, "To:  "), 
    prospect.name + " - " + email
  ), 
  React.DOM.li({className: "list-group-item"}, 
    React.DOM.h5({style: {display:'inline-block',marginTop:0,marginBottom:0}}, "Subject:  "), " ", this.props.currentTemplate.subject
  ), 
  React.DOM.li({className: "list-group-item body"})
)
  
                  )

                ), 

      React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
        React.DOM.button({type: "button", 
                className: "btn btn-default", 'data-dismiss': "modal"}, "Close"), 
        React.DOM.button({type: "button", 
                className: "btn btn-primary"}, "Send Email")
      )
              )
            )
          )
    );
  },

  previousProspect: function() {
    this.setState({currentProspect: this.state.currentProspect-1 })
  },

  nextProspect: function() {
    this.setState({currentProspect: this.state.currentProspect+1 })
  },

  parseTemplate: function(templateBody) {
    first_name = prospect.name.split(' ')[0]
    //hiring_signal = prospect.signals

    signals = (prospect.signals) ? prospect.signals[0] : ""
    templateBody = Mustache.render(templateBody, {
      hiring_signal: signals,
      first_name: prospect.name.split(' ')[0]
    })

    console.log(templateBody)
      
    return templateBody
  },

  componentDidUpdate: function() {
    //console.log(this.props.currentTemplate)
    parsedTemplate = this.parseTemplate(this.props.currentTemplate.body)
    
    //$('.body').html(this.props.currentTemplate.body)
    $('.body').html(parsedTemplate)
  }
});

var UserPlaceHolder = React.createClass({displayName: 'UserPlaceHolder',
  render: function() {
    return (
        React.DOM.div({className: "btn-group", style: {marginRight:5,marginBottom:5}}, 
          React.DOM.div({className: "btn-group"}, 
            React.DOM.button({type: "button", 
                    className: "btn btn-success btn-sm"}, 
              React.DOM.i({className: "fa fa-user"}), "  ", 
              (this.props.prospect) ? this.props.prospect.name : ""
            )
          ), 
          React.DOM.button({type: "button", className: "btn btn-success btn-sm"}, 
            React.DOM.i({className: "fa fa-trash-o"})
          )
        )
    )
  }
});

},{}],38:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Sent Mail
  getInitialState: function() {
    return {
      sentEmails: []
    }
  },

  componentDidMount: function() {
    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/SentEmail',
      data:{include: 'campaign,prospect,prospect.email_guesses.pattern'},
      headers: appConfig.headers,
      success: function(res) { thiss.setState({sentEmails: res.results}) },
      error: function() {}
    })
  },

  render: function() {
    sentEmails = []
    for(i=0;i< this.state.sentEmails.length; i++) 
      sentEmails.push(SentEmailRow({sentEmail: this.state.sentEmails[i]}))

    return (
      React.DOM.div({style: {overflow:'auto',height:550}}, 
        React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Prospect Name"), 
            React.DOM.th(null, "Prospect Email"), 
            React.DOM.th({style: {width:290}}, "Status")
          ), 
          React.DOM.tbody(null, 
            sentEmails
          )
        )
      )
    );
  }
});

var SentEmailRow = React.createClass({displayName: 'SentEmailRow',
  render: function() {
    sentEmail = this.props.sentEmail
    //console.log(sentEmail)

    email = sentEmail.email
    if(email == "no_email"){
      first = sentEmail.prospect.name.split(' ')[0]
      last = _.last(sentEmail.prospect.name.split(' '))

      pattern = _.findWhere(sentEmail.prospect.email_guesses, {'tried':false})
      data = {first: first, last: last, fi: first[0], li: last[0]}
      email = Mustache.render(pattern.pattern.pattern, data).toLowerCase()
    }

    return (
      React.DOM.tr(null, 
        React.DOM.td(null, React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-clock"}), 
            moment(sentEmail.createdAt).fromNow())), 
        React.DOM.td(null, 
          React.DOM.h6({style: {fontSize:14,fontWeight:'bold',marginBottom:0}}, sentEmail.prospect.name), 
          React.DOM.h6({style: {marginTop:4,marginBottom:0}}, sentEmail.prospect.pos.trim()), 
          React.DOM.h6({style: {marginTop:4}}, sentEmail.prospect.company_name)
        ), 
        React.DOM.td(null, React.DOM.h6(null, email)), 
        React.DOM.td({style: {paddingTop:13}}, 
          React.DOM.span({className: "label label-default"}, "Queued"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-success"}, "Opened"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-default"}, "Delivered"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-default"}, "Replied")
        )
      )
    )
  }
})

},{}],39:[function(require,module,exports){
/** @jsx React.DOM */

var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var createListModal = require('./create_list_modal.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  //SideMenuProspects - SideList
  getInitialState: function() {
    return {
      /*
      createList: 
      renameList:
      deleteList:
      changeList:
      currentList:
      totalCount:
      lists:
      */
    }
  },

  createList: function (data) {
    this.props.createList(data)
  },

  componentDidMount: function() {
  },

  changeList: function(e) {
    /*
    currentList = $(e.target).parent()//.data('list')
    console.log(currentList)
    this.props.changeList(currentList.name, currentList.objectId)
    */
  },

  render: function() {
    if(this.props.currentList == "All")
      styles = {'backgroundColor':'rgb(0, 122, 255)', 'color':'white'} 
    else
      styles =  {}

    lists = [SideMenuListOption({list: {name: 'All',count: this.props.totalCount}, 
                                 iconType: 'users', 
                                 changeList: this.props.changeList}), 
             SideMenuListOption({list: {name: 'Archived', count: '~'}, 
                                 iconType: 'archive', 
                                 changeList: this.props.changeList, 
                                 hideCount: true})]

    for(i=0;i< this.props.lists.length;i++){
      list = this.props.lists[i]
      if(list.list_type == "signal_list")
        iconType = "wifi"
      else if (list.list_type == "mining_job")
        iconType = "cloudDownload"
      if(list.list_type)
        lists.push( SideMenuListOption({list: list, 
                                        iconType: iconType, 
                                        changeList: this.props.changeList}))
      else 
        lists.push( SideMenuListOption({list: list, 
                                        changeList: this.props.changeList}))
    }

    return (
      React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2", 
           style: {padding:'0',height:'438px',backgroundColor:'#e0e9ee',
                   borderRight:'1px solid #b0b8bf',textAlign:'center'}}, 
        React.DOM.div({className: "prospect-list-header"}, " Lists "), 
        React.DOM.div({className: "btn-group-vertical", 
             style: {width:'100%', height: '320px', overflow: 'auto'}}, 
          lists
        ), 
        React.DOM.br(null), React.DOM.br(null), 
        React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
              'data-toggle': "modal", 'data-target': ".bs-example-modal-sm", 
              style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
          React.DOM.i({className: "fa fa-plus-circle"}), "  New List"
        ), 
        createListModal({createList: this.createList, 
                         listClassName: this.props.listClassName}), " ", React.DOM.br(null)
      )
    );
  },
});

},{"./create_list_modal.js.min.js":12,"./user_side_menu_list.js.min.js":51}],40:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalCalendar
  getInitialState: function() {
    return {
      reports : []
    }
  },

  getSignalReport: function() {
    thissss = this;
    
    //console.log('CALENDAR PROPS')
    //console.log(this.props.currentProfile)
    qry = 'where='+JSON.stringify({profile:{
      __type:'Pointer',
      className:'ProspectProfile',
      objectId:this.props.currentProfile.objectId
    }})
    // Get Signal Reports Of Current Profile
    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport?order=-createdAt',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        //console.log(res.results)
        thissss.setState({reports: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    this.getSignalReport()
  },

  componentDidUpdate: function() {
    this.getSignalReport()
  },

  render: function() {
    reports = []
    for(i=0;i< this.state.reports.length; i++) {
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                      setCurrentView: this.setCurrentView, 
                                      report: this.state.reports[i]}))
    }

    return (
      React.DOM.div({className: "container", style: {paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          )
          

        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           height:356,overflow:'auto'}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 
                React.DOM.th(null, "Company Signals"), 
                React.DOM.th(null, "Prospect Signals"), 
                React.DOM.th({style: {width:150,textAlign:'center'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  },

  setCurrentReport: function(newReport) {
    this.props.setCurrentReport(newReport)
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  rowClick: function() {
    this.props.setCurrentReport(this.props.report)
  },

  render: function() {
    if(!this.props.report.mining_job)
      icon = React.DOM.i({className: "fa fa-wifi"})
    else
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {color:'#555'}})

    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          icon
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td(null, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.company_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  Companies found."
          )
        ), 
        React.DOM.td(null, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  People found."
          )
        ), 
        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", 
             style: {fontWeight:'bold',marginTop:5}, 
             className: "btn btn-xs btn-success"}, 
            "Prospect All"
          )
        )
      )
    )
  }
});

},{}],41:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalDetail
  getInitialState: function() {
    return {
      signals: []
    }
  },

  componentDidMount: function() {
    thissss = this;
    currentProfileReport = JSON.stringify({
      __type: 'Pointer',
      className: 'SignalReport',
      objectId: this.props.currentProfileReport.objectId
    })

    console.log('CURRENT PROFILE')
    console.log(currentProfileReport)
    qry = 'where={"signal_report":'+currentProfileReport+'}&include=company_signal,company_signal.signals&order=-createdAt'
    $.ajax({
      url: 'https://api.parse.com/1/classes/PeopleSignal?'+qry,
      type:'GET',
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('SIGNAL DETAIL')
        console.log(res.results)
        thissss.setState({signals: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  returnToCalendarView: function() {
    console.log('return to calendar view')
  },

  render: function() {
    signals = []
    for(i=0;i< this.state.signals.length; i++)
      signals.push(SignalRow({signal: this.state.signals[i]}))

    currentProfileReport = this.props.currentProfileReport
    return (
      React.DOM.div({className: "container", style: {height:356,paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                      paddingLeft:20,paddingTop:5,display:'inline-block'}}, 
              
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          ), 
          React.DOM.h6({style: {fontSize:13,paddingLeft:5,paddingTop:5,display:'inline-block'}}, 
            React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:9}}), "  ", 
            React.DOM.i({className: "fa fa-clock-o"}), "  ", 
            moment(currentProfileReport.createdAt).fromNow(), "  "
          ), 

          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             className: "btn btn-success btn-xs"}, 
            "Prospect All"
          ), 

          React.DOM.div({className: "btn-group", 
               style: {float:'right',marginTop:10,marginRight:10}, 
               'data-toggle': "buttons"}, 
            React.DOM.label({className: "btn btn-xs btn-default active", style: {width:30}}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-user"})
            ), 
            React.DOM.label({className: "btn btn-xs btn-default", style: {width:30}}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-building"})
            )
          )

        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0}}, 
          React.DOM.div({style: {overflow:'auto',height:356}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th({style: {textAlign:'center',width:90}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 

                React.DOM.th(null, "People"), 

                React.DOM.th(null, "Companies"), 

                React.DOM.th({style: {width:90,textAlign:'center'}}
                )

              ), 
              React.DOM.tbody({className: "reports"}, 
                signals
              )
            )
          )
        )
      )
    );
  }
});

var SignalRow = React.createClass({displayName: 'SignalRow',
  render: function() {
    company = (this.props.signal.company_signal) ? this.props.signal.company_signal : {}
    return (
      React.DOM.tr(null, 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, this.props.signal.link_text), 
          React.DOM.h6(null, this.props.signal.title)
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, this.props.signal.title)
        ), 

        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
        )
      )
    )
  }
})

},{}],42:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalLoading
  getInitialState: function() {
    return {
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    }
  },

  componentDidMount: function() {
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        window.console.log(message);
      }
    };

    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.currentProfile.objectId
    var channel = pusher.subscribe('6hFe9lVtbS');
    var thiss = this;
    channel.bind("my-event", function(data) {
      console.log(data)
      thiss.setState({
        count: data.count,
        prospectName: data.name,
        prospectTitle: data.title,
        companyName: data.company
      })
    });
    // Get Signal Report Count
    // Get Last PeopleSignal Found
  },

  //<div style={{backgroundColor:'#ebf1f7',height:'100%',paddingTop:10}}> 
  render: function() {
    return (
      React.DOM.div({style: {background:'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)',height:'100%',paddingTop:10}}, 
        React.DOM.div({className: "signal-card", style: {
            width:500,textAlign:'center',display:'block',marginRight:'auto',
            marginLeft:'auto',marginTop:0,height:200
          }}, 
          React.DOM.div({className: "loading-pulse", style: {display:'block',marginRight:'auto',marginLeft:'auto',marginTop:70}}), 
          React.DOM.div({id: "#mining_job_count", style: {color:'#1ca3fd', fontWeight:'bold',marginTop:-10,marginLeft:-200,
                                              fontSize:32, fontFamily:'Proxima-Nova'}}, 
            this.state.count + " people found."
          ), 
          React.DOM.div({style: {float:'right',marginTop:-48,marginRight:55}}, 
            React.DOM.h6({style: {marginBottom:3, fontWeight:'bold'}}, "John Doe -  ", 
              React.DOM.span({style: {fontWeight:500, fontStyle:'italic'}}, "Vp Sales")), 
            React.DOM.h6({style: {marginTop:0,textAlign:'left'}}, "Acme Corp.")
          )
        )
      )
    )
  },
});

},{}],43:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalProfile
  setCurrentView: function(e) {
    if(!this.props.profile.mining_job)
      this.props.setCurrentView('Calendar')
    else
      this.props.setCurrentView('MiningJobCalendar')
    //e.stopPropagation()
  },

  calendarClick:function(e) {
    this.props.setCurrentProfile(this.props.profile)

    if(!this.props.profile.mining_job)
      this.props.setCurrentView('Calendar')
    else
      this.props.setCurrentView('MiningJobCalendar')

    e.stopPropagation()
  },

  setCurrentProfile: function() {
    this.props.setCurrentProfile(this.props.profile)
    this.props.setCurrentView('Feed')
  },

  removeTheProfile: function() {
    this.props.removeProfile(this.props.profile)
  },

  removeProfile: function() {
    thissss = this;
    console.log(thiss.removeTheProfile)

    swal({   
      title: "Are you sure?",   
      text: "Your will not be able to recover this prospect list!",   
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   
        swal("Deleted!", "Your prospect list has been deleted.", "success"); 
        thissss.removeTheProfile()
        console.log('deleted')
      });
  },

  render: function() {
    //console.log(this.props.profile)
    signalDetails = []
    for(i=0;i< this.props.profile.profiles.length; i++) {
      signalDetails.push(ProfileType({profile: this.props.profile.profiles[i]}))
    }
    if(!this.props.profile.mining_job) 
      icon = React.DOM.i({className: "fa fa-wifi", style: {marginRight:5}})
    else
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {marginRight:5}})

    loading = (!this.props.profile.done) ? React.DOM.div({className: "profile-loading"}, 
            React.DOM.div({className: "double-bounce1"}), 
            React.DOM.div({className: "double-bounce2"})
          ) : ""
    return (
      React.DOM.div({className: "list-group-item ideal-company-profile", 
           onClick: this.setCurrentProfile, 
           style: {paddingTop:5,borderLeft:0,paddingLeft:10,
                   borderRight:'1px solid #ddd'}}, 
        React.DOM.span({className: "profile-title"}, 
          React.DOM.h6({className: "label label-default profile-name"}, 
            icon, 
            this.props.profile.name
          ), 
          loading, 
          React.DOM.a({href: "javascript:", 
             className: "btn btn-primary btn-xs signal-detail-btn", 
             onClick: this.removeProfile}, 
            React.DOM.i({className: "fa fa-trash"})), 
          React.DOM.a({href: "javascript:", 
            style: {display:'none'}, 
            className: "btn btn-primary btn-xs signal-detail-btn"}, 
            React.DOM.i({className: "fa fa-cog"})), 
          React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs signal-detail-btn", 
             onClick: this.calendarClick}, 
            React.DOM.i({className: "fa fa-calendar"})), 
          React.DOM.a({href: "javascript:", 
             onClick: this.launchModal, 
             style: (this.props.profile.mining_job) ? {display:'none'}:{display:'block'}, 
             className: "btn btn-primary btn-xs signal-detail-btn"}, 
            React.DOM.i({className: "fa fa-cloud-download"}))
        ), 

        React.DOM.div({className: "profile-body", style: {marginTop:5}}, 
          signalDetails
        )
      )
    );
  },
  launchModal: function(e) {
    $('#createMiningJobModal').modal()
    e.stopPropogation()
  }
});

var ProfileType = React.createClass({displayName: 'ProfileType',
  render: function() {

  if(this.props.profile){
    if(this.props.profile.className == "HiringProfile") {
      signalIcon = React.DOM.i({className: "fa fa-suitcase"})
      signalName = "Hiring"
      signalValue = _.reduce(this.props.profile.roles, function(result, role) {
        return role + ", "+ result
      }, "");
      //console.log('wtf')
      //console.log(signalValue)
    } else if (this.props.profile.className  == "EmployeeProfile") {
      signalIcon = React.DOM.i({className: "fa fa-users"})
      signalName = "Company Size"
      signalValue = _.reduce(this.props.profile.employees, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "FundingProfile") {
      signalIcon = React.DOM.i({className: "fa fa-institution"})
      signalName = "Funding"
      signalValue = _.reduce(this.props.profile.revenues, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "RevenueProfile") {
      signalIcon = React.DOM.i({className: "fa fa-money"})
      signalName = "Revenue"
      signalValue = _.reduce(this.props.profile.revenues, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "TechnologyProfile") {
      signalIcon = React.DOM.i({className: "fa fa-wrench"})
      signalName = "Technology"
    } else if (this.props.profile.className  == "LocationProfile") {
      signalIcon = React.DOM.i({className: "fa fa-map-marker"})
      signalName = "Locale"
      signalValue = _.reduce(this.props.profile.locale, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "IndustryProfile") {
      signalIcon = React.DOM.i({className: "fa fa-building"})
      signalName = "Industries"
      signalValue = _.reduce(this.props.profile.industries, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "CompanySizeProfile") {
      signalIcon = React.DOM.i({className: "fa fa-wrench"})
      signalName = "Technology"
    } else if (this.props.profile.className  == "ProspectTitleProfile") {
      signalIcon = React.DOM.i({className: "fa fa-user"})
      signalName = "Titles"
      signalValue = _.reduce(this.props.profile.title_keywords, 
     function(result, role) {
        return role + ", "+ result
      }, "");
    } else {
      signalIcon = "not found"
      signalName = "Not found"
      signalValue= "Not found"
    }
  } else {
      signalIcon = "not found"
      signalName = "Not found"
      signalValue= "Not found"

  }

    return (
      React.DOM.span({className: "ideal-profile"}, " ", signalIcon, 
        React.DOM.h6({className: "profile-signal-name"}, signalName, " - "), 
        React.DOM.span({className: "profile-signal-value"}, " "+signalValue)
      )
    );
  }
});

/*
  Funding Profile
  - Amount Raised - btn group
  - Stage - btn group

  People Profile
  - Locale - tags w/ typahead
  - Title - tags w/ typahead

  Company Profile
  - Industries - tags with typahead
  - Revenue - btn group
  - # of Employees - btn group
  - Locale - tags with typahead
*/


},{}],44:[function(require,module,exports){
/** @jsx React.DOM */

var SignalProfile = require('./signal_profile.js.min.js')
var SignalLoading = require('./signal_loading.js.min.js')
var CompanySignalCard = require('./company_signal_card.js.min.js')
var PeopleSignalCard = require('./people_signal_card.js.min.js')
var SignalCalendar = require('./signal_calendar.js.min.js')
var MiningJobCalendar = require('./mining_job_calendar.js.min.js')
var SignalsDetail = require('./signal_detail.js.min.js')

var CreateHiringSignalModal = require('./create_hiring_signal_modal.js.min.js')
var CreateFundingSignalModal = require('./create_funding_signal_modal.js.min.js')
var CreateProspectProfileModal = require('./create_prospect_profile_modal.js.min.js')
var CreateCompanyProfileModal = require('./create_company_profile_modal.js.min.js')
var CreateMiningJobModal = require('./create_mining_job_modal.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      signalType: 'CompanySignal',
      currentProfile: {name:'All'},
      currentProfileObjectId: {},
      currentProfileReport: {},
      signals: [],
      currentView: 'Feed',
      profiles: [],
    }
  },

  setCurrentReport: function(newProfileReport) {
    console.log('NEW REPORT')
    console.log(newProfileReport)

    this.setState({ 
      currentView:'Detail',
      currentProfileReport: newProfileReport 
    })
  },

  setCurrentView: function(newSignalView) {
    this.setState({currentView: newSignalView})
  },

  render: function() {
    currentProfile = this.state.currentProfile
    if(currentProfile.name == "All" || currentProfile.done){
      if(this.state.currentView == "Feed") {
        signalView = React.DOM.div(null, 
            SignalDetailButtons({signalType: this.state.signalType, 
                                 currentProfile: this.state.currentProfile, 
                                 setSignalType: this.setSignalType}), 
            SignalsFeed({setCurrentView: this.setCurrentView, 
                         signalType: this.state.signalType, 
                         profile: this.state.currentProfile, 
                         signals: this.state.signals})
            )
      } else if(this.state.currentView == "Calendar"){
        signalView = SignalCalendar({currentProfile: this.state.currentProfile, 
                                     setCurrentReport: this.setCurrentReport, 
                                     setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "Detail"){
        signalView = SignalsDetail({currentProfile: this.state.currentProfile, 
                                    currentProfileReport: this.state.currentProfileReport, 
                                    setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "MiningJobCalendar"){
        signalView = MiningJobCalendar({currentProfile: this.state.currentProfile, 
                                        setCurrentReport: this.setCurrentReport, 
                                        setCurrentView: this.setCurrentView})
      }
    } else {
      signalView = SignalLoading({currentProfile: this.state.currentProfile})
    }

   return (
      React.DOM.div({style: {height:400}}, 
        React.DOM.div({className: "container", style: {padding:0, width:'100%', height:'100%'}}, 
          React.DOM.div({className: "col-md-3 signal-list", 
               style: { height:'102.8%', padding:0}}, 
            SignalsOptions({profiles: this.state.profiles, 
                            addProfile: this.addProfile, 
                            removeProfile: this.removeProfile, 
                            setCurrentView: this.setCurrentView, 
                            setCurrentProfile: this.setCurrentProfile})
          ), 
          React.DOM.div({className: "col-md-9", style: {height:'100%',padding:0}}, 
            signalView
          )
        ), 

        CreateMiningJobModal(null), 
        CreateHiringSignalModal({addProfile: this.addProfile}), 
        CreateFundingSignalModal({addProfile: this.addProfile}), 
        CreateCompanyProfileModal({addProfile: this.addProfile}), 
        CreateProspectProfileModal({addProfile: this.addProfile, updateProfileWithObjectId: this.updateProfileWithObjectId})
      )
    )
  },

  addProfile: function(newProfile) {
    profiles = this.state.profiles
    this.setState({profiles: [newProfile].concat(profiles)})
    // Set Current Profile 
    this.setCurrentProfile(newProfile)
  },

  removeProfile: function(oldProfile) {
    this.setState({profiles: _.reject(this.state.profiles, function(profile) {
      return _.isEqual(oldProfile, profile)
    })})

    if(oldProfile.objectId){
      $.ajax({
        url:'https://api.parse.com/1/classes/ProspectProfile/'+oldProfile.objectId,
        headers:appConfig.headers,
        type:'DELETE',
      })
    }
  },

  updateProfileWithObjectId: function(oldProfile, objectId) {
    // find where profile == profile
    // replace element
    profiles = this.state.profiles
    count = 0
    console.log('UPDATE PROFILES')

    newProfiles = _.map(profiles, function(profile) {
      profile = _.omit(profile, ['mining_job_list','profiles'])
      oldProfile = _.omit(oldProfile, 'profiles')

      console.log(_.isEqual(_.omit(profile, ['mining_job_list','profiles']),
                            _.omit(oldProfile,'profiles')))
      if(_.isEqual(profile, oldProfile)) {
        profile.objectId = objectId
        return profile
      }
      return profile
    })
    console.log(newProfiles)

    currentProfile = _.omit(this.state.currentProfile,['mining_job_list','profiles'])
    if(_.isEqual(currentProfile, oldProfile)) {
      currentProfile = this.state.currentProfile
      currentProfile.objectId = objectId
      this.setState({currentProfile: currentProfile})
    }
    this.setState({profiles: newProfiles})
  },

  setCurrentProfile: function(newProfile) {
    if(newProfile.only_people) {
      this.getSignals('PeopleSignal', 
                      JSON.stringify({
                         __type: 'Pointer',
                         className: 'ProspectProfile', 
                         objectId: newProfile.objectId}))
      this.setState({
        signalType: 'PeopleSignal',
        currentProfile: newProfile 
      })
    } else {
      this.setState({currentProfile: newProfile })
    }

    this.getSignals('PeopleSignal', newProfile)
  },

  componentDidMount: function() {
    this.getSignals(this.state.signalType)
    currentUser = JSON.parse(localStorage.currentUser)
    user = JSON.stringify(appConfig.pointer('_User', currentUser.objectId))
    company = JSON.stringify(currentUser.company)
    qry = 'where={"company":'+company+',"user":'+user+'}&include=profiles,prospect_list&order=-createdAt'
  
    thisss = this
    $.ajax({
      url: 'https://api.parse.com/1/classes/ProspectProfile',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('Prospect Profile')
        console.log(res.results)
        //thisss.setCurrentProfile(res.results[0])
        thisss.setState({profiles: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  setSignalType: function(labelText) {
    if(labelText == "People")
      currentSignal = "PeopleSignal"
    else if(labelText == "Companies")
      currentSignal = "CompanySignal"
    this.getSignals(currentSignal)
    this.setState({signalType: currentSignal})
  },

  componentDidUpdate: function(nextProps, nextState) {
  },

  getSignals: function(signalType, currentProfile) {
    currentUser = JSON.parse(localStorage.currentUser)
    user = {
      '__type'    : 'Pointer',
      'className' : '_User',
      'objectId'  : currentUser.objectId
    }

    user = JSON.stringify(user)
    company = JSON.stringify(currentUser.company)
    profiles = this.state.currentProfile.profiles

    if(profiles){
      //qry = 'where={"company":'+company+',"user":'+user+',"profile":'+currentProfile+'}'
      profile = JSON.stringify({
        __type:'Pointer',
        className:'ProspectProfile',
        objectId:currentProfile.objectId
      })
      qry = 'where={"profile":'+profile+'}'
      //qry = qry + ',"profiles":{"$all":'+JSON.stringify(profiles)+'}}'
      if(signalType == 'PeopleSignal')
        qry = qry + '&include=signals'
      else
        qry = qry + '&include=signals,company'

    } else {
      qry = {'include':['signals','company']}
    }
  
    thiss = this
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+signalType,
      //url: 'https://api.parse.com/1/classes/CompanySignal',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        //console.log(res.results)
        thiss.setState({signals: res.results})
      },
      error: function(err) { console.log(err) }
    });
  },
});

var SignalDetailButtons = React.createClass({displayName: 'SignalDetailButtons',
  setSignalType: function(e) {
    this.props.setSignalType($(e.target).text().trim())
  },

  render: function() {
    ppl = (this.props.signalType == "PeopleSignal") ? "choose btn btn-primary app-active" : "choose btn btn-primary"
    cmp = (this.props.signalType == "CompanySignal") ? "choose btn btn-primary app-active" : "choose btn btn-primary"

    cmp = (this.props.currentProfile.only_people)  ? cmp + " disabled" : cmp

    return (
      React.DOM.div(null, 
        React.DOM.div({id: "signalDetailButtons", style: {height:44}}, 
          React.DOM.h4({style: {display:'inline-block',float:'left',width:300,
                      fontWeight:200,marginTop:4,paddingLeft:20}}, 
            React.DOM.i({className: "fa fa-newspaper-o"}), " ",  
            this.props.currentProfile.name
          ), 
          React.DOM.div({className: "btn-group", style: {marginLeft:'0%'}}, 
            React.DOM.a({className: ppl, 
               style: {padding:2}, 
               onClick: this.setSignalType}, 
                React.DOM.i({className: "fa fa-user"}), " People"
            ), 
            React.DOM.a({className: cmp, 
               style: {padding:2}, 
               onClick: this.setSignalType}, 
                React.DOM.i({className: "fa fa-building"}), " Companies"
            )
          )
        )
      )
    );
  }
});

var SignalsOptions = React.createClass({displayName: 'SignalsOptions',
  addProfile: function(newProfile) {
    this.props.addProfile(newProfile)
  },

  setCurrentProfile: function(currentProfile) {
    // Set Current Profile
    this.props.setCurrentProfile(currentProfile)
    // Update Request To New Profile
  },

  removeProfile: function(oldProfile) {
    this.props.removeProfile(oldProfile)
  },

  componentDidMount: function() {
  },

  setCurrentView: function(newView) {
    console.log(newView)
    this.props.setCurrentView(newView)
  },

  render: function() {
    profs = []
    for(i=0; i< this.props.profiles.length;i++) {
      profs.push(SignalProfile({setCurrentProfile: this.setCurrentProfile, 
                                setCurrentView: this.setCurrentView, 
                                removeProfile: this.removeProfile, 
                                profile: this.props.profiles[i]}))
    }

    profiles_num = (this.props.profiles.length) ? this.props.profiles.length : "~"
    /* border-left: 5px solid #0096ff !important; for selected profile */
    return (
      React.DOM.div(null, 
      React.DOM.div({className: "list-group"}, 
        React.DOM.li({className: "list-group-item", 
            style: {borderTop:0,borderLeft:0,height:44,paddingRight:5,paddingLeft:10,
                    backgroundColor:'#e0e6ea',
                    backgroundImage:'linear-gradient(#f5f7f8,#e0e6ea);'}}, 
            React.DOM.h4({style: {margin:0,textAlign:'center',fontWeight:200,
                        float:'left',marginTop:2}}, "Profiles (", profiles_num, ")"), 
          React.DOM.a({href: "javascript:", 
             className: "btn btn-xs btn-primary create-profile-dropdown", 
             'data-toggle': "dropdown", 
             onClick: this.launchDropdown, 
             style: {float:'right',
              backgroundImage:'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
            React.DOM.i({className: "fa fa-plus"}), "  Create Profile"
          ), 

          React.DOM.ul({className: "dropdown-menu", 
              style: {marginLeft:175,marginTop:-10}, 
              role: "menu", 'aria-labelledby': "dropdownMenu1"}, 
            React.DOM.li({role: "presentation"}, 
              React.DOM.a({role: "menuitem", tabindex: "-1", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5}, href: "#"}, 
                 React.DOM.h6({style: {margin:2}}, 
                   React.DOM.i({className: "fa fa-suitcase", style: {width:10}}), 
                  "  Create Hiring Signal"
                )
              )
            ), 
            React.DOM.li({role: "presentation", style: {display:'none'}}, 
              React.DOM.a({role: "menuitem", tabindex: "-1", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5}, href: "#"}, 
                React.DOM.h6({style: {margin:2}}, React.DOM.i({className: "fa fa-institution", style: {width:10}}), 
                  "  Create Funding Signal"
                )
              )
            ), 
            React.DOM.li({role: "presentation"}, 
              React.DOM.a({role: "menuitem", tabindex: "-1", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5,paddingRight:2}, href: "#"}, 
                React.DOM.h6({style: {margin:2}}, React.DOM.i({className: "fa fa-user", style: {width:10}}), 
                  "  Create Prospect Profile"
                )
              )
            ), 
            React.DOM.li({role: "presentation", style: {display:'none'}}, 
              React.DOM.a({role: "menuitem", tabindex: "-1", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5,paddingRight:2}, href: "#"}, 
                 React.DOM.h6({style: {margin:2}}, 
                   React.DOM.i({className: "fa fa-building", style: {width:10}}), 
                   "  Create Company Profile"
                 )
              )
            )
          )
        ), 
        React.DOM.div({id: "profiles-menu", style: {height:356, overflow:'auto',marginTop:1}}, 
          profs
        )
      )
    )
    );
  },

  launchModal: function(e) {
    console.log($(e.target).text().trim())
    if($(e.target).text().trim() == 'Create Hiring Signal')
      $('#createHiringSignalModal').modal()
    else if($(e.target).text().trim() == 'Create Funding Signal')
      $('#createFundingSignalModal').modal()
    else if($(e.target).text().trim() == 'Create Prospect Profile')
      $('#createProspectProfileModal').modal()
    else if($(e.target).text().trim() == 'Create Company Profile')
      $('#createCompanyProfileModal').modal()
  },

  launchDropdown: function() {
    $('.create-profile-dropdown').dropdown()
  }
});

var SignalsFeed = React.createClass({displayName: 'SignalsFeed',
  getInitialState: function() {
    return {
      signals: []
    }
  },

  render: function() {
    //this.getSignals()

    signalCards = []
    for(i=0;i< this.props.signals.length;i++) {
      if(this.props.signalType == "CompanySignal")
        signalCards.push(CompanySignalCard({company: this.props.signals[i]}))
      else if(this.props.signalType == "PeopleSignal")
        signalCards.push(PeopleSignalCard({profile: this.props.profile, person: this.props.signals[i]}))
    }
    return (
      React.DOM.div({className: "container signal-card-background", style: {height:356, overflow:'auto'}}, 
        React.DOM.div({className: "col-md-8 col-md-offset-2"}, 
          signalCards
        )
      )
    );
  }
});

},{"./company_signal_card.js.min.js":7,"./create_company_profile_modal.js.min.js":9,"./create_funding_signal_modal.js.min.js":10,"./create_hiring_signal_modal.js.min.js":11,"./create_mining_job_modal.js.min.js":13,"./create_prospect_profile_modal.js.min.js":14,"./mining_job_calendar.js.min.js":30,"./people_signal_card.js.min.js":32,"./signal_calendar.js.min.js":40,"./signal_detail.js.min.js":41,"./signal_loading.js.min.js":42,"./signal_profile.js.min.js":43}],45:[function(require,module,exports){
/** @jsx React.DOM */

theData = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // SignUp
  componentDidMount: function() {
    $('body').css({overflow:'hidden'})
  },

  retrieveUser: function(objectId) {
    headers = {
      "X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
      "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"
    }
    $.ajax({
      url:'https://api.parse.com/1/users/'+objectId,
      headers: headers,
      type:'GET',
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  signup: function() {
    console.log('signup')
    email = $('#email').val()
    password = $('#password').val()
    p = {
      "X-Parse-Application-Id"  : "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
      "X-Parse-REST-API-Key"    : "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb",
      "Content-Type"            : "application/json"
    }
    thiss = this;

    $.ajax({
      url:'https://api.parse.com/1/classes/Company',
      type:'POST',
      headers: p,
      data: JSON.stringify({
        'name': $('#company').val(),
      }),
      success:function(res) {
        $.ajax({
          url:'https://api.parse.com/1/users',
          type:'POST',
          headers: p,
          data: JSON.stringify({
            'username':email,
            'password':password,
            'company':{
              '__type'    : 'Pointer',
              'className' : 'Company',
              'objectId'  : res.objectId,
            }
          }),
          success:function(res) {
            // Do another request to get current user
            localStorage.setItem('currentUser', JSON.stringify(res))
            thiss.retrieveUser(res.objectId)
          },
          error: function(res) {
            console.log(res)
          }
        });
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  render: function() { 
    data = theData()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div(null, 
      React.DOM.div({id: "signup"}, " "), 

      React.DOM.div(null, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Generate high quality prospect lists. Accelerate Sales."), 
          React.DOM.div({className: "panel panel-default login-info", style: {display:'block',marginTop:50}}, 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Company", type: "text", id: "company", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Repeat Password", type: "password", id: "repeat_password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.signup, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Sign Up")
              )
            )
          )
      ), 

      React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
        React.DOM.div({className: "", style: {marginLeft:34}}, 
        imgs_1, 
        imgs_2
        )
      )
      )
    )
  }
});

},{"../lib/data.min.js":52}],46:[function(require,module,exports){
/** @jsx React.DOM */

var EditTemplateView = require('./edit_template.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  //Templates
  getInitialState: function() {
    return {
      selectedTemplate: 0,
      editMode: false
    }
  },

  changeMode: function() {
    this.setState({editMode: !this.state.editeMode})
  },

  render: function() {
    templateView = (!this.state.editMode) ? TemplateView({changeMode: this.changeMode}) : EditTemplateView(null)
    return (
      React.DOM.div(null, 
        React.DOM.div({style: {height:'100%'}}, 
          TemplateSideMenu(null), 
          React.DOM.div({className: "col-md-9", style: {padding:0,height:'100%'}}, 
              templateView
          )
        )
      )
    );
  }
});


var TemplateView = React.createClass({displayName: 'TemplateView',
  changeMode: function() {
    this.props.changeMode()
  },
  render: function() {
    return (
      React.DOM.div({className: "panel panel-info", style: {width:'100%',height:'100%',border:0}}, 
        React.DOM.div({className: "panel-heading"}, 
          "Template Name",  
          React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:'0px'}}, 
            React.DOM.i({className: "fa fa-pencil-square"}), "   Edit Template")
        ), 
        React.DOM.div({className: "panel-body"}, 
        React.DOM.h4(null, "Followup - Prospecting SAAS Outreach"), 
        React.DOM.h6({style: {marginBottom:'0'}, className: "text-muted"}, "Created by Mark on Jul. 21, 2014"), 
        React.DOM.h6({style: {marginTop:'0'}, className: "text-muted"}, "last updated 7 days ago"), 
        React.DOM.br(null), 
        React.DOM.br(null), 

        React.DOM.div({className: "panel panel-default"}, 

          React.DOM.div({className: "panel-body"}, 
          "15 minutes to get company_name more customers" + ' ' +
          "Hey first_name," + ' ' +

          "Would you like to hear an idea for a 15 minute hack that could significantly increase the number of prospects your sales people have access to ?" + ' ' +
           
          "Recently one of our B2B clients saw a huge increase in trial sign ups after working with us. first_name, lets schedule a 15 minute call this week to see if this would be a good fit for both of us." + ' ' +
           
          "What the best time for you this week ?" + ' ' +
           
          "--" + ' ' +
          "Mark" + ' ' + 
          "Customero" + ' ' +
          "mark@customerohq.com"
          
          )
        )
      )
    )
    );
  },
});

var TemplateSideMenu = React.createClass({displayName: 'TemplateSideMenu',
  getInitialState: function() {
    return {
      templates: [],
    }
  },

  componentDidMount: function() {
    //Ajax Request For Templates
    /*
     $.ajax({
      url:'',
      headers: "",
      data: "",
      success: function() {
      },
      error: function() {
      }
     });
    */
  },

  render: function() {
    templates = []
    for(i=0;i< this.state.templates.length; i++)
      templates.push(React.DOM.a({href: "javascript:", className: "list-group-item"}, "templates[i].name"))
    return (
      React.DOM.div({className: "col-md-3", style: {padding:'0', borderRight:'1px solid #ddd',height:'100%',textAlign:'center'}}, 
        React.DOM.div({className: "panel panel-default", style: {border:0}}, 
          React.DOM.div({className: "panel-heading", style: {height:60}}, 
            React.DOM.span({style: {float:'left',fontSize:20,fontWeight:'bold'}}, 
              "Templates"
            ), 
            React.DOM.a({href: "javascript:", className: "btn btn-success ", 
                style: {float:'right'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
          React.DOM.ul({className: "list-group", style: {textAlign:'left'}}, 
            templates
          )
        )
      )
    )
  }
});

},{"./edit_template.js.min.js":19}],47:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //TemplatesMenu
  toggleTemplateEditMenu: function(currentTemplate) {
    this.props.toggleTemplateEditMenu(currentTemplate)
  },

  createTemplate: function() {
    this.props.toggleTemplateEditMenu({
      name: '',
      body:'',
      subject:'',
      editMode:true,
      newTemplate: true
    }, true)
  },

  render: function() {
    //console.log(this.props.templates)
    templates = []
    for(i=0;i< this.props.templates.length; i++) {
      templates.push(
        TemplateListItem({
          toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
          template: this.props.templates[i]})
      )
    }

    return (
      React.DOM.div({className: "", style: {padding:'0', borderRight:'2px solid rgba(0,0,0,0)',height:'100%',textAlign:'center'}}, 
        React.DOM.div({className: "panel panel-default", 
             style: {borderRight:0,borderRadius:0,height:'100%', overflow:'auto'}}, 
          React.DOM.div({className: "panel-heading", style: {height:40}}, 
            React.DOM.span({style: {float:'left',fontSize:14,fontWeight:'bold'}}, 
              React.DOM.i({className: "fa fa-file-text-o"}), 
              React.DOM.span({style: {marginLeft:5}}, "Templates")
            ), 
            React.DOM.a({href: "javascript:", 
              className: "btn btn-success btn-xs", 
              onClick: this.createTemplate, 
                style: {float:'right'}}, 
              React.DOM.i({className: "fa fa-plus"}), 
              React.DOM.span({style: {marginLeft:5}}, "Create Template")
            )
          ), 
          React.DOM.ul({className: "list-group", 
              style: {textAlign:'left'}}, 
            templates
          )
        )
      )
    )
  }
});

var TemplateListItem = React.createClass({displayName: 'TemplateListItem',
  toggleTemplateEditMenu: function() {
    console.log(this.props.template)
    template = this.props.template
    template.editMode = false
    this.props.toggleTemplateEditMenu(template)
  },

  render: function() {
    return (
      React.DOM.div(null, 
        React.DOM.a({href: "javascript:", 
          style: {borderBottom: '1px solid rgb(221, 221, 221)',paddingTop:5,paddingBottom:0}, 
           onClick: this.toggleTemplateEditMenu, 
           className: "list-group-item"}, 
           React.DOM.span({className: "label label-default"}, 
             this.props.template.name
           ), 
           React.DOM.h6(null, "Subject:", React.DOM.span({className: "text text-muted"}, 
             " " + this.props.template.subject
           ))
         )
      )
    );
  }
});

},{}],48:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // TimelineDayElement
  // TODO
  // - add prospect list progression
  // - add scheduled followup
  //

  addFollowup: function() {
    this.props.addFollowup(this.props.dayCount)
  },

  render: function() {
    batchCount = this.props.batchCount
    batchStage = (batchCount) ? BatchStage({batchCount: this.props.batchCount}) : ""

    if(this.props.addTemplateMode) {
      mode = EditTemplate({addFollowup: this.props.addFollowup, 
                           saveFollowup: this.props.saveFollowup, 
                           removeFollowup: this.props.removeFollowup, 
                           dayCount: this.props.dayCount, 
                           templates: this.props.templates})
    } else {
      mode = TemplateFollowup({currentTemplate: this.props.currentTemplate, 
                               editFollowup: this.props.editFollowup, 
                               dayCount: this.props.dayCount, 
                               removeFollowup: this.props.removeFollowup, 
                               setCurrentTemplate: this.props.setCurrentTemplate})
    }
    mode = (this.props.elementType) ? "" : mode
    addFollowup = (this.props.elementType) ? this.addFollowup : ""

    return (
      React.DOM.div(null, 
        React.DOM.div({onClick: addFollowup, className: "day", 'data-trigger': "manual"}, 
          "D"+this.props.dayCount
        ), 
        batchStage, mode
      )
    )
  },

  setCurrentTemplate: function(template) {
    this.props.setCurrentTemplate(template)
  }
});

var TemplateFollowup = React.createClass({displayName: 'TemplateFollowup',
  // EditMode False

  setCurrentTemplate: function() {
    this.props.setCurrentTemplate(this.props.currentTemplate)
  },

  render: function() {
    return (
      React.DOM.div({className: "followup-placement arrow_box_1 tmp_2"}, 
        React.DOM.h6({style: {width:130,display:'inline-block'}}, 
          React.DOM.i({className: "fa fa-file-text-o"}), "  ", 
          (this.props.currentTemplate) ? this.props.currentTemplate.name : ""
        ), 
        React.DOM.button({className: "win-btn btn btn-success btn-xs", 
                'data-target': ".bs-sendEmail-modal-lg", 
                onClick: this.setCurrentTemplate, 
                'data-toggle': "modal"}, 
          React.DOM.i({className: "fa fa-paper-plane"}), " Send"), " ", 
        React.DOM.button({onClick: this.editFollowup, 
                className: "win-btn btn btn-default btn-xs"}, 
          React.DOM.i({className: "fa fa-pencil"})), " ", 
        React.DOM.button({onClick: this.removeFollowup, 
                className: "win-btn btn btn-default btn-xs"}, 
          React.DOM.i({className: "fa fa-trash-o"}))
      )
    );
  },

  editFollowup: function(e) { 
    e.preventDefault()
    console.log(this.props.dayCount)
    this.props.editFollowup(this.props.dayCount)
  },

  removeFollowup: function() {
    console.log('remove')
    this.props.removeFollowup(this.props.dayCount)
  }
});

var BatchStage = React.createClass({displayName: 'BatchStage',
  // Different Stages of People Added to Prospect List
  render: function() {
    return (
      React.DOM.div({className: "followup-placement arrow_box tmp"}, 
        React.DOM.span({className: "badge"}, 
          this.props.batchCount
        ), " ", 
        React.DOM.h6({style: {display:'inline-block'}}, 
          "prospects in the sales cycle.")
      )
    );
  }
});

var EditTemplate = React.createClass({displayName: 'EditTemplate',
  // Edit Mode - True
  render: function() {
    options = []
    for(i=0;i< this.props.templates.length; i++) {
      options.push( React.DOM.option(null, this.props.templates[i].name))
    }
    return (
      React.DOM.div({className: "followup-placement arrow_box_1 tmp_2"}, 
        React.DOM.h6({style: {width:55,display:'inline-block'}, 
            className: "text-muted"}, 
          "Choose :"
        ), 
        React.DOM.select({className: "form-control input-sm", 
                id: "chooseTemplateForFollowup", 
                style: {display:'inline-block',width:127,marginRight:5}}, 
          options
        ), 

        React.DOM.button({className: "win-btn btn btn-success btn-xs", 
                onClick: this.saveFollowup, 
                style: {marginRight:5}}, 
          React.DOM.i({className: "fa fa-check"})), 
        React.DOM.button({className: "win-btn btn btn-default btn-xs", 
                onClick: this.removeFollowup}, 
          React.DOM.i({className: "fa fa-trash-o"}))
      )
    )
  },

  saveFollowup: function(e) {
    //get template from currentTemplate
    e.preventDefault()
    chosenTemplate = $('#chooseTemplateForFollowup').val()
    console.log(chosenTemplate)
    for(i=0;i< this.props.templates.length; i++){
      if(this.props.templates[i].name == chosenTemplate){
        chosenTemplate = this.props.templates[i]
        break
      }
    }
    console.log(chosenTemplate)
    
    this.props.saveFollowup(this.props.dayCount, chosenTemplate)
  },

  removeFollowup: function(day) {
    this.props.removeFollowup(this.props.dayCount)
  },
});


},{}],49:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // UserProspect
  getInitialState: function() {
    return { }
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    //console.log(this.state.checked)
    //console.log(checked)
    //{prospect.employeeCountRange.name + " employees" }
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.websiteUrl) ?  React.DOM.a({href: "http://"+prospect.websiteUrl.replace('http://','')}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    
    prospect_email = prospect.email
    if(prospect.email == "no_email"){
      if(prospect.email_guesses) {
        //console.log(prospect)
        // Get First Untried Email ther
        prospect.email_guesses = prospect.email_guesses.reverse()
        guess = _.findWhere(prospect.email_guesses, {tried: false})
        name = this.props.prospect.name
        vars = {
          first: _.first(name.split(' ')),
          last: _.last(name.split(' ')),
          fi: _.first(name.split(' '))[0],
          li: _.last(name.split(' '))[0]
        }
        console.log(guess.pattern.pattern)
        prospect_email = Mustache.render(guess.pattern.pattern, vars)
      }
    }
     prospect_email = (prospect_email) ? prospect_email.toLowerCase() : ""

    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 
          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect.name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, 
              (prospect.pos) ? prospect.pos.trim() : ""
            )
          ), 
          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, 
              prospect.company_name
            ), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, 
              (prospect.employeeCountRange) ? prospect.employeeCountRange.name + " employees" : ""
            )
          ), 

          React.DOM.td({style: color}, 
            React.DOM.h6({style: {margin:'0px'}}, prospect.city)), 
          React.DOM.td({style: color}, 
            React.DOM.a({href: "mailto:"+prospect_email, 
               style: {margin:'0px'}}, 
               prospect_email
          )), 
          React.DOM.td({style: color}, this.props.li, " ", this.props.link), 
          React.DOM.td({style: color}, 
            websiteBtn
          )
        )
    );
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});


},{}],50:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  checkboxAction: function(e) {
    checkboxVal = $(e.target).is(':checked')
    this.props.masterCheckboxChanged(checkboxVal)
  },

  componentDidMount: function() {

  },

  render: function() {
    return (
            React.DOM.tr(null, 
              React.DOM.th(null, React.DOM.input({type: "checkbox", onChange: this.checkboxAction})), 
              React.DOM.th(null, "Name"), 
              React.DOM.th(null, "Company"), 
              React.DOM.th({style: {width:'170px'}}, "City"), 
              React.DOM.th(null, "Email"), 
              React.DOM.th(null, " "), 
              React.DOM.th(null, " ")
            )
    );
  }
});

},{}],51:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //SideMenuListOption
  getInitialState: function() {
    return {count: '~'}
  },

  componentDidMount: function() {
    // make ajax request to get each requests 
    /*
    list = {
      '__type'    : 'Pointer',
      'objectId'  : this.props.list.objectId,
      'className' : 'ProspectList', 
    }

    parse_headers = {
      'X-Parse-Application-Id'  : 'N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ', 
      'X-Parse-REST-API-Key'    : 'VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb',
    }

    thiss = this;

    //console.log(this.props.list.name)
    $.ajax({
      url:'https://api.parse.com/1/classes/Prospects',
      type:'GET',
      headers:parse_headers,
      data: 'where={"lists":'+JSON.stringify(list)+'}&count=1',
      success: function(res) {
        thiss.setState({count: res.count})
      },
      error: function(err) {
        console.log(err)
      }
    })
    */
  },

  changeList: function() {
    this.props.changeList(this.props.list.name, this.props.list.objectId)
  },

  render: function() {
    listName = this.props.list.name
    propsCount = this.props.count
    count = (typeof(propsCount)== "undefined") ? this.state.count : propsCount

    //console.log(this.props.iconType)
    icon = ""
    if(this.props.iconType == "archive"){
      icon = React.DOM.i({className: "fa fa-archive"})
    } else if(this.props.iconType == "users"){
      icon = React.DOM.i({className: "fa fa-user"})
    } else if(this.props.iconType == "wifi"){
      icon = React.DOM.i({className: "fa fa-wifi"})
    } else if(this.props.iconType == "cloudDownload"){
      icon = React.DOM.i({className: "fa fa-cloud-download"})
    }


    countStyle = (this.props.hideCount) ? {'display':'none'} : {backgroundColor:'#999',float:'right',marginTop:'1px'}
    return (
      React.DOM.button({type: "button", 
              onClick: this.changeList, 
              className: "list-names btn btn-default"}, 
              icon, 
              " ", 
              listName, 
              React.DOM.span({style: countStyle, 
                className: "badge badge-default"}, this.props.list.count)
      )
    );
  }
});


},{}],52:[function(require,module,exports){
module.exports = function () {
  return {"0":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/8353a3fc05724cbe45e8c23b347a39e7_0994d458faff1d0b71f0f8e534299335a5765ba4a672ed817669729f6a0a1e9d","1":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/107fc2691bb8b3333ba78a18600fa561_9a832b2e27c2aa8ce6ed12c62fb665939e4de38f30ec9bebd92f813ea677f8c3","2":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4432a5df98c5ead32ca3ec898e175c90_f93ef0a7ddba9ac960c6a15941a69a124a5d5961fde34455cb7cee6c97f712ba","3":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/229580b716606a4eb2142b1eaaca10e7_2398d5050e191d15ff5cf9eb68cc683690c06d3949345dbf790394437a465c08","4":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/499d8a863d7872d6e239512124af9ddc_771182dc7b6c0801de6e571deed89b437ab122372b547e1f7d8dacae9cb17275","5":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a9e97a6445a8ac187561310b16b4bbd8_96ce9289fd8e6f2a6bf262b4baf548367ad7f53aac9a9ec1157020465de07e67","6":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/35af508daa4a580806961236bfb743a1_1a4afe2656f8d95e3717751f96a0c6ce6c5b1d25920f4d45e5cfe9bba05de0c8","7":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a1003503ef5e2254e6694eebbd2b4499_a8cd2caefe691476e3f02351369dc2c07c1a3d6ce0f87b187f58fdf4b20292c5","8":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/01dcb5278f55225b7e9c0cff6aa3d6e6_b40f92b9c5ef3b8c81d478bb70b7a094f076ed59b7d36d7a6401f0fd9d95eacf","9":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/61d79e3c25105099f73668c625ea361c_1d7c1255968258c03d0564e141284b4bddbd2db52091cf8d75cb384b23949390","10":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ca808450a6222c9b09d5b86924a08fbb_f90e02c1e981e5f6caf8af76fefef7653d0a451da51ba5a22ac0f265874bc6cb","11":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/97de93a99b8a9159dede2b9ff17c7887_3e90df8e7894c0c12963abf2fadb205e44365f58b537f15b677a4a7e9c557bcd","12":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9bf8404d673c9d6178f23548caa4c9a4_46606dba9df4d10cf282fa7add23e8a87b7f976d0e3a153fad0ff181e1be4e17","13":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/7f3a4754a634fc1e39090c5dd6c46808_42d3294b34c4ac9c6f99f66bc3ad9a195d20e98b09c7579fe341d0cf42f9c93f","14":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b4bebbfbfbe47e50f435b4c2efe0db0f_181a3119f12fd03b6bb517352c636508497bec61f9078b0e281515efd192b345","15":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ec1f6190e2b9a80a3f7cf101649ccc63_0026017f4380585a2e540f05936a6f58fe725fe7e8e0378aae98039628c4bdf2","16":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9dd921f41fa8d4ab29bcc1c45348b5a2_158df8a22c1f1570e8a2c17ab5e30169248030593665fbd8792f5f2f01516290","17":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b9786c9b56c94caa13e74d59b9a9da48_1f195fbcdf95c0d2618d571e0192ff1be2e4921d88aed8b7b9fd9e1444749271","18":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aa8577f878858f318858aced5abd037f_cb926a07d0e468660e3569279cc1354aa7243cdc951f970325273993c89e9ee7","19":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c11b322d8a8007037ee3e3242b260930_2a63c13b315a38b069f38da657b189aad6c7af5941a19859111dfb3c70c94b41","20":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/19b6c3989a808be845718d8af24352ff_a8e72abb2b5772706ac1c79e5cbaf59b3c2f20efb0aca9b93d04ae8a24920967","21":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/f4120970a686a56b4759585808177cc7_8e175e495b1de922ccd9a92a5de97b95433444aca422b3e632c2ea4ed48d3bc9","22":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aee7e40b2dd4c4c9961323d98249c826_c1c387c714e89d5dfccf06d3fe0fed332992eff877cdbd60bc4e94e7a2ed38ff","23":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/66d18bafff4f9b8d077c107bb73b2912_f8055289eae58fad00cc0f6727b2b5cf0f72b837963351b7ca6250ba4e2632a1","24":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2da8546c3b6a99b191249ae69207e31a_db86681331d0d2b9850e5596ce7711ac386f4e1469c526934267978af3498338","25":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/5617f7787cdf0176e54c4f13e9ccc54e_da7cc169f46585de72acf5f705cd34a52c688a40dc8aa72ea720d556a7022f72","26":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/f7e2712aa8cfab88c55d1f6c78ef2e45_5c895ca06f40e30369e07b19c64b7bf1fe5be0977e5bbfc0c2212b73ea6e6512","27":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/29ab72c2b97b25c4e3e1c280e3264f80_069b94caad3b14e2bb3b2012a51d94ed8e476f0a3d9a368aac36db9d716a12af","28":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ee17a7d90c8065a3abcd0a6720b52e66_3b9938c2693e142ba37065de24dabec556a192add4b84b4f29785cea3b74853f","29":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/16f61ebf1810ac333f7c936ce711b28a_35d43f3d1c762b21d629634b4584d0cd95aecdfd9a3087f24a9eb729d134b769","30":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/e318ccc5121cfeb3b99c21d055e6ece9_edc606d4bcd3d76f8e45da96d9dbd651bf0c067a7ca159e1073e3b44b03530c9","31":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/df9c90f2b93a9e488d94fe52725bd798_3b0e3396d9dea866960d8ce6f67af10c8809f154b6831fc278b8ed34390a9f27","32":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6eee357d121c814a97b6362c4e55526a_cbff4ac439c2054813dea8da8b8f1ec3b5e0c644acf0dc2ae625741e97f0bea0","33":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/560aed1bee8e220f0980190dedb7add6_9ad2de7c6ebfdd724f2a17c85efd5192f8393a477dddf0a0c8c9260e17d5a515","34":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/850f1242ddd6539ad8b27f69908c7f9e_08ffecd2b6d184e7d70ab70abbbbabe7132269250c93dbbdcba7f22e86f0692e","35":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/075c06c481eea429f6cc816697fcbbf8_c55b99be050bdcb1f32c9578cb8e17f6f4d6f200c1f37f528c24fee65a26182a","36":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/028b3110aa60554e7434f1a2473229cf_d15e1c7f00c82755e144773d46bb4e0e964fcfa425a254ca05ac1313fcea3bae","37":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c3719f85d24bafef64eada64e735ca73_025880c51ff42bd3ff79ba35d456d8cb14b6fbc7ee17ba3b98612e71aa1d74b9","38":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/22356ab6ae4467c44a074a4134bad937_a9909c37e6e23b4343ce19582c9118cfb3748b8977f1db8230aa992d640f1217","39":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2132e5a2fcd89a54e7c42c5fa0b8ef77_ff0dc46511b150a4b0af9cdf866af2e06ce898d7119b7ab21350e0b3304d8065","40":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/45aaa73b693aeec414b34fd44262ef8f_51c22532abe0b615f0e6e3c0e91cb1a9bca41a6f6c0ec6f33c3693d128fd1755","41":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/57bc2d1a2ab692e38284f3550f58b381_03bd441172001e3c2e5084f3390ee0ca0327b502b0c1dc794c8c8ac2b3d2130e","42":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4745ad07807ccad97e0726fc7ba18170_48911a727474c0398c3fc701880d623faedc592f16677310f8e8111a25e2be37","43":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cd1594c62a31c831d124e286b6909700_0cd9d060392c5f5d575f29a8930c55c69a54501c1d7636929682c38e4e069d5e","44":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f3db7712313a3bcfe5ff4a99b67fcdf_a66bec0a43179531bce8020aaade3d85967b7c9df54ab2bdf41f12f6cd60d3ef","45":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2643e008752dbffd17cd7e4cea30bb08_867fd9b76c5342b914bd9b285756ac10cf04e1b3ad8cb6524a2c96d7ab75c07a","46":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d89fd2959f9efdcf70778801253a4920_97a906684f843e8ea3f3237797adc601c4d20dfcc79e7b6e756630206312fe89","47":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d0b7922821c73bb34357b9a7bbf2267c_d63a4e4655665268ea92da08063c95f309646f9698125b318b0621487b906ca4","48":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b76f8da9538eea9eb4d897656f4aed8b_f49ffb97513493d056f42fe316650f1fb507fc1ebe7a04ad8454fd2b58c50ea7","49":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/190285c653fe1d18db3257eeaf4be43b_60aac5615b8c09ff3cfc840eafbb0208a8dc4824d942df10637ed1dc43198896","50":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/bdee1144909768544fb2165d5e053e65_01eeb0b68fbe038b33bd0d952ce60590b2ff52c32da32bceee518652a89e8140","51":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/67f3816ffae3f72be42a7853607ff545_9b77f7ee9ed399fe77664a0c6cded309a14187ed325b7dace9b74f58d384fa70","52":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4314b6591ccecaa3eb265e4e890021f5_135f42ac525c7160c6680d99d08463cca4f4f86b4a0a11252b26c57f7f6552e2","53":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dc2498a2210f5c8dfc938909670ba68f_bb4edb324aeb76f4809d2f2ffef036815497400fd276f836d923e7e0999c3552","54":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/8ea2f8aecb65bcc3cec691be061822a6_c9e8cc4ff670def26a2014b4658f561bb39af755727ab31a04b66c703faa6bfc","55":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cc6220508d6b50993e8cb49e6c072a3a_266d57d40828595dcf9964076955242cbc6d9cdc78bbc323ba39f0883c05fda8","56":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6d200ee39f4096f49b523d98d8536b03_0e0d1927f658b14ff35a24c9d8fc693190c9f739a6d14b3638a69e901b1a494c","57":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/deaf0d4d4431d6bb2dcc6bda12575dc8_786be7e8e3573170e142d1c3974f18d6d69d4c4dd3ca06593467f2f53f831895","58":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ebf339b29639355c01a7e1d0c9055ba3_0c2c6354af58c71eee179f772b8f9c9556111c042eddec488642205fce901f6a","59":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/adf758a8dc032239d05c2bf30a4a0edf_1de695275aaf84c5d9624872efacc21f2bb35d76907c032789f0a8a91007a751","60":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/fcfd73b6e3eb5a9e249b379a6f559fc7_7f12feeefb777c52da2c175bfc33dd19db40749b388af435f4a68c0f06b4f9ad","61":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3c82d08bca770099bb1fcdbda21484ea_4b1b1a31571711440446327a37327cf86685307f7dd58ad26a5b564b384d54c9","62":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/da085ddf61fabfc523a6d5bc22ea305b_f198dc476413ae524e230ebcd428f4649509a64794bb12dfde0d8fc2d9cf8782","63":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/510c57ac818d053701321d16cfed8b3e_74210d99aa6597b227fe521b0c7e128b66510da6b2cfbd67f4d0d0f8be7a1c12","64":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/40122334960a5954255cca87d01ba5ae_1d6fa7ab07a15df79e4c61cec5a369e6e7dcc7e57ebfd52fd937630e056dbf32","65":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/281bc010da64604545531ca4074eda2e_91c47782e1e7e19e58d3d5da9e43c1c53505a145de4adcd22931721f951edced","66":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f0306ac15f2a11707fb6637b64ab5bc_bbf75d7a31aff638916b154d263b2fa1af9f3f53ef3124e5d470289b1b4dc5c4","67":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/99147b426f02ea63f52d7b9096bfba95_2af91854e89a8214667222ea871d98eb8c1ccaf4969ec129356be0fce2eeca51","68":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ecebb17e5ca23da7f420fa357472bf3e_9dcc92e6966d688c956e1e6a0abf42499687f9e82b82a2499d56bb93a59b2bd8","69":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aa968d512815321b5c74af48f3d53c3d_74f7b92a66f45f8e050a46f94cb675db7fc257acefed7ced6fe85a82caa93139","70":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2451efa39cb6ee7576b41e14b907925a_f48ec903ab22812a385743625e972e76773bdbd3e323c73689f27eccaa9d90bc","71":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6eca5c460748018fe91f919d35f1de02_2116d7e9c833021c7fb58237db1e8abd3e37a32f652e5449feb94cd287ca63cd","72":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d233d65df2a27b4e6c177ab37f726c33_cea7dbcb7770a9798a49fce3a8d55689c6b79ad710e8f3aa0121bcabd9b0176b","73":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/0632159435e67bdd2a5ffd68471361f0_b7711b96d49bfe07ba4c6a9700618c69425c667999209ccbd7575925805b0b5b","74":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f6edebd5597bae7da63e7ad86214ccd_0bcc5ee18a9539043524fdad5d9cbdb527514143e755a1a05169e05e06c37941","75":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/31874c12d9df2dfd89cb6a446bdc4042_611644e0e6bd66f29270be999af5d4aee37a5898d93dd41c46dee111f4e63fa3","76":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95bad31c8127deef8aef7a8c0d96285f_05b558b86db9ed61bdb134e7e32e56ddea960d18067c4d44cb7b207ceb592e5b","77":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/e1a21b6a465ba8c05aec97fa7568efb5_888ab8ab424a32a58b00808ca2f716b903993a7d076b4925c52117a2467ff04b","78":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d8c25b3ed91a8fc91f93ac56377c9dcc_72afd96cb39f5d07ea286361edb264627d1f234e871ce48371dca57bc44c7a82","79":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95b193e0db0f8965de5c70a5b96bb071_4b587a38a5b3b5f2eb6ad37d745531e723edc07e38eb6d4cfec3a9386f65b1e8","80":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/90b3da7e62bbd996b722975a3230f0f3_b3e89ebe3a0f9d1a6508771e1108627885b5df79377b291413a35284cc506f5e","81":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3242156353c906577e9ea40f92139719_76cb67bcb821ef4a83b4796832b15d3ab4402627534de36c3ff592ba0e0cacb0","82":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a4beb634fb972ef9caefecf47527e345_a18d6851882d03d4370fa12c866fcd91caa907b0cd2263a722378c399fb592b5","83":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/0447cd25e4515569c3b613bc4bd88a05_c3656ddbbf5dfc84e44c3616cfad41267c8d730e00db5918ccc77573fac07d49","84":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1e01a4ecbeb9ca46a63b745c6a2e462d_3ebbbab14df0e2db43a2948c0298ad67ded53029efe9aba6bd40b3fd99d5aa18","85":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/559c502aea7aab4a11e121743c9d7c43_69caccfee49f747e72a4768ad4274c8b6875848e9ab7b2c8517e209d36bdfb32","86":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b27a3afa95d849b7375a304769bd3bf3_acada7bbca2083ce55ab119e88666ca0ae10a4aac448ad5d7f45edf0077897a1","87":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/de24ae6e6b531bad57c37bffcac1954d_2c15f3da3593c9526078bb80bc7faa66ec081b1ccaea231b5c259bdb827f6fd8","88":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/7375a308c764e405f92ab9d943942949_6b7b392f5694abcfbb70daf458c22369db2f9b890583e3e2d713b046cd84ec89","89":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a1fc8b4cb5e89f1dc3ed74ec8bafc3a5_4d0efc716f3f2cb7bda689e5daa7ba5d954ee54a8f94f7755b303043970b1d99","90":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c4f7d2b628c661d1baad6ff1f4722da8_149e2b6f3ad488d10fce67144ccee6b66519d9d7f8482a1ff0c9ae627f1ddbca","91":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/09459647f3928e77752449f418a85c27_7a704f8cfaea62a1953dfd1e345eb6e3aee02114189f186f0181bff3a7e77fe6","92":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/655a7db862ccdfa162b6ea0dffa3ef1e_6eb133e705878e640a427b664656189f1ea9330285133e4a73a943a097606da6","93":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/434d82b430279d26bcdd9bd13ddec76f_5cbad7d7eb6740debc9e2e3c1b7197f861b705e6e74379307a5bc900d75250f5","94":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/142e64b0535a2b0c3bb5253c0d2266a9_6c7403cda6f8dc61eb9d2b32d37f608c34c641101d6a2f35c073907898a7e4ae","95":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3f8790f1134f0514af3d2bbc05209060_6377e5dcdf0d232f1aa8139022b8c9280f8b4297f70efff3e0f7d52417c1eb23","96":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/220a705290eb7adbcdf052ddb2d11c99_06374d8546d5c745671d98686f1b4b0dd31d777b1c7bcdd0e6dfe63d0a23e719","97":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/51249bb6f506e42e17bf9241ef88b6b2_c1221205f854390df1d21aa05e5d0de264b1b953c659a10c18478cfd7f755efd","98":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/284c00b5ff1189d2bddf67df408edc4e_01c1917a244fcadf0bfd3933af21c684dd90ca274111248212025361d855ab39","99":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/37483ffe36725e05af0954a5d9a55a26_daf0a2f0e10c98c2b72be9c0da24b38322f0f956733a42565365ee615568ba07","100":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c6b03531fed44f96acecab26828fbe37_30393b6fa3096a74bfa51cad1cb58f7660848263f01f2f7d2e12dae3a5b1c3ed","101":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/5dc9345ee6092ca006f777b42b34e853_df13ad7c61407d1a00e261fcd5fcd93c16e1a0c1be13d0903d76a21a89cd3459","102":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1dbef9840938d5e30563c3f844b9ebac_12fe10df66a6ee48bffe72578a6f42d340ff0b4f75d4fe65f6bed2b75841e978","103":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c3af292a916339e6c57ba0d03712a445_273c38be422269a46466d48494c513daf53b3a66440b6401c94c37f1e55070c2","104":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b44ded0b090097528af2c4ad694c2a40_3f5ed56c662da89e1e0f3ae62a67f9e14ea2384f2985277b1cdfa6ebfe1d18c9","105":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/df8ea86906de307c52cb9cf3b2228043_312bdbd9536ec36e42d8328def8af1afcaaf3f705917a628ea4add00ba77b8b5","106":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6846f61d6bfcf77aecd7206c6adb5be9_64e149247e52e86b671fdd2b71ac27852d54ae6eb6f4059458bdb1161f300dac","107":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ef4a1765911453dcae8e4bdd5d3203a1_321cf3bc8710a6a19576dfe93677def4666da0b4744489c26aa44f75a753333e","108":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dc381f9e0b6193e8be5d94595ed1c4b7_d612afde7baf43ac5daeae9e0efe42781867bc3451e3e8814253cbfc4410bb4a","109":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9579d5dd8523c493e0590e3881e25041_106c39b7e97fdd57abb992ec7ff7c0f0b15f0f83a348e3a3698e3fcbdcdf2836","110":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95cfda0cb7bfaac0fc789cf05c7e513e_a509049aea02886eb409c53a15e03a6cf5eb6583120267bbca75c2206027c0b1","111":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6e05daaab9a81a2ea5348b70833bdfb6_023eb1e947686aef7764a3ce4c9683b47d2235c51a031e36b947e4398ef6906d","112":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d29d4fcb1b25a9d424a12800869a3b65_991d563880a3345073ebb4cc3cd57778ef5cfbc3ae625cefec2ffc3b690a5aa5","113":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/983764cb5075eedbd96ec034df1374a1_a94f5a1f0c9b45b9082044ebe72774b0313a58e5a2f58d00a63827ad7d48bb62","114":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9abafed7a919fe54046abe458a6b3140_4003c5226083b7beb7b5901c79027e3833be0aec78da9aa3fc05f0293f5bb43e","115":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4268a231e34c78a807bd51c7d5e1064e_a9049cfd9cbbb250474c1364710dcd276e1896297b2dee37b6ffad96a882bda9","116":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b80be54bf0fbb43ebd8a20dca4d8f6f0_544d5a34e1d959e4e7794c58503b3478de33eb4ef21e8b74839b950adda7dedd","117":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4ce28371de65a22a241dee28128dda4d_0daec6dffe6bd726f3031d51a39728c4f88f48482ebbae6c05f758ca24dd0890","118":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c55284b8098cbaa9a1db08cbdf46bae8_6baa7acefb038acbb2fedbfdce556766c48349c5d13374347a26bd83e2acf283","119":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dd77cf42f690e808bb9d8131b7cec48b_0b3713716d1127b36eb335737778cca3d4b7b476a99a571a11dc118e71463d2b","120":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c657e3f25ab9ae85a99e421231a6c6a8_06deb81cfec70dbd14da6bb6471b8ee4bcc142ee08b60714af9f91683b461e6a","121":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cd4fc426707d63e4d9b8bc9205dea3fc_cb648ffe70ec0942be80f294a1a07c5e64958570265b70cfd84da78072877fe7"}
}

},{}],53:[function(require,module,exports){
/* mousetrap v1.4.6 craig.is/killing/mice */
(function(J,r,f){function s(a,b,d){a.addEventListener?a.addEventListener(b,d,!1):a.attachEvent("on"+b,d)}function A(a){if("keypress"==a.type){var b=String.fromCharCode(a.which);a.shiftKey||(b=b.toLowerCase());return b}return h[a.which]?h[a.which]:B[a.which]?B[a.which]:String.fromCharCode(a.which).toLowerCase()}function t(a){a=a||{};var b=!1,d;for(d in n)a[d]?b=!0:n[d]=0;b||(u=!1)}function C(a,b,d,c,e,v){var g,k,f=[],h=d.type;if(!l[a])return[];"keyup"==h&&w(a)&&(b=[a]);for(g=0;g<l[a].length;++g)if(k=
l[a][g],!(!c&&k.seq&&n[k.seq]!=k.level||h!=k.action||("keypress"!=h||d.metaKey||d.ctrlKey)&&b.sort().join(",")!==k.modifiers.sort().join(","))){var m=c&&k.seq==c&&k.level==v;(!c&&k.combo==e||m)&&l[a].splice(g,1);f.push(k)}return f}function K(a){var b=[];a.shiftKey&&b.push("shift");a.altKey&&b.push("alt");a.ctrlKey&&b.push("ctrl");a.metaKey&&b.push("meta");return b}function x(a,b,d,c){m.stopCallback(b,b.target||b.srcElement,d,c)||!1!==a(b,d)||(b.preventDefault?b.preventDefault():b.returnValue=!1,b.stopPropagation?
b.stopPropagation():b.cancelBubble=!0)}function y(a){"number"!==typeof a.which&&(a.which=a.keyCode);var b=A(a);b&&("keyup"==a.type&&z===b?z=!1:m.handleKey(b,K(a),a))}function w(a){return"shift"==a||"ctrl"==a||"alt"==a||"meta"==a}function L(a,b,d,c){function e(b){return function(){u=b;++n[a];clearTimeout(D);D=setTimeout(t,1E3)}}function v(b){x(d,b,a);"keyup"!==c&&(z=A(b));setTimeout(t,10)}for(var g=n[a]=0;g<b.length;++g){var f=g+1===b.length?v:e(c||E(b[g+1]).action);F(b[g],f,c,a,g)}}function E(a,b){var d,
c,e,f=[];d="+"===a?["+"]:a.split("+");for(e=0;e<d.length;++e)c=d[e],G[c]&&(c=G[c]),b&&"keypress"!=b&&H[c]&&(c=H[c],f.push("shift")),w(c)&&f.push(c);d=c;e=b;if(!e){if(!p){p={};for(var g in h)95<g&&112>g||h.hasOwnProperty(g)&&(p[h[g]]=g)}e=p[d]?"keydown":"keypress"}"keypress"==e&&f.length&&(e="keydown");return{key:c,modifiers:f,action:e}}function F(a,b,d,c,e){q[a+":"+d]=b;a=a.replace(/\s+/g," ");var f=a.split(" ");1<f.length?L(a,f,b,d):(d=E(a,d),l[d.key]=l[d.key]||[],C(d.key,d.modifiers,{type:d.action},
c,a,e),l[d.key][c?"unshift":"push"]({callback:b,modifiers:d.modifiers,action:d.action,seq:c,level:e,combo:a}))}var h={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},B={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},H={"~":"`","!":"1",
"@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},G={option:"alt",command:"meta","return":"enter",escape:"esc",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},p,l={},q={},n={},D,z=!1,I=!1,u=!1;for(f=1;20>f;++f)h[111+f]="f"+f;for(f=0;9>=f;++f)h[f+96]=f;s(r,"keypress",y);s(r,"keydown",y);s(r,"keyup",y);var m={bind:function(a,b,d){a=a instanceof Array?a:[a];for(var c=0;c<a.length;++c)F(a[c],b,d);return this},
unbind:function(a,b){return m.bind(a,function(){},b)},trigger:function(a,b){if(q[a+":"+b])q[a+":"+b]({},a);return this},reset:function(){l={};q={};return this},stopCallback:function(a,b){return-1<(" "+b.className+" ").indexOf(" mousetrap ")?!1:"INPUT"==b.tagName||"SELECT"==b.tagName||"TEXTAREA"==b.tagName||b.isContentEditable},handleKey:function(a,b,d){var c=C(a,b,d),e;b={};var f=0,g=!1;for(e=0;e<c.length;++e)c[e].seq&&(f=Math.max(f,c[e].level));for(e=0;e<c.length;++e)c[e].seq?c[e].level==f&&(g=!0,
b[c[e].seq]=1,x(c[e].callback,d,c[e].combo,c[e].seq)):g||x(c[e].callback,d,c[e].combo);c="keypress"==d.type&&I;d.type!=u||w(a)||c||t(b);I=g&&"keydown"==d.type}};J.Mousetrap=m;"function"===typeof define&&define.amd&&define(m)})(window,document);

},{}]},{},[2])
//# sourceMappingURL=data:application/json;base64,
