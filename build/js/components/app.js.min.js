(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
   //Analytics
  render: function () {
    return (
      React.DOM.div({style: {height:'400px'}, className: ""}, 
        React.DOM.div({className: "container", style: {width:'100%',padding:'0',height:'100%'}}, 
          AnalyticsSideMenu(null), 
          React.DOM.div({className: "col-md-3", style: {padding:'0'}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th(null, "Stat"), 
                React.DOM.th(null, "#")
              ), 
              React.DOM.tbody(null, 
                React.DOM.tr(null, React.DOM.td(null, "# of People Prospected"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Companies Prospected"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Sent"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Delivered"), React.DOM.td(null, "lil")), 
                React.DOM.tr(null, React.DOM.td(null, "# of Emails Delivery Failures"), React.DOM.td(null, "lil"))
              )
            )
          )
        )
      )
    );
  }
});

var AnalyticsSideMenu = React.createClass({displayName: 'AnalyticsSideMenu',
  render: function() {
    return (
      React.DOM.div({className: "col-md-2", style: {padding:'0',height:'100%',backgroundColor:'rgb(90, 107, 119)',borderBottomLeftRadius:'3px'}}, 
        React.DOM.div({className: "btn-group-vertical", style: {width:'100%'}}, 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-search"}), "   Prospecting Overview"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-paper-plane"}), "   Email Outreach"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-user"}), "   Team Stats"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-cloud"}), "   CRM Integration"
          ), 
          React.DOM.button({type: "button", className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-circle-o"}), "   Sales Cycle"
          )
        )
      )
    );
  }
});

},{}]},{},[1])


},{}],2:[function(require,module,exports){
/** @jsx React.DOM */

/* TODO
 * 
 * - All count change, when prospect is archived
 * - When is list is chaanged from all and then returned to All prospects take a long     time to load
 * - Fix pagination issues
 *
 * - Parallelize Workers
 * - Scale up google scrape to hundreds of workers (heroku)
 *
 * - Company Shortcuts 
 * - Add ability to switch accounts for admins
 * - Add email uneditable email fields
 */

var Prospects = require('./prospects.js.min.js');
var DataTable = require('./prospects.js.min.js');
var MiningJob = require('./mining_job.js.min.js');
var Campaigns = require('./email.js.min.js');
var Analytics = require('./analytics.js.min.js');
var SignUp = require('./signup.js.min.js');
var Login = require('./login.js.min.js');
var LandingPage = require('./landing_page.js.min.js');
var LandingPage = require('./landing_page_concept.js.min.js');
var FreeTrial = require('./free_trial.js.min.js');
var Pricing = require('./pricing.js.min.js');
var Signals = require('./signals.js.min.js');
var MouseTrap = require('../lib/mousetrap.min.min.js')
var Headhesive = require('../lib/headhesive.min.js')
var UpgradePlanModal = require('./upgrade_plan_modal.js.min.js')
var LandingPageFeatures = require('./landing_page_features.js.min.js')
var LandingPageServices = require('./landing_page_services.js.min.js')
//var checkAuth = require('./auth.min.js')

var Home = React.createClass({displayName: 'Home',
  getInitialState: function() {
    // num_of_pages
    console.log(this.props)
    return {prospects: [] , 
            currentPage: 1, 
            pages: 1, 
            count:"~", 
            prospectType:'Prospect', 
            //selectedScreen:'Prospects'}
            currentUser: JSON.parse(localStorage.currentUser),
            selectedScreen: this.props.selectedScreen}
  },

  componentDidUpdate: function() {
    currentUser = JSON.parse(localStorage.currentUser)
    days = moment().diff(moment(currentUser.createdAt),'days')
    if(days > 14 && currentUser.accountType == 'trial') {
      $('#upgradePlanModal').modal( {
        backdrop: 'static',
        keyboard: false
      })
    }
  },

  componentWillMount: function(){
    //console.debug('WILL MOUNT')
    checkAuth()
    var thiss = this;
    //console.debug(this.state.currentUser)
    $.ajax({
      url:'https://api.parse.com/1/classes/_User/'+thiss.state.currentUser.objectId,
      headers: appConfig.headers,
      success: function(res) {
        //console.debug('LOL')
        // Number of Prospects for user
        // Number of Lists
        // Number of Emails found
        localStorage.currentUser = JSON.stringify(res)
        console.log(res)
        Intercom('boot', {
          app_id: 'd37c2de5ffe27d69b877645351490517333437bf',
          email: res.email,
          created_at: 1234567890,
          name: 'John Doe',
          user_id: 'lol'
        });
      },
      error: function(err) {
        console.debug('error')
      }
    });
    // Intercom
    // Mixpanel
  },


  toggleScreen: function(e) {
    e.preventDefault()
    this.setState({selectedScreen : $(e.target).text().trim()})
  },

  logout: function() {
    localStorage.clear()
    location.href = "#get_started"
  },

  listDropdown: function() {
    console.log('dropdown')
    //$('.dropdown-menu').dropdown()
    $('.prospect-list-select').css('border-bottom-right-radius','0px')
    $('.prospect-list-select').css('border-bottom-left-radius','0px')
      
    $('.list-select-dropdown').css('border-top-left-radius','0px')
    $('.list-select-dropdown').css('border-top-right-radius','0px')
  },

  selectChange : function() {

  },

  stripeCheckout: function() {
    /*
    handler.open({
      name: 'Customero',
      description: 'Get 900 free email credits!',
      amount: 0,
      panelLabel: "Start Your Free Trial!",
      opened: function() {

      },
      closed: function() {
        console.log("closed")
        //location.reload()
      }
    });
    */
  },

  componentDidMount: function() {
    // Credit Card Verified Check
    localStorage.selectedProspects = "[]"
    currentUser = JSON.parse(localStorage.currentUser)
    if(!currentUser.creditCardVerified)
      this.stripeCheckout()
    //console.debug('DID MOUNT')
    currentUser = JSON.parse(localStorage.currentUser)
    days = moment().diff(moment(currentUser.createdAt),'days')
    if(days > 14 && currentUser.accountType == 'trial') {
      $('#upgradePlanModal').modal( {
        backdrop: 'static',
        keyboard: false
      })
    }
  },

  render: function() {
    //console.debug('APP RENDER')
    prospects = "choose btn btn-primary "
    companyProspects = "choose btn btn-primary "
    campaigns = "choose btn btn-primary "
    signals = "choose btn btn-primary "

    switch (this.state.selectedScreen) {
      case 'Prospects':
        currentScreen = Prospects({listClassName: 'ProspectList', 
                                   className: 'Prospect'}
                                   )
        //currentScreen = <Prospects><ProspectRow /></Prospects>
        prospects = "choose btn btn-primary app-active"
        location.href= "#prospects"
        break;
      case 'Companies':
        currentScreen = Prospects({listClassName: 'CompanyProspectList', 
                                   className: 'CompanyProspect'}
                        )
                                    // paginationLimit
                                    // Add Lists
                                    // Adding Customizable Rows
                                    // Make Editable For NoSQL DataBases
        location.href= "#companies"
        companyProspects = "choose btn btn-primary app-active"
        break;
      case 'Mining Jobs':
        currentScreen = MiningJob(null)
        break;
      case 'Analytics':
        currentScreen = Analytics(null)
        break;
      case 'Campaigns':
        currentScreen = Campaigns(null)
        campaigns = "choose btn btn-primary app-active"
        location.href= "#campaigns"
        break;
      case 'Signals':
        currentScreen = Signals(null)
        signals = "choose btn btn-primary app-active"
        location.href= "#signals"
        break;
      case 'Strategies':
        currentScreen = Signals(null)
        signals = "choose btn btn-primary app-active"
        location.href= "#strategies"
        break;
      case 'Settings':
        currentScreen = Settings(null)
        break;
    }

    if(this.state.currentUser.accountType != "Staff"){
      signals = "dissappear"
      campaigns = "dissappear"
      if(companyProspects == "choose btn btn-primary app-active") {
        companyProspects = "choose btn btn-primary app-active right-btn-rounded"
      } else {
        companyProspects = "choose btn btn-primary right-btn-rounded"
      }
      if(prospects == "choose btn btn-primary app-active") {
        prospects = "choose btn btn-primary app-active left-btn-rounded"
      } else {
        prospects = "choose btn btn-primary left-btn-rounded"
      }
    }
      
    currentUser = JSON.parse(localStorage.currentUser)
    daysLeft = moment().diff(moment(currentUser.createdAt),'days')
    daysLeft = (daysLeft > 14) ? "" : (14 - daysLeft)+" days left. "

    if(currentUser.accountType != "trial")
      upgradeBtn = React.DOM.a({href: "javascript:", 
            style: {marginTop:0, marginRight:10,
                    backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)' , backgroundImage: 'linear-gradient(#8add6d, #60b044)'}, 
            className: "btn btn-success btn-xs", 
            onClick: this.upgradePlanModal}, 
            daysLeft+"Upgrade Today!"
          )
    else
      upgradeBtn = ""
    return (
      React.DOM.div(null, 
      React.DOM.br(null), 
      React.DOM.br(null), 
      React.DOM.div({className: "container"}, 
        React.DOM.h1({style: {fontWeight:'bold',display:'inline',fontWeight:'100',color:'#1ca3fd'}}, 
          React.DOM.img({src: "build/img/network.png", 
            style: { height:32,
              marginRight:5, }}
          ), 
          React.DOM.span({style: {fontWeight:'bold',fontSize:32,fontFamily:'Proxima-Nova'}}, "Customero",  
            React.DOM.h6({className: "beta-label"}, "BETA")
          ), 

          upgradeBtn
        ), 
      React.DOM.span({style: {float:'right',display:'none'}}, 
        React.DOM.img({src: "build/img/user.png", style: {height:'40px',width:'40px',padding:'2px',marginTop:'5px',borderRadius:'23px',display:'inline'}, className: "thumbnail"}), "   ",  
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline'}}, "Welcome ")
      ), 
      React.DOM.span({style: {float:'right', marginRight:'0px'}}, 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'none',marginRight:'10px'}}, React.DOM.a({href: "#pricing", style: {color:'#1ca3fd'}}, "Pricing")), 
          React.DOM.a({href: "javascript:", 
            style: {marginTop:15, float:'right',marginRight:10,
                    backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)' , backgroundImage: 'linear-gradient(#8add6d, #60b044)'}, 
            className: "btn btn-success btn-xs", 
            onClick: this.downloadSocialProspecter}, 
            React.DOM.i({className: "fa fa-download"}), "  " + ' ' +
            "Download Chrome Social Prospecter"
          ), 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:10}}, React.DOM.a({href: "javascript:", onClick: this.logout, style: {color:'#1ca3fd'}}, 
            React.DOM.i({className: "fa fa-sign-out"}), 
            "Logout")), 
          React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:'10px'}}, " ", React.DOM.a({href: "http://resources.customerohq.com/v1.0/discuss", style: {color:'#1ca3fd'}}, 

              React.DOM.i({className: "fa fa-question-circle"}), 
              React.DOM.span({style: {paddingLeft:2}}, 'Support')
        ), " "), 
        React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:'10px'}}, 
          React.DOM.a({href: "http://resources.customerohq.com/v1.0/docs", style: {color:'#1ca3fd'}}, 
              React.DOM.i({className: "fa fa-book"}), 
              React.DOM.span({style: {paddingLeft:2}}, "Resources")
          ), " "), 
          React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:'20px',display:'none'}}, 
            React.DOM.a({href: "javascript:", style: {color:'#1ca3fd'}}, 
              React.DOM.i({className: "fa fa-bell"}), 
              React.DOM.span({style: {paddingLeft:2}}, "Notifications "), 
              React.DOM.div({className: "label notification-badge"}, "0")
          )), 
          React.DOM.h6({style: {marginTop:'20px',float:'right',display:'inline', marginRight:'20px',display:'none'}}, 
            React.DOM.a({href: "javascript:", style: {color:'#1ca3fd'}}, 
              React.DOM.i({className: "fa fa-cloud-download"}), 
              React.DOM.span({style: {paddingLeft:2}}, "Mining Jobs "), 
              React.DOM.div({className: "label notification-badge"}, "0")
          ))

      ), 
      React.DOM.br(null), 
      React.DOM.br(null), 
        React.DOM.div({className: "panel panel-default"}, 
        React.DOM.div({id: "navbar", className: "panel-heading"}, 

          React.DOM.div({className: "btn-group col-md-offset-4"}, 
            React.DOM.a({href: "javascript:", className: signals, style: {display:'block'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-line-chart"}), " Strategies"
            ), 
            React.DOM.a({href: "javascript:", className: prospects, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-user"}), " Prospects"
            ), 
            React.DOM.a({href: "javascript:", className: "choose btn btn-primary", style: {display:'none'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-bar-chart-o"}), " Analytics"
            ), 
            React.DOM.a({href: "javascript:", className: "choose btn btn-primary", 
                  style: {width:162,display:'none'}, 
                  onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-tasks"}), " Mining Jobs  ", 
                React.DOM.span({className: "label label-default"}, "BETA")
            ), 
            React.DOM.a({href: "javascript:", className: companyProspects, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-building"}), " Companies"
            ), 
            React.DOM.a({href: "javascript:", className: campaigns, style: {display:'block'}, onClick: this.toggleScreen}, 
                React.DOM.i({className: "fa fa-envelope"}), " Campaigns"
            )
          )
        ), 

          currentScreen

        )
      ), 
      UpgradePlanModal(null)
      )
    );
  },

  upgradePlanModal: function() {
    $('#upgradePlanModal').modal()
  },
  
  downloadSocialProspecter: function() {
    window.open('https://chrome.google.com/webstore/detail/customero-prospecter/ofcalkjbogaiipekcocdefjenclioeci')
  },

  deleteProspect: function(objectId, endpoint) {
    var filtered = _.filter(this.state.prospects, function(item) {
       return item.objectId != objectId
    });
    this.setState({prospects: filtered})

    $.ajax({
      url:'https://api.parse.com/1/classes/'+endpoint+'/'+objectId,
      type:'DELETE',
      headers: parse_headers,
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
      }
    });
  }
});

var Workspace = Backbone.Router.extend({
  routes: {
    //landing_page
    "product/features"    : "features",
    "services"            : "services",
    
    // App
    ""            : "prospects",
    "get_started" : "landing_page",
    "free_trial"  : "free_trial",
    "signup"      : "signup",
    "login"       : "login",
    "pricing"     : "pricing",
    
    "signals"     : "signals",
    "strategies"  : "strategies",
    "prospects"   : "prospects",
    "companies"   : "companies",
    "campaigns"   : "campaigns",

    "prospects/p:page"       : "prospects",
    "prospects/list/:list"   : "prospects_list",

    "companies/p:page"       : "companies",
    "companies/list/:list"   : "companies_list",

    "signals/profile/:profile"  : "signals_profile",
    "signals/calendar/:profile" : "signals_calendar",

    "campaigns/followup_feed"      : "campaigns",
    "campaigns/sent_emails"         : "campaigns",
    "campaigns/template/:template" : "campaigns",
  },

  mainRoute: function(route) {
    console.log(route)
    currentUser = localStorage.getItem('currentUser')
    $('#content').html('')
    if (currentUser) 
      React.renderComponent(Home({selectedScreen: route}), 
                            document.getElementById('content'));
    else
      location.href = "#get_started"
  },

  signals  : function() { this.mainRoute('Signals') },
  strategies  : function() { this.mainRoute('Strategies') },
  prospects: function() { this.mainRoute('Prospects') },
  companies: function() { this.mainRoute('Companies') },
  campaigns: function() { this.mainRoute('Campaigns') },

  home: function() {
    currentUser = localStorage.getItem('currentUser')
    if (currentUser) 
      React.renderComponent(Home({selectedScreen: "Prospects"}), 
                            document.getElementById('content'));
    else
      location.href = "#get_started"
  },
  landing_page: function() {
    React.renderComponent(LandingPage(), document.getElementById('content'));
  },
  features: function() {
    React.renderComponent(LandingPageFeatures(), document.getElementById('content'));
  },
  services: function() {
    React.renderComponent(LandingPageServices(), document.getElementById('content'));
  },
  free_trial: function() {
    React.renderComponent(FreeTrial(), document.getElementById('content'));
  },
  signup: function() {
    React.renderComponent(SignUp(), document.getElementById('content'));
  },
  login: function() {
    React.renderComponent(Login(), document.getElementById('content'));
  },
  pricing: function() {
    React.renderComponent(Pricing(), document.getElementById('content'));
  }
});

$(document).ready(function(){
  checkAuth()
  var workspace = new Workspace;
  Backbone.history.start();
  // Add to linkedin
  // Add To Base
});

},{"../lib/headhesive.min.js":68,"../lib/mousetrap.min.min.js":69,"./analytics.js.min.js":1,"./email.js.min.js":23,"./free_trial.js.min.js":26,"./landing_page.js.min.js":28,"./landing_page_concept.js.min.js":29,"./landing_page_features.js.min.js":30,"./landing_page_services.js.min.js":31,"./login.js.min.js":33,"./mining_job.js.min.js":36,"./pricing.js.min.js":42,"./prospects.js.min.js":43,"./signals.js.min.js":55,"./signup.js.min.js":56,"./upgrade_plan_modal.js.min.js":63}],3:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // FollowupFeed
  getInitialState: function() {
    return {
      activities: []
    }
  },

  componentDidMount: function() {
    var thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/EmailEvent',
      data: {include: 'prospect,sent_email', order:'-createdAt', limit:1000},
      headers: appConfig.headers,
      success: function(res) { 
        console.log(res.results)
        thiss.setState({activities: res.results}) 
      },
      error: function() {}
    })
  },

  render: function() {
    activities = _.map(this.state.activities, function(activity) {
      return EmailActivities({activity: activity})
    })

    return (
      React.DOM.div({style: {overflow:'auto',height:417}}, 
        React.DOM.table({className: "table", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Sent "), 
            React.DOM.th(null, "Prospect "), 
            React.DOM.th(null, "Email "), 
            React.DOM.th(null, "Events "), 
            React.DOM.th({style: {textAlign:'center'}}, "Action Buttons"), 
            React.DOM.th(null, "Social")
          ), 
          React.DOM.tbody(null, 
            activities
          )
        )
      )
    )
  }
})

var Event = React.createClass({displayName: 'Event',
  render: function() {
    event = this.props.event
    if(event == "delivered"){
      iconType = "fa fa-paper-plane"; eventName = "Delivered";
    }else if(event == "failed") {
      iconType = "fa fa-exclamation-circle"; eventName="Failed"
    }else if(event == "opened"){
      iconType = "fa fa-eye"; eventName="Opened"
    }else if(event == "replied"){
      iconType = "fa fa-mail-reply";  eventName = "Replied"
    }else if(event == "visited"){
      iconType = "fa fa-home";  eventName="Visited"
    }

    return (
      React.DOM.ul({className: "list-group email-events", style: {marginBottom:0}}, 
        React.DOM.li({className: "list-group-item list-group-item-info", style: {paddingTop:16, height:49,textAlign:'center'}}, 
          React.DOM.i({className: iconType}), " ", React.DOM.span({style: {fontWeight:'bold'}}, eventName), " "
        ), 
        React.DOM.li({className: "list-group-item list-group-item-info", style: {display:'none'}}, 
          React.DOM.i({className: "fa fa-home"}), " ", React.DOM.span({style: {fontWeight:'bold'}}, "Visited"), " ", 
          React.DOM.a({href: "javascript:"}, "customerohq.com/resources"), "  "
        ), 
        React.DOM.li({className: "list-group-item list-group-item-info", style: {display:'none'}}, 
          React.DOM.i({className: "fa fa-external-link-square"}), " ", 
          React.DOM.span(null, "2:19 pm"), " ", 
          React.DOM.span({style: {fontWeight:'bold'}}, "clicked "), 
          React.DOM.a({href: "javascript:"}, "customerohq.com")
        )
      )
    )
  }
})

var EmailActivities = React.createClass({displayName: 'EmailActivities',
  render: function() {
    activity = this.props.activity
    prospect = (activity.prospect) ? activity.prospect : {}
    return (
      React.DOM.tr(null, 
          React.DOM.td(null), 
          React.DOM.td(null, 
            React.DOM.h6(null, 
              React.DOM.i({className: "fa fa-clock"}), " ", 
              moment(activity.createdAt).fromNow()
            )
          ), 
          React.DOM.td(null, React.DOM.h6(null, prospect.name)), 
          React.DOM.td(null, React.DOM.h6(null, activity.sent_email.subject)), 
          React.DOM.td({style: {padding:0, fontSize:12}}, 
            Event({event: activity.event_type})
          ), 
          React.DOM.td({style: {textAlign:'center'}}, 
            React.DOM.div({style: {display:'none'}}, 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", style: {width:70,fontWeight:'bold',marginBottom:2}}, "Email"), React.DOM.br(null), 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", style: {width:70,fontWeight:'bold',marginBottom:2}}, React.DOM.i({className: "fa fa-cloud-upload"}), " CRM"), React.DOM.br(null), 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", style: {width:70,fontWeight:'bold',marginBottom:2}}, "Call")
          )
          ), 
          React.DOM.td(null, 
            "lol"
          )
      )
    )
  }
})

},{}],4:[function(require,module,exports){
/** @jsx React.DOM */
var TemplatesMenu = require('./templates_menu.js.min.js');
var EditTemplateView = require('./edit_template.js.min.js');
var CreateTemplateView = require('./create_template.js.min.js');
var Timeline = require('./followup_timeline.js.min.js');
var CampaignActivityView = require('./campaign_activity_view.js.min.js')
var CampaignFollowupFeed = require('./campaign_followup_feed.js.min.js')
var CampaignSentEmail = require('./campaign_sent_email.js.min.js')
var CampaignReport = require('./campaign_report.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  // Campaign Detail
  getInitialState: function() {
    return {
      selectedTemplate: 0,
      templateDetailMode: false,
      editMode: false,
      followupDay: 0,
      templates:[],
      currentTemplate:'',
      prospectListCount:'~',
      prospects:[],
      currentScreen: 'timeline',
      newProspects: [],
      bounced: '~',
      delivered: '~',
      opened: '~',
    }
  },

  changeScreen: function(e) {
    this.setState({currentScreen: $(e.target).text().toLowerCase()})
  },

  componentDidMount: function() {
    thissss = this;
    company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
    qry = 'where={"company":'+company+'}'



    $.ajax({
      url:'https://api.parse.com/1/classes/Template',
      headers: appConfig.headers,
      data: qry,
      success: function(res) { thissss.setState({templates: res.results}) },
      error: function(err) { console.log('error') }
    });

    currentList = JSON.stringify({
      '__type'    : 'Pointer', 
      'className' : 'ProspectList',
      'objectId'  : this.props.selectedCampaign.prospect_list.objectId, 
    })

    qry = 'where={"lists":'+currentList+'}&limit=1000&count=1&include=email_guesses,email_guesses.pattern'
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect',
      headers: appConfig.headers,
      data: qry,
      success: function (res) {
        // TODO - why is this being done
        console.log('RESULTS')
        console.log(res)
        console.log(res.results)
        thissss.setState({
          prospects: res.results,
          prospectListCount: res.count 
        })

        if(res.count > 1000){
          for(i=0;i< Math.ceil(res.count/1000); i++) {
            qry = 'where={"lists":'+currentList+'}&limit=1000&count=1'
            $.ajax({
              url: 'https://api.parse.com/1/classes/Prospect',
              headers: appConfig.headers,
              data: qry,
              success: function (res) {
                prospects = thissss.state.prospects
                thissss.setState({prospects:  prospects.concat(res.results)})
              },
              error: function(err) {}
            })
          }
        }
      },
      error: function(err) { }
    })

    var thiss = this;
    selectedCampaign = this.props.selectedCampaign
    console.debug(this.props.selectedCampaign)
    console.debug('Selected Campaign Batches')
    console.debug(this.props.selectedCampaign.batches)
    batches = this.props.selectedCampaign.batches
    if(_.isEqual(batches, [])){ 
      batch_query = { $in: [false, null] }
    } else {
      qry = _.map(batches, function(batch) {
        return appConfig.pointer('ProspectBatch', batch.objectId)
      })
      batch_query = { $nin: qry }
    }
    prospect_list = thiss.props.selectedCampaign.prospect_list.objectId
    // TODO - add support for more than 1000
    $.ajax({
      url:'https://api.parse.com/1/classes/Prospect',
      headers: appConfig.headers,
      selectedCampaign: thiss.props.selectedCampaign,
      data: {
        where: JSON.stringify({
            batches: batch_query,
            lists: appConfig.pointer('ProspectList', prospect_list),
        }), limit:1000
      },
      success: function(res) { thiss.setState({newProspects: res.results}) },
      error: function(err) { console.debug(err.responseText) }
    })
    campaignId = thiss.props.selectedCampaign.objectId
    qry = {
      where: JSON.stringify({campaign: appConfig.pointer('Campaign', campaignId)}),
      limit: 1000,
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({delivered: res.count})},
      error: function(err) { console.log(err.responseText) }
    })
    qry_1 = {
      where: JSON.stringify({
        campaign: appConfig.pointer('Campaign', campaignId),
        opened: {"$gte": 0} 
      }),
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry_1,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({opened : res.count}) },
      error: function(err) { console.log(err.responseText) }
    })
    qry_2 = {
      where: JSON.stringify({
        campaign: appConfig.pointer('Campaign', campaignId),
        failed: {"$gte": 0} 
      }),
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry_2,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({bounced : res.count}) },
      error: function(err) { console.log(err.responseText) }
    })
  },

  returnToOverview: function() {
    this.props.toggleScreen('Campaigns')
  },

  render: function() {
    //console.log('campaign detail')
    console.log(this.state.currentScreen)
    console.log(this.state.currentScreen.indexOf("sent email"))
    tab_1 = "campaign-tab-link"
    tab_2 = "campaign-tab-link"
    tab_3 = "campaign-tab-link"
    tab_4 = "campaign-tab-link"
    tab_5 = "campaign-tab-link"
    if(this.state.currentScreen == "timeline"){
      //console.debug('SELECTED CAMPAIGN')
      //console.debug(this.props.selectedCampaign)
      lolscreen = FollowupTimeline({
                  templates: this.state.templates, 
                  prospects: this.state.prospects, 
                  selectedCampaign: this.props.selectedCampaign, 
                  prospectListCount: this.state.prospectListCount, 
                  newProspects: this.state.newProspects, 
                  toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
                  initialFollowups: this.props.selectedCampaign.followups})
      tab_1 = "active-campaign-tab campaign tab-link"
    } else if(this.state.currentScreen == "recent activity") {
      lolscreen = CampaignActivityView(null)
      tab_2 = "active-campaign-tab campaign tab-link"
    } else if(this.state.currentScreen == "scheduled followups") {
      lolscreen = CampaignFollowupFeed({
                    batches: this.props.selectedCampaign.batches, 
                    followups: this.props.selectedCampaign.followups})
      tab_3 = "active-campaign-tab campaign tab-link"
    } else if(this.state.currentScreen == "sent mail") {
      lolscreen = CampaignSentEmail({
                      selectedCampaign: this.props.selectedCampaign})
      tab_4 = "active-campaign-tab campaign tab-link"
    } else if(this.state.currentScreen == "analytics") {
      lolscreen = CampaignReport(null)
      tab_5 = "active-campaign-tab campaign tab-link"
    } else{
      console.log('LOL')
      lolscreen = FollowupTimeline({
                  templates: this.state.templates, 
                  prospects: this.state.prospects, 
                  selectedCampaign: this.props.selectedCampaign, 
                  prospectListCount: this.state.prospectListCount, 
                  newProspects: this.state.newProspects, 
                  toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
                  templates: this.state.templates, 
                  initialFollowups: this.props.selectedCampaign.followups})
    }
    //activeTab = "active-campaign-tab campaign tab-link"
      

    //list_type = this.props.selectedCampaign.prospect_list.list_type
    list_type = ""
    if(list_type == "mining_job")
      list_type = React.DOM.span(null, React.DOM.i({className: "fa fa-cloud-download"}), " ")
    else if(list_type == "signal_list")
      list_type = React.DOM.span(null, React.DOM.i({className: "fa fa-wifi"}), " ")
    else
      list_type = React.DOM.span(null, React.DOM.i({className: "fa fa-list-alt"}), " ")

    batches = this.props.selectedCampaign.batches
    batches = (batches) ? batches : []
    console.log('BATCHES')
    console.log(batches)
    return (
      React.DOM.div({className: "container", 
           style: {width:'100%',height:'100%',paddingLeft:0,paddingRight:0}}, 
        React.DOM.div({style: {marginBottom:15}, id: "campaign-top-detail"}, 
        React.DOM.h5({style: {marginTop:20,marginLeft:20}}, 
          React.DOM.a({href: "javascript:", onClick: this.returnToOverview}, "Campaigns "), 
          React.DOM.small(null, 
            React.DOM.i({style: {marginLeft:10, marginRight:10}, 
               className: "fa fa-chevron-right"})
          ), 
          this.props.selectedCampaign.name
        ), 
        React.DOM.h6({style: {marginLeft:20,display:'inline-block',marginRight:15,marginBottom:0,fontWeight:'bold',fontSize:10}}, 
          React.DOM.span({className: "text-muted"}, "PROSPECT LIST:"), "  "
        ), 
          React.DOM.span({className: "label label-success"}, 
          list_type, 
          this.props.selectedCampaign.prospect_list.name, 
          "     ", 
        React.DOM.i({className: "fa fa-user"}), " ", this.state.prospectListCount
        ), 
        React.DOM.br(null), 
        React.DOM.h6({style: {marginLeft:20,display:'inline-block',marginRight:50,marginTop:0,fontWeight:'bold',fontSize:10}, 
            className: "text-muted"}, 
          "BATCHES:"
        ), 
        React.DOM.span({className: "label label-primary"}, 
          React.DOM.i({className: "fa fa-sitemap"}), " ", 
          (_.isEqual(batches, [])) ? 1 : batches.length
        ), 
        
        React.DOM.div({style: {border:'1px solid #ddd',borderRadius:5,float:'right',marginTop:-45,marginRight:100}}, 
            React.DOM.div({className: "bg-warning", style: {display:'inline-block',padding:10,fontWeight:'bold',cursor:'pointer',width:70,textAlign:'center'}}, 
              React.DOM.span({className: "text-warning"}, 
                React.DOM.i({className: "fa fa-paper-plane"}), " ", this.state.delivered
              )
            ), 
            React.DOM.div({className: "bg-success", style: {display:'inline-block',padding:10,fontWeight:'bold',cursor:'pointer',width:70,textAlign:'center'}}, 
              React.DOM.span({className: "text-success"}, 
                React.DOM.i({className: "fa fa-eye"}), " ", this.state.opened
              )
            ), 
            React.DOM.div({className: "bg-danger", style: {display:'inline-block',padding:10,fontWeight:'bold',cursor:'pointer',width:70,textAlign:'center'}}, 
              React.DOM.span({className: "text-danger"}, 
                React.DOM.i({className: "fa fa-exclamation-circle"}), " ", this.state.bounced
              )
            )
        ), 
        
        React.DOM.a({href: "javascript:", 
           style: {float: 'right', marginTop: -35, marginRight: 30, display:'none'}, 
           className: "btn btn-success btn-sm"}, 
          React.DOM.i({className: "fa fa-envelope"}), " Send!"
        )
        
        ), 
              React.DOM.ul({className: "nav nav-tabs campaign-tabs", role: "tablist", style: {paddingRight:0}}, 
                React.DOM.li({className: "campaign-tab"}, " ", React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_1}, "TIMELINE")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_2}, "RECENT ACTIVITY")), 
                React.DOM.li({className: "campaign-tab"}, 
                  React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_3, style: {fontSize:12}}, 
                    "SCHEDULED FOLLOWUPS")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_4}, "SENT MAIL")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "ANALYTICS"))
              ), 
            lolscreen, 

          (this.state.templateDetailMode) ? EditTemplateView({
            editMode: this.state.editMode, 
            initialTemplateValues: this.state.currentTemplate, 
            saveTemplate: this.saveTemplate, 
            prospect: this.state.prospects[0], 
            toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
            followupDay: this.state.followupDay}) : ""
      )
    );
  },

  saveTemplate: function(template, newTemplate) {
    templates = this.state.templates
    for(i=0;i< this.state.templates.length; i++)
      if(this.state.templates[i].name == template.name)
        break
    
    console.log(template)
    if(newTemplate){
      template.subject = template.subject
      template.name = template.name
      template.body = template.body
      templates.push(template)

      $.ajax({
        url:'https://api.parse.com/1/classes/Template',
        headers:appConfig.headers,
        type:'POST',
        data:JSON.stringify({
          name : template.name,
          subject: template.subject,
          body: template.body,
          user:{
            __type: 'Pointer',
            className:'_User',
            objectId:JSON.parse(localStorage.currentUser).objectId,
          },
          company:JSON.parse(localStorage.currentUser).company,
        }),
        success: function(res) {
          console.log(res)
        },
        error: function() {
        }
      })
    } else {
      templates[i].subject = template.subject
      templates[i].body = template.body

      $.ajax({
        url:'https://api.parse.com/1/classes/Template/'+templates[i].objectId,
        type:'PUT',
        headers:appConfig.headers,
        data:JSON.stringify({
          name : template.name,
          subject: template.subject,
          body: template.body,
        }),
        success: function(res) {
          console.log(res)
        },
        error: function() {
        }
      })
    }

    this.setState({templates: templates })

  },

  toggleTemplateEditMenu: function(currentTemplate, editMode) {
    editMode = (editMode) ? true : false
    this.setState({
      currentTemplate: currentTemplate,
      templateDetailMode: !this.state.templateDetailMode,
    })
  }
});

var FollowupTimeline = React.createClass({displayName: 'FollowupTimeline',
  render: function() {
    return (
        React.DOM.div(null, 
          React.DOM.div({className: "col-md-8 panel panel-default", 
               style: {height:436,paddingLeft:305,paddingTop:50,overflow:'auto',borderRight:0,borderRadius:0, borderTop:0}}, 
                Timeline({
                  templates: this.props.templates, 
                  prospects: this.props.prospects, 
                  selectedCampaign: this.props.selectedCampaign, 
                  prospectListCount: this.props.prospectListCount, 
                  newProspects: this.props.newProspects, 
                  toggleTemplateEditMenu: this.props.toggleTemplateEditMenu, 
                  initialFollowups: this.props.initialFollowups})
          ), 
          React.DOM.div({className: "col-md-4", 
               style: {paddingLeft:0,paddingRight:0,height:436}}, 
            TemplatesMenu({
              templates: this.props.templates, 
              toggleTemplateEditMenu: this.props.toggleTemplateEditMenu})
          )
        )

    )
  }
})

},{"./campaign_activity_view.js.min.js":3,"./campaign_followup_feed.js.min.js":5,"./campaign_report.js.min.js":6,"./campaign_sent_email.js.min.js":7,"./create_template.js.min.js":18,"./edit_template.js.min.js":22,"./followup_timeline.js.min.js":25,"./templates_menu.js.min.js":59}],5:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // FollowupFeed
  getInitialState: function() {
    return {
      followups: []
    }
  },

  componentDidMount: function() {
        // for each batch find followups remaining
        // sort followups by ascending followup day
        //
    // Batch Start Date
    // Current Batch Date
  },

  render: function() {
    var thiss = this;
    followups = _.map(this.props.batches, function(batch) {
      now = moment().startOf('day').valueOf()/1000
      batch.currentDay = moment(batch.started).diff(moment(now),  'days') * -1
      return _.map(thiss.props.followups, function(followup) {
        followup.batch = batch
        if(followup.day >= batch.currentDay)
          return followup
      })
    })
    followups = _.sortBy(followups, function(followup){ return followup.day })

    console.debug(followups)

    activities = _.map(followups[0], function(followup) {
      return Followups({followup: followup, batch: followup.batch})
    })
    console.debug(activities)

    return (
      React.DOM.div({style: {overflow:'auto',height:436}}, 
        React.DOM.table({className: "table", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Scheduled for "), 
            React.DOM.th(null, "Outreach Stage "), 
            React.DOM.th(null, "Prospect List"), 
            React.DOM.th(null, "Template "), 
            React.DOM.th({style: {textAlign:'center'}}, "Action Buttons")
          ), 
          React.DOM.tbody(null, 
            activities
          )
        )
      )
    )
  }
})

var Followups = React.createClass({displayName: 'Followups',
  render: function() {
    // this.props.batch
    // this.props.followup
    return (
      React.DOM.tr(null, 
          React.DOM.td(null), 
          React.DOM.td(null, 
            React.DOM.h6(null, 
              React.DOM.i({className: "fa fa-clock"}), " " + ' ' +
              "29 minutes ago"
            )
          ), 
          React.DOM.td(null, 
            "second"
          ), 
          React.DOM.td(null, 
            React.DOM.h6({style: {cursor:'pointer'}}, 
            React.DOM.i({className: "fa fa-list-alt"}), "  " + ' ' +
            "Boston VP Sales - Retail"
            )
          ), 
          React.DOM.td(null, 
            React.DOM.h6({style: {cursor:'pointer'}}, 
            React.DOM.i({className: "fa fa-file-text-o"}), "  " + ' ' +
            "Followup #2 - Provide Value ", React.DOM.br(null), 
            React.DOM.span({className: "text-muted"}, " Subject: Just wanted to followup on the last email "), React.DOM.br(null), 
            React.DOM.span({className: "text-muted"}, " Body: Just wanted to followup on the last email ")

            )
          ), 

          React.DOM.td({style: {textAlign:'center'}}, 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", style: {width:170,fontWeight:'bold',marginBottom:2}}, "Send Now"), React.DOM.br(null), 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", style: {width:170,fontWeight:'bold',marginBottom:2}}, "Remind me in 1 hour"), React.DOM.br(null)
          )
      )
    )
  }
})

},{}],6:[function(require,module,exports){
/** @jsx React.DOM */

lol = 

module.exports = React.createClass({displayName: 'exports',
  // Campaign Report
  getInitialState: function() {
    return {
    }
  },

  componentDidMount: function() { 
    testData = this.testData()
    var industryChart   = dc.pieChart("#industry-chart"),
        spendHistChart  = dc.barChart("#chart-hist-spend"),
        spenderRowChart = dc.rowChart("#chart-row-spenders");

    // set crossfilter
    var ndx = crossfilter(spendData),
        yearDim  = ndx.dimension(function(d) {return +d.Year;}),
        spendDim = ndx.dimension(function(d) {return Math.floor(d.Spent/10);}),
        nameDim  = ndx.dimension(function(d) {return d.Name;}),
        spendPerYear = yearDim.group().reduceSum(function(d) {return +d.Spent;}),
        spendPerName = nameDim.group().reduceSum(function(d) {return +d.Spent;}),
        spendHist    = spendDim.group().reduceCount();

    industryChart
        .width(200).height(200)
        .dimension(yearDim)
        .group(spendPerYear)
        .innerRadius(50);

    //
    // Batch Analytics - Bubble Chart
    // Batch Block Charts
    // Pie Chart - Industry
    // Revenue - PC
    // Company Size - PC
    // Opens / Replies / Link Clicks / Bounces - Bar Chart
    // Titles - PC
    // Time / Date Email Sent - Line Chart
    // Date Prospected - BC
    //
  },
  
  render: function() {
    return (
      React.DOM.div(null, 
        "Report View", 
        React.DOM.div({id: "industry-chart"})
      )
    )
  },

  testData: function() { 
    return [{"website": "http://www.tencate.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director Sales & Marketing Aerospace", "__type": "Object", "updatedAt": "2014-10-10T13:29:22.516Z", "createdAt": "2014-10-07T15:20:18.481Z", "city": "Coventry, United Kingdom\\u00a0", "archived": true, "loading": false, "objectId": "ftyKCGmR9H", "company_name": "Tencate", "mailgun_id": "<20141010140218.58883.75040@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "u8SetCQOJP"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "P0KmFG92dK"}], "email": "n.tiffin@tencate.com", "prospect_created_at": "2014-10-07T15:20:18.481Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "1001-5000 employees", "name": "Nick Tiffin", "industry": "Textiles", "linkedin_url": "uk.linkedin.com/pub/nick-tiffin/5/434/256", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.pearson.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director, Sales Performance Management", "__type": "Object", "updatedAt": "2014-10-10T13:29:22.780Z", "createdAt": "2014-10-07T15:20:17.873Z", "city": "Phoenix, Arizona Area\\u00a0", "archived": true, "loading": false, "objectId": "LPiE0CcEsR", "company_name": "Pearson plc", "mailgun_id": "<20141010140219.50015.20571@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "Q57kwN1LQT"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "53K0lWY7hv"}], "email": "jason.linkedin@pearson.com", "prospect_created_at": "2014-10-07T15:20:17.873Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "10,001+ employees", "name": "Jason Upah", "industry": "Education Management", "linkedin_url": "www.linkedin.com/pub/jason-upah/7/233/940", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.rmwmusic.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director of Sales and Marketing", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.049Z", "createdAt": "2014-10-07T15:20:16.735Z", "city": "Toronto, Ontario, Canada\\u00a0", "archived": true, "loading": false, "opened": true, "objectId": "COSpyXgsD2", "company_name": "RMW Music", "mailgun_id": "<20141010140219.50019.67418@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "3OEKtIxIAp"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "xvGbUYpo43"}], "email": "no_email", "prospect_created_at": "2014-10-07T15:20:16.735Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "11-50 employees", "name": "Laura Nikolic", "industry": "Music", "linkedin_url": "ca.linkedin.com/pub/laura-nikolic/50/450/771", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.saudiacargo.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director Global Sales Support", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.327Z", "createdAt": "2014-10-07T15:20:16.127Z", "city": "Saudi Arabia\\u00a0", "archived": true, "loading": false, "opened": true, "objectId": "Ke06g6kSk5", "company_name": "Saudi Airlines Cargo Company", "mailgun_id": "<20141010140220.58887.52484@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "o33JavhSpy"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "l3vy2TxF73"}], "email": "no_email", "prospect_created_at": "2014-10-07T15:20:16.127Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "1001-5000 employees", "name": "Rainer Mueller", "industry": "Airlines/Aviation", "linkedin_url": "sa.linkedin.com/pub/rainer-mueller/5/a48/428", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.shadowzprotection.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.598Z", "createdAt": "2014-10-07T15:20:15.147Z", "city": "New Delhi Area, India\\u00a0", "archived": true, "loading": false, "opened": true, "objectId": "f44YU2Yrm7", "company_name": "M/S Golden Bricks Constructions Pvt. Ltd.", "mailgun_id": "<20141010140220.19960.3157@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "6B4MDqWqtw"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "e9sMFL1QWx"}], "email": "no_email", "prospect_created_at": "2014-10-07T15:20:15.147Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "201-500 employees", "name": "Vivek Narang", "industry": "Security and Investigations", "linkedin_url": "in.linkedin.com/pub/vivek-narang/20/b67/39", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.shangri-la.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director of Sales and Marketing", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.880Z", "createdAt": "2014-10-07T15:20:13.197Z", "city": "Brisbane, Australia\\u00a0", "archived": true, "loading": false, "objectId": "TSSDEZ3lUA", "company_name": "Shangri-La Hotels and Resorts", "mailgun_id": "<20141010140221.39548.29627@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "PIDGJPqraI"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "mG4U69xDcg"}], "email": "andy.mccutcheon@shangri-la.com", "prospect_created_at": "2014-10-07T15:20:13.197Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "10,001+ employees", "name": "Andy McCutcheon", "industry": "Hospitality", "linkedin_url": "au.linkedin.com/pub/andy-mccutcheon/1a/665/650", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.tencate.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director Sales & Marketing Aerospace", "__type": "Object", "updatedAt": "2014-10-10T13:29:22.516Z", "createdAt": "2014-10-07T15:20:18.481Z", "city": "Coventry, United Kingdom\\u00a0", "archived": true, "loading": false, "objectId": "ftyKCGmR9H", "company_name": "Tencate", "mailgun_id": "<20141010140813.19956.20454@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "u8SetCQOJP"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "P0KmFG92dK"}], "email": "n.tiffin@tencate.com", "prospect_created_at": "2014-10-07T15:20:18.481Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "1001-5000 employees", "name": "Nick Tiffin", "industry": "Textiles", "linkedin_url": "uk.linkedin.com/pub/nick-tiffin/5/434/256", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.pearson.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director, Sales Performance Management", "__type": "Object", "updatedAt": "2014-10-10T13:29:22.780Z", "createdAt": "2014-10-07T15:20:17.873Z", "city": "Phoenix, Arizona Area\\u00a0", "archived": true, "loading": false, "objectId": "LPiE0CcEsR", "company_name": "Pearson plc", "mailgun_id": "<20141010140813.58881.85733@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "Q57kwN1LQT"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "53K0lWY7hv"}], "email": "jason.linkedin@pearson.com", "prospect_created_at": "2014-10-07T15:20:17.873Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "10,001+ employees", "name": "Jason Upah", "industry": "Education Management", "linkedin_url": "www.linkedin.com/pub/jason-upah/7/233/940", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.rmwmusic.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director of Sales and Marketing", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.049Z", "createdAt": "2014-10-07T15:20:16.735Z", "city": "Toronto, Ontario, Canada\\u00a0", "archived": true, "loading": false, "opened": true, "objectId": "COSpyXgsD2", "company_name": "RMW Music", "mailgun_id": "<20141010140814.19938.90169@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "3OEKtIxIAp"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "xvGbUYpo43"}], "email": "no_email", "prospect_created_at": "2014-10-07T15:20:16.735Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "11-50 employees", "name": "Laura Nikolic", "industry": "Music", "linkedin_url": "ca.linkedin.com/pub/laura-nikolic/50/450/771", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}, {"website": "http://www.saudiacargo.com", "campaign": {"className": "Campaign", "__type": "Pointer", "objectId": "nmElU7zcBf"}, "pos": "\\u00a0Director Global Sales Support", "__type": "Object", "updatedAt": "2014-10-10T13:29:23.327Z", "createdAt": "2014-10-07T15:20:16.127Z", "city": "Saudi Arabia\\u00a0", "archived": true, "loading": false, "opened": true, "objectId": "Ke06g6kSk5", "company_name": "Saudi Airlines Cargo Company", "mailgun_id": "<20141010140814.77386.74943@customerohq.com>", "email_guesses": [{"className": "EmailGuess", "__type": "Pointer", "objectId": "o33JavhSpy"}, {"className": "EmailGuess", "__type": "Pointer", "objectId": "l3vy2TxF73"}], "email": "no_email", "prospect_created_at": "2014-10-07T15:20:16.127Z", "company": {"className": "Company", "__type": "Pointer", "objectId": "fqHWp5NsFx"}, "lists": [{"className": "ProspectList", "__type": "Pointer", "objectId": "izLbVulyr6"}], "user": {"className": "User", "__type": "Pointer", "objectId": "xWESiw5Smd"}, "company_size": "1001-5000 employees", "name": "Rainer Mueller", "industry": "Airlines/Aviation", "linkedin_url": "sa.linkedin.com/pub/rainer-mueller/5/a48/428", "batch": {"className": "ProspectBatch", "__type": "Pointer", "objectId": "YPaTGbD56a"}, "className": "Prospect", "queued": true}]
  },

});

},{}],7:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Sent Mail
  getInitialState: function() {
    return {
      sentEmails: []
    }
  },

  componentDidMount: function() {
    thiss = this;
    qry = {
      include: 'campaign,prospect,prospect.email_guesses.pattern',
      order:'-createdAt',
      campaign: {
        __type: 'Pointer',
        className:'Campaign',
        objectId: this.props.selectedCampaign.objectId,
      }
    }
    $.ajax({
      url: 'https://api.parse.com/1/classes/SentEmail',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({sentEmails: res.results}) },
      error: function() {}
    })
  },

  render: function() {
    sentEmails = []
    for(i=0;i< this.state.sentEmails.length; i++) 
      sentEmails.push(SentEmailRow({sentEmail: this.state.sentEmails[i]}))

    return (
      React.DOM.div({style: {overflow:'auto',height:417}}, 
        React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Prospect Name"), 
            React.DOM.th(null, "Prospect Email"), 
            React.DOM.th(null, "Template"), 
            React.DOM.th({style: {width:290}}, "Status")
          ), 
          React.DOM.tbody(null, 
            sentEmails
          )
        )
      )
    );
  }
});

var SentEmailRow = React.createClass({displayName: 'SentEmailRow',
  render: function() {
    sentEmail = this.props.sentEmail
    //console.log(sentEmail)

    email = sentEmail.email
    /*
    if(email == "no_email"){
      first = sentEmail.prospect.name.split(' ')[0]
      last = _.last(sentEmail.prospect.name.split(' '))

      pattern = _.findWhere(sentEmail.prospect.email_guesses, {'tried':false})
      data = {first: first, last: last, fi: first[0], li: last[0]}
      email = Mustache.render(pattern.pattern.pattern, data).toLowerCase()
    }
    */

    replied = "label label-default"
    opened = "label label-default"
    delivered = "label label-default"
    queued = "label label-default"

    if(sentEmail.replied) 
      replied = "label label-success"
    if(sentEmail.opened) 
      opened = "label label-success"
    if(sentEmail.delivered) 
      delivered = "label label-success"
    if(sentEmail.queued) 
      queued = "label label-success"

    return (
      React.DOM.tr(null, 
        React.DOM.td({style: {width:100}}, React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-clock"}), 
            moment(sentEmail.createdAt).fromNow())), 
        React.DOM.td({style: {width:200}}, 
          React.DOM.h6({style: {fontSize:14,fontWeight:'bold',marginBottom:0}}, 
            sentEmail.prospect.name), 
          React.DOM.h6({style: {fontStyle:'italic',marginTop:4,marginBottom:0}}, 
            sentEmail.prospect.pos.trim()), 
          React.DOM.h6({style: {marginTop:4,fontWeight:'bold'}}, 
            React.DOM.i({className: "fa fa-building"}), " ", 
            sentEmail.prospect.company_name)
        ), 
        React.DOM.td({style: {width:200}}, React.DOM.h6(null, email)), 
        React.DOM.td(null, 
          React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-file-text-o"}), " " + ' ' +
            "Template"
          )
        ), 
        React.DOM.td({style: {paddingTop:13}}, 
          React.DOM.span({className: queued}, "Queued"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: delivered}, "Delivered"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: opened}, "Opened"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: replied}, "Replied")
        )
      )
    )
  }
})

},{}],8:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Campaigns
  getInitialState: function() {
    return {
      selectedScreen: 'Overview',
    }
  },

  changeSelectedCampaign: function(campaign) {
    //this.props.toggleScreen('CampaignDetail')
    this.props.changeSelectedCampaign('CampaignDetail', campaign)
  },

  render: function() {
    campaigns = []
    console.log(this.props)
    for(i=0;i< this.props.campaigns.length; i++){ 
      campaigns.push(CampaignRow({
                        toggleScreen: this.toggleScreen, 
                        deleteCampaign: this.props.deleteCampaign, 
                        changeSelectedCampaign: this.changeSelectedCampaign, 
                        campaign: this.props.campaigns[i]}) )
    }
    return (
      React.DOM.div({style: {overflow:'auto',height:550}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Campaign Name"), 
            React.DOM.th(null, "Prospect List"), 
            React.DOM.th(null, "Size"), 
            React.DOM.th({style: {textAlign:'center'}}, "Delivered"), 
            React.DOM.th({style: {textAlign:'center'}}, "Opened"), 
            React.DOM.th({style: {textAlign:'center',display:'none'}}, "Replied"), 
            React.DOM.th({style: {textAlign:'center',display:'none'}}, "Link Clicks"), 
            React.DOM.th({style: {textAlign:'center'}}, "Bounced"), 
            React.DOM.th({style: {width:150,textAlign:'center'}}, " ")
          ), 
          React.DOM.tbody(null, 
            campaigns
          )
        )
      )
    );
  },
});

var CampaignRow = React.createClass({displayName: 'CampaignRow',
  getInitialState: function() {
    return {
      delivered: '~',
      opened: '~',
      bounced: '~',
      prospectListCount: '~'
    }
  },

  DeleteCampaign: function(e) {
    var thiss = this;
    console.log('DELETE CAMPAIGN')
    e.stopPropagation()
    swal({   
      title: "Are you sure?",   
      text: "You will not be able to recover this Campaign!",
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   
        swal("Deleted!", "Your campaign has been deleted.", "success"); 
        console.log('deleted')
        thiss.props.deleteCampaign(thiss.props.campaign.objectId)
      });
  },

  toggleScreen: function() {
    //this.props.toggleScreen()
    this.props.changeSelectedCampaign(this.props.campaign)
  },

  componentDidMount: function() {
    var thiss = this;
    list = this.props.campaign.prospect_list
    list = (list) ? list.objectId : ""
    qry = {
      where: JSON.stringify({lists: appConfig.pointer('ProspectList',list)}),
      count: true
    }
    $.ajax({
      url: 'https://api.parse.com/1/classes/Prospect',
      headers: appConfig.headers,
      data: qry,
      success: function(res) { thiss.setState({prospectListCount: res.count})},
      error: function(err) { console.log(err.responseText) }
    })
    campaignId = this.props.campaign.objectId
    qry = {
      where: JSON.stringify({campaign: appConfig.pointer('Campaign', campaignId)}),
      limit: 1000,
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({delivered: res.count})},
      error: function(err) { console.log(err.responseText) }
    })
    qry_1 = {
      where: JSON.stringify({
        campaign: appConfig.pointer('Campaign', campaignId),
        opened: {"$gte": 0} 
      }),
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry_1,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({opened : res.count}) },
      error: function(err) { console.log(err.responseText) }
    })
    qry_2 = {
      where: JSON.stringify({
        campaign: appConfig.pointer('Campaign', campaignId),
        failed: {"$gte": 0} 
      }),
      count: true
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/SentEmail',
      data: qry_2,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({bounced : res.count}) },
      error: function(err) { console.log(err.responseText) }
    })
  },

  render: function() {
    prospect_list = (this.props.campaign.prospect_list) ? this.props.campaign.prospect_list : {list_type:"", name:""}
    if(prospect_list.list_type == "signal_list")
        iconType = React.DOM.i({className: "fa fa-wifi", style: {marginRight:5}})
    else if(prospect_list.list_type == "mining_job")
        iconType = React.DOM.i({className: "fa fa-cloud-download", style: {marginRight:5}})
    else 
        iconType =""
    return (
      React.DOM.tr({style: {cursor:'pointer'}, onClick: this.toggleScreen}, 
        React.DOM.td(null), 
        React.DOM.td(null, " ", React.DOM.h6(null, 
            this.props.campaign.name
        ), " "), 
        React.DOM.td(null, " ", React.DOM.h6(null, 
            iconType, 
            prospect_list.name
        ), " "), 
        React.DOM.td(null, 
          React.DOM.div({className: "label label-primary"}, 
            React.DOM.i({className: "fa fa-user"}), "  ", 
            this.state.prospectListCount
          )
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "badge", style: {backgroundColor:'#f0ad4e',width:50}}, 
            React.DOM.i({className: "fa fa-paper-plane", style: {float:'left'}}), "  ", 
            this.state.delivered
          )
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "label label-success"}, 
            React.DOM.i({className: "fa fa-eye"}), "   ", this.state.opened, " ")
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.span({className: "label label-primary"}, 
            React.DOM.i({className: "fa fa-mail-reply"}), "  ", 
            this.state.bounced)
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.span({className: "label label-info"}, 
            React.DOM.i({className: "fa fa-external-link-square"}), "  " + ' ' +
            "18%")
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12}}, 
          React.DOM.span({className: "label label-default"}, 
            React.DOM.i({className: "fa fa-exclamation-circle"}), "  ", 
            this.state.bounced)
        ), 
        React.DOM.td({style: {textAlign:'center',paddingTop:12}}, 
          React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs", 
            style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important;',display:'none'}}, 
            React.DOM.i({className: "fa fa-copy", style: {fontWeight:'bold'}}), "  Clone"), 

          React.DOM.a({href: "javascript:", 
             className: "btn-default", 
             onClick: this.DeleteCampaign, 
             style: {marginLeft:5}}, " ", React.DOM.i({className: "fa fa-trash-o"}))
        ), 
        React.DOM.td({style: {textAlign:'center',padding:12,display:'none'}}, 
          React.DOM.h4({style: {margin:0}}, 
            React.DOM.span({className: "label label-success"}, "Ready")
          )
        )
      )
    )
  }
});

},{}],9:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //CompanyDetail
  getInitialState: function() {
    return {
      currentScreen:"press",
    }
  },

  changeScreen: function() {
  },

  toggleDetailMode: function() {
    console.log("detail mode")
    this.props.toggleDetailMode()
  },

  getData: function() {
    company = this.props.detailCompany
    qry = {company_name: company.company_name}
    var _this = this;
    Parse._get('CompanyBlogPost', qry).done(function(res) {
      _this.setState({blog_posts: res.results})
    })
    Parse._get('CompanyTechnology', qry).done(function(res) {
      _this.setState({technologies: res.results})
    })
    Parse._get('CompanyPressRelease', qry).done(function(res) {
      _this.setState({press_releases: res.results})
    })
    Parse._get('CompanyGlassdoorReview', qry).done(function(res) {
      _this.setState({reviews: res.results})
    })
    Parse._get('CompanyEmployee', qry).done(function(res) {
      _this.setState({employees: res.results})
    })
    Parse._get('CompanySimilar', qry).done(function(res) {
      _this.setState({similar: res.results})
    })
    Parse._get('CompanyHiring', qry).done(function(res) {
      _this.setState({hiring: res.results})
    })
    Parse._get('CompanyNews', qry).done(function(res) {
      _this.setState({news: res.results})
    })
  },

  changeScreen: function(e) {
    this.setState({currentScreen: $(e.target).text().toLowerCase()})
  },

  render: function() {
    console.log(this.props.detailCompany)
    console.log(this.state.currentScreen)
    this.getData()

    tab_1 = "campaign-tab-link"
    tab_2 = "campaign-tab-link"
    tab_3 = "campaign-tab-link"
    tab_4 = "campaign-tab-link"
    tab_5 = "campaign-tab-link"
    if(this.state.currentScreen == "press")
      screen = CompanyPress(null)
    else if(this.state.currentScreen == "news")
      screen = CompanyNews(null)
    else if(this.state.currentScreen == "blog posts")
      screen = CompanyBlogPosts(null)
    else if(this.state.currentScreen == "hiring")
      screen = CompanyHiring(null)
    else if(this.state.currentScreen == "employees")
      screen = CompanyEmployees(null)
    else if(this.state.currentScreen == "similar")
      screen = CompanySimilar(null)
    else if(this.state.currentScreen == "technologies")
      screen = CompanyTechnology(null)
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "company_detail_overlay", onClick: this.toggleDetailMode}, " "), 
      React.DOM.div({className: "company_detail_mode"}, 
    React.DOM.div({className: "row"}, 
      React.DOM.div({className: "col-md-2"}, 
      React.DOM.div({style: {backgroundImage: "url("+company.logo+")",height:100,width:100,marginLeft:10,marginTop:10}, 
          className: "company-img-thumbnail"})
      ), 
      React.DOM.div({className: "col-md-3", style: {paddingRight:0,paddingLeft:28,paddingTop:8}}, 
        React.DOM.h4({style: {fontWeight:"bold",fontSize:14}}, company.name), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.industry), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.headcount), 
        React.DOM.h6({style: {fontWeight:"bold"}}, company.city)
      ), 
      React.DOM.div({className: "col-md-7"}, 
        React.DOM.p({className: "lead", style: {marginTop:10,fontSize:12,height:100,overflow:'auto'}}, company.description)
      )
    ), 


              React.DOM.ul({className: "nav nav-tabs campaign-tabs detail-tab", role: "tablist", style: {paddingRight:0}}, 
                React.DOM.li({className: "campaign-tab"}, " ", React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_1}, "Press")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_2}, "News")), 
                React.DOM.li({className: "campaign-tab"}, 
                  React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_3, style: {fontSize:12}}, 
                    "Blogs")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_4}, "Hiring")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Employees")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Similar")), 
                React.DOM.li({className: "campaign-tab"}, React.DOM.a({onClick: this.changeScreen, href: "javascript:", className: tab_5}, "Technologies"))
              ), 
      screen
      )
      )
    )
  }
});

var CompanyPress = React.createClass({displayName: 'CompanyPress',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})

var CompanyNews = React.createClass({displayName: 'CompanyNews',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})

var CompanyBlogPosts = React.createClass({displayName: 'CompanyBlogPosts',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})
var CompanyHiring = React.createClass({displayName: 'CompanyHiring',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})
var CompanyEmployees = React.createClass({displayName: 'CompanyEmployees',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})
var CompanySimilar = React.createClass({displayName: 'CompanySimilar',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})
var CompanyTechnology = React.createClass({displayName: 'CompanyTechnology',
  render: function() {
    return (
      React.DOM.div(null, 
        "Press"
      )
    )
  }
})

},{}],10:[function(require,module,exports){
/** @jsx React.DOM */


module.exports = React.createClass({displayName: 'exports',
  // SignalCard
  render: function() {
    company = this.props.company
    return (
      React.DOM.div({className: "panel panel-default signal-card"}, 
        React.DOM.div({className: "panel-body", style: {paddingLeft:25, paddingRight:25}}, 
          React.DOM.h4({style: {display:'inline-block',width:'100%'}}, 
            React.DOM.span({style: { float:'left',maxWidth: '60%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              company.name), 
            React.DOM.span({className: "label label-success", 
              style: {marginLeft:7, float:'right',fontSize:12,
                maxWidth: '40%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              React.DOM.i({className: "fa fa-suitcase"}), "  ", 
              (company.signals) ? company.signals[0].job_title : ""
            )
          ), 
          React.DOM.a({href: "javascript:", className: "btn btn-success", 
            style: {float:'right',marginTop:15, fontWeight:'bold'}}, 
            "Prospect This Company"), 
          React.DOM.p({style: {fontSize:12,width:'75%'}}, 
            React.DOM.span(null, 
            (company.signals) ? company.signals[0].summary : ""
            )
          ), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-map-marker"}), 
             " ", (company.signals) ? company.signals[0].location : ""
            )
        )
      )
    );
  }
});

},{}],11:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createCampaign: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newCampaignName = $('#newCampaignName').val()
    prospectListName = $('#prospect_lists').val()
    thiss = this
    for(i=0;i< this.props.prospectLists.length; i++){
      if(this.props.prospectLists[i].name == prospectListName){
        prospect_list = this.props.prospectLists[i]; 
        break;
      }
    }
    if(newCampaignName.trim() != "")
      this.props.createCampaign({
        name: newCampaignName,
        prospect_list: prospect_list
      })
    // Disable Modal
    $('.modal-backdrop').click()
    $('.fade').click()
    $('#newCampaignName').val('')
  },

  render: function() {
    prospect_lists = []
    for(i=0;i< this.props.prospectLists.length; i++) {
      prospect_lists.push( React.DOM.option(null, this.props.prospectLists[i].name))
    }

    return (
      React.DOM.div({className: "modal fade bs-createCampaign-modal-sm", 
           tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 
           'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-envelope"}), "  Create Campaign")
                ), 

                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createCampaign}, 
                    React.DOM.input({id: "newCampaignName", 
                           type: "text", 
                           placeholder: "Enter Campaign Name...", 
                           className: "form-control"}), 

                    React.DOM.select({className: "form-control", 
                            id: "prospect_lists", 
                            style: {marginTop:20,marginBottom:20}}, 
                      prospect_lists
                    ), 

                    React.DOM.a({href: "javascript:", 
                      onClick: this.createCampaign, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create Campaign"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}],12:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createCompanyProfileModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Company Profile"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createCompanyProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },

  createCompanyProfile: function() {
    profileName = $(".company-profile-name").val()
    industryProfile = {
      'className': 'IndustryProfile',
      'industries' : $('.company-profile-industries').tagsinput('items').reverse()
    }

    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.company-profile-location').tagsinput('items').reverse()
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#company-profile-employeeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#company-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(locationProfile)
    
    profiles = [industryProfile, locationProfile,
                employeeProfile, revenueProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      mining_job:true,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)

    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Company Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control company-profile-name", 
                   placeholder: "Company Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-industries"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-location"}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
        React.DOM.div(null, 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,
                        width:140,marginBottom:20}}, "Company Size "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {width:'73.5%'}, 
                id: "company-profile-employeeBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 1 - 50"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 50 - 250"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 250 - 1000"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                  React.DOM.input({type: "checkbox"}), " 1000 +"
                )
              ), 

              React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
                "Approx. Revenue  "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {display:'none'}, 
                id: "company-profile-companyRevenueBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " ", '< $1M'
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $1M - $5M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $5M - $25M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $25M +"
                )
              )
        ), 

          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
      )
    )
  },
});

},{}],13:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  createProfile: function(e) {
    e.preventDefault()
    profileName = $('.funding-profile-name').val()
    
    //Stage
    //Amount Raised
    //Company Size
    //Approx Revenue

    amountRaisedProfile = {
      'className':'FundingProfile', 
      'revenues': _.map($('#amountRaisedBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(amountRaisedProfile)
    profiles = [amountRaisedProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles.reverse(), 
                         _.omit(newProfile,'profiles'))

      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade ", tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createFundingSignalModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Funding Signal"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 

                  React.DOM.div(null, 
                    React.DOM.form({className: "createSignal", onSubmit: this.createProfile}, 
                      React.DOM.span(null, 
                        React.DOM.h6({style: {width:140,display:'inline-block',
                                    marginBottom:20}}, 
                          "Funding Profile Name:  "), 
                        React.DOM.input({type: "text", 
                               style: {display:'inline-block',width:'73.1%'}, 
                               className: "form-control funding-profile-name", 
                               placeholder: "Funding Profile Name ..."})
                      ), 
                      CompanyProfile(null), 

                      React.DOM.div({style: {marginTop:10,display:'none'}}, 
                        React.DOM.h6({style: {width:140,display:'inline-block'}}, 
                          "Auto Prospect:  "), 
                        React.DOM.div({className: "btn-group autoprospect", 
                              'data-toggle': "buttons"}, 
                          React.DOM.label({className: "btn btn-sm btn-default active"}, 
                            React.DOM.input({type: "radio"}), " Yes"
                          ), 
                          React.DOM.label({className: "btn btn-sm btn-default"}, 
                            React.DOM.input({type: "radio"}), " No"
                          )
                        )
                      )
                    )
                  )

                )
              )
            )
          )
    );
  },

  createFundingProfile: function() {
  },

  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width('59.1%')
  },

});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {
      label = $(e.target).parent('label')
      if(label.hasClass('active'))
        label.removeClass('active')
      else
        label.addClass('active')
    });
  },

  render: function() {
    return (
      React.DOM.div(null, 
          React.DOM.h6({style: {display:'none',margin:0,
                      width:140,marginBottom:20}}, "Stage "), 
          React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "employeeBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Seed"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default ", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series A"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series B"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series C"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default", style: {width:'20%'}}, 
                React.DOM.input({type: "checkbox"}), " Series D+"
              )
            ), 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,width:140,marginBottom:20}}, 
              "Amount Raised  "), 
            React.DOM.div({className: "btn-group profile-btns", 'data-toggle': "buttons", 
              id: "amountRaisedBtns", style: {width:'74%'}}, 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default amountRaisedBtn", style: {width:'25%'}}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            ), 

          React.DOM.br(null), 


          React.DOM.h6({style: {display:'none',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "employeeBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            ), 

            React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
              "Approx. Revenue  "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "revenueBtns", 
              style: {display:'none'}}, 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
      )
    )
  }
});

},{}],14:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // CreateHiringSignalModal
  createSignal: function() {
    profileName = $('.hiring-profile-name').val()
    autoProspect = $('.autoprospect > .active').text() ==  " Yes"

    hiringProfile = {
      'className': 'HiringProfile',
      'roles'    : $('.hiring-roles').tagsinput('items')
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#hiring-revenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() })
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#hiring-employeeBtns').find('.active'), 
                         function(empBtn){ return $(empBtn).text().trim() })
    }

    prospectProfile = {
      'className':'ProspectTitleProfile',
      'title_keywords' : $('.prospectRoleKeywords').tagsinput('items')
    }

    profiles = [hiringProfile, revenueProfile, 
                employeeProfile, prospectProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });


    newProfile = {
      name: profileName,
      autoProspect: autoProspect,
      profiles: nonemptyProfiles,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      user_company: JSON.parse(localStorage.currentUser).user_company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {

        $.ajax({
          url: 'https://api.parse.com/1/classes/CompanyProspectList',
          type: 'POST',
          headers: appConfig.headers,
          data:JSON.stringify(_.pick(newProfile, 
                                     'name','user','list_type',
                                     'open_people', 'company',
                                     'mining_job_list')),
          success: function(res) {
            console.log(res)
            prospectList = appConfig.pointer('CompanyProspectList',res.objectId)
            $.ajax({
              url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
              type:'PUT',
              headers: appConfig.headers,
              data: JSON.stringify({'company_prospect_list':prospectList}),
              success: function(res){ console.log(res) },
              error: function(err){ console.log(err) }
            })
          },
          error: function() { }
        })

        $.ajax({
          url: 'https://api.parse.com/1/classes/ProspectList',
          type: 'POST',
          headers: appConfig.headers,
          data:JSON.stringify(_.pick(newProfile, 
                                     'name','user','list_type',
                                     'open_people', 'company',
                                     'mining_job_list')),
          success: function(res) {
            console.log(res)
            prospectList = appConfig.pointer('ProspectList',res.objectId)
            $.ajax({
              url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
              type:'PUT',
              headers: appConfig.headers,
              data: JSON.stringify({'prospect_list':prospectList}),
              success: function(res){ console.log(res) },
              error: function(err){ console.log(err) }
            })
          },
          error: function() { }
        })
        

        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

        // Start Mining Job
        $.ajax({
          //url:'https://nameless-retreat-3525.herokuapp.com/mining_job/title',
          ///url:'https://nameless-retreat-3525.herokuapp.com/title_mining_job',
          //url:'http://127.0.0.1:5000/signal/hiring',
          url:'https://nameless-retreat-3525.herokuapp.com/v1/signal/hiring',
          type:'GET',
          data: {profile: ress.objectId, type: "signal"},
          success: function(res) { console.log(res) },
          error: function(err) { console.log(err) }
        })
      

      },
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createHiringSignalModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Hiring Signal"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createSignal, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Signal"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                )
              )
            )
          )
    );
  }
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)
  },

  render: function(){
    addCompany = (!this.state.addCompany) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleCompany, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Company Details"
                                        ) : CompanyProfile({hideCompanyDetails: this.state.hideCompanyDetails})

    addProspect = (!this.state.addProspect) ? React.DOM.a({href: "javascript:", 
                                           onClick: this.toggleProspect, 
                                           className: "btn btn-sm btn-default"}, 
                                          React.DOM.i({className: "fa fa-plus"}), " " + ' ' +
                                          "Add Prospect Details"
                                        ) : ProspectProfile({hideProspectDetails: this.state.hideProspectDetails})
    addCompanyStyle = (!this.state.addCompany) ? {display:'block',textAlign:'center'} : {}
    addProspectStyle = (!this.state.addProspect) ? {display:'block',textAlign:'center'} : {}

    closeCompanyBtns = (!this.state.addCompany) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleCompany, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
                  onClick: this.toggleCompanyDetails, 
                  style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideCompanyDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    closeProspectBtns = (!this.state.addProspect) ? "" : React.DOM.span(null, React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspect, 
               style: {float:'right',marginTop:-5}}, 
               React.DOM.i({className: "fa fa-times"})), 
               React.DOM.a({href: "javascript:", className: "btn btn-xs btn-default", 
               onClick: this.toggleProspectDetails, 
               style: {float:'right',marginTop:-5,marginRight:5}}, 
              React.DOM.i({className: (this.state.hideProspectDetails) ? "fa fa-plus" :"fa fa-minus"})
          ))

    companyHeading = (!this.state.addCompany) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-building"}), "  Company Details")
    prospectHeading = (!this.state.addProspect) ? "" : React.DOM.h5(null, React.DOM.i({className: "fa fa-user"}), "  Prospect Details")
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Hiring Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'413px'}, 
                   className: "form-control hiring-profile-name", 
                   placeholder: "Hiring Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Hiring Role Name:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'50%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role hiring-roles"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.div({style: {marginTop:10}}, 
          React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
          React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
            React.DOM.label({className: "btn btn-sm btn-default active"}, 
              React.DOM.input({type: "radio"}), " Yes"
            ), 
            React.DOM.label({className: "btn btn-sm btn-default"}, 
              React.DOM.input({type: "radio"}), " No"
            )
          )
          ), 
          React.DOM.div({style: {display:'none'}}, 
            React.DOM.hr(null), " ", closeCompanyBtns, " ", companyHeading, 
            React.DOM.div({style: addCompanyStyle}, " ", addCompany, " "), 

            React.DOM.hr(null), " ", closeProspectBtns, " ", prospectHeading, 
            React.DOM.div({style: addProspectStyle}, " ", addProspect, " ")
          )
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    showDetails = (this.props.hideCompanyDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.companyFormSubmit}, 
          React.DOM.br(null), 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-employeeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            ), 

            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Revenue Amount "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", id: "hiring-revenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
        )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })

    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )

        )
      )
    )
  }
})

/*
  Funding Profile
  - Amount Raised
  - Stage

  People Profile
  - Locale
  - Title

  Company Profile
  - Industries
  - Revenue
  - Locale
  - # of Employees
*/

var GeneralForm = React.createClass({displayName: 'GeneralForm',

  render: function() {
    return (
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-suitcase"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Find Companies Hiring For ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-users"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Number of Employees ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-institution"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Amount of Funding ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-money"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Revenue Amount ..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.span(null, " ", React.DOM.i({className: "fa fa-wrench"}), "  ", 
            React.DOM.input({type: "text", style: {display:'inline-block',width:'90%'}, 
                  className: "form-control", placeholder: "Using Technologies Such As..."})
          ), 
          React.DOM.br(null), " ", React.DOM.br(null), 
          React.DOM.a({href: "javascript:", 
            onClick: this.createSignal, 
            className: "btn btn-default btn-success", 
            style: {display:'block', width:'100%'}}, 
            "Create Signal"
          )
        )
    )
  }
})

},{}],15:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    currentUser = JSON.parse(localStorage.currentUser)
    _id = Date.now()
    data =  {
      name : $('#listTitle').val().trim(),
      user : appConfig.pointer('_User', currentUser.objectId),
      user_company: Parse._user_company,
      count: 0,
      tmp: _id
    }
    console.log(data)

    thiss = this;
    listClassName = (this.props.listClassName) ? this.props.listClassName : 'ProspectList'
    var _this = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/'+listClassName,
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) { 
        console.log(res) 
        console.log("should be updating")
        _this.props.updateList(_id, res.objectId)
      },
      error: function(err) { console.log(err) }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Create List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "listTitle", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createListButtonClick, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Create List")
                  )

                )
              )
            )
          )
    );
  }
});


},{}],16:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createSignalModal
  createMiningJob: function(date) {
    var thiss = this;
    $.ajax({
      //url:'http://127.0.0.1:5000/mining_job/hiring',
      url:'https://nameless-retreat-3525.herokuapp.com/mining_job/hiring',
      data: {profile_id: thiss.props.currentProfile.objectId, timestamp: date},
      success: function(res) { console.log(res) },
      error: function(err) {console.log(err.responseText) }
    })
    this.props.createMiningJob(this.props.currentProfile, date)
  },

  render: function() {
    // moment.utc(moment().startOf('day')).valueOf()/1000
    // recieve completed days as props
    //console.log(this.props.currentProfile)
    mining_days = this.props.currentProfile.mining_days
    dates = []
    for(i=0;i< 30; i++) {  
      date = moment().subtract((i+1), 'days').startOf('day')
      mining_day = _.indexOf(mining_days, date.valueOf()/1000) != -1
      dates.push(DownloadDateRow({updateDate: this.updateDate, 
                                  createMiningJob: this.createMiningJob, 
                                  mining_day: mining_day, 
                                  date: date}))
    }

    return (
      React.DOM.div({className: "modal fade bs-createMiningJob-modal-md", 
           tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createMiningJobModal", 
           style: {top:'50px',overflow:'hidden'}}, 
        React.DOM.div({className: "modal-dialog modal-sm", style: {width:350}}, 
          React.DOM.div({className: "modal-content"}, 
            React.DOM.div({className: "modal-header"}, 
              React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                React.DOM.i({className: "fa fa-cloud-download"}), " " + ' ' +
                "Download Prospects"
              ), 
              React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                 onClick: this.createMiningJob, 
                 style: {float:'right',marginTop:-28,
                         marginRight:-5,display:'none'}}, 
                 "Download"
              )
            ), 
            React.DOM.div({className: "modal-body"}, 

              React.DOM.ul({className: "list-group date-download-prospects", 
                  style: {height:400,overflow:'auto',
                  borderBottom:'solid 1px #ddd',
                  cursor:'pointer',
                  borderTop:'solid 1px #ddd'}}, 
                React.DOM.h6({style: {margin:0}}, dates)
              )

            )
          )
        )
      )
    );
  },
});

var DownloadDateRow = React.createClass({displayName: 'DownloadDateRow',
  updateDate: function() {
    //this.createMiningJob()
    date = this.props.date.startOf('day').valueOf()/1000
    //date = moment().subtract((i+1), 'days').startOf('day')
    this.props.createMiningJob(date)
  },

  render: function() {
    loading = (this.props.mining_day) ?  React.DOM.div({className: "profile-loading", style: {float:'right',height:20,width:20}}, 
            React.DOM.div({className: "double-bounce1", style: {backgroundColor:'#5cb85c'}}), 
            React.DOM.div({className: "double-bounce2", style: {backgroundColor:'#5cb85c'}})
          ) : ""
    loading = ""
    return (
        React.DOM.li({onClick: this.updateDate, style: {textAlign:'center'}, 
          className: "list-group-item download-date bg-success", 
          style: (this.props.mining_day) ? {backgroundColor:'#dff0d8',textAlign:'center'} : {textAlign:'center'}}, 
          React.DOM.span({style: {width:85}}, 
            React.DOM.i({className: "fa fa-calendar"}), " ", 
            this.props.date.format('ll'), "      "
          ), 
          React.DOM.a({href: "javascript:", style: {width:89}, 
      className: (this.props.mining_day) ? "btn btn-success btn-xs disabled" : "btn btn-success btn-xs"}, 
            (this.props.mining_day) ? "Downloading" : "Download"), 
          loading
        )
    )
  }
})


},{}],17:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  createProfile: function() {
    profileName = $(".profileName").val()

    titleProfile = {
      'className': 'ProspectTitleProfile',
      'title_keywords'    : $('.prospect-profile-title').tagsinput('items').reverse()
    }

    /* */
    
    profiles = [titleProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });
    console.log(nonemptyProfiles)

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      type: 'prospect_profile',
      mining_job:true,
      list_type:"mining_job",
      only_people:true,
      timestamp: moment().valueOf(),
      done: 0,
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.props.addProfile(newProfile)
      this.persistSignal(nonemptyProfiles, newProfile)
      $('.modal').click()
      $('.prospect-profile-title').val('')
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)

    var thissss = this;
    var thiss = this;
    var _this = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(_.omit(newProfile, 'profiles')),
      success:function(ress) {
        
        user_id = JSON.parse(localStorage.currentUser).objectId
        newProfile.user = appConfig.pointer('_User', user_id) 
        newProfile._user_company = Parse._user_company

        $.ajax({
          url:     'https://api.parse.com/1/classes/ProspectList',
          type:    'POST',
          headers: appConfig.headers,
          data:    JSON.stringify(_.pick(newProfile, 
                                     'name','user','list_type',
                                     'open_people', 'company',
                                     'mining_job_list')),
          success: function(res) {
            console.log(res)
            prospectList = appConfig.pointer('ProspectList',res.objectId)
            $.ajax({
              url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
              type:'PUT',
              headers: appConfig.headers,
              data: JSON.stringify({'prospect_list':prospectList}),
              success: function(res){ console.log(res) },
              error: function(err){ console.log(err) }
            })
          },
          error: function() { }
        })

        // Start Mining Job
        if(newProfile.type == 'prospect_profile') {
          $.ajax({
            url: 'https://nameless-retreat-3525.herokuapp.com/title_mining_job',
            //url:'http://127.0.0.1:5000/title_mining_job',
            type:'GET',
            data: {prospect_profile: ress.objectId},
            success: function(res) { console.log(res) },
            error: function(err) { console.log(err) }
          })
        }

        // Create Profiles
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            }
          })
        });

        thiss.props.updateProfileWithObjectId(newProfile.timestamp, ress.objectId)
      }
    })
  },

  render: function() {
    return (
      React.DOM.div({className: "modal fade ", tabIndex: "-1", role: "dialog", 
           'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createProspectProfileModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    "Create Prospect Profile"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },
  createCompanyProfile: function() {
  },
});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  getInitialState: function() {
    return {
      addCompany: false,
      addProspect: false,
      hideCompanyDetails: false,
      hideProspectDetails: false,
    }
  },

  componentDidMount: function() {

  },
  
  toggleCompany : function() {
    this.setState({addCompany: !this.state.addCompany})
  },

  toggleProspect : function() {
    this.setState({addProspect: !this.state.addProspect})
  },

  toggleCompanyDetails: function() {
    this.setState({hideCompanyDetails: !this.state.hideCompanyDetails})
  },

  toggleProspectDetails: function() {
    this.setState({hideProspectDetails: !this.state.hideProspectDetails})
  },

  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width('59.1%')
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createProfile}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Prospect Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control hiring-profile-name profileName", 
                   placeholder: "Prospect Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Title:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role prospect-profile-title"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'none'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'none',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control prospect-location-profile-tmp"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.span({style: {display:'none',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control "}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
          CompanyProfile(null), 

          React.DOM.div({style: {display:'none'}}, 
          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
        )
      )
    )
  },
  createSignal: function(e) { e.preventDefault() }
});

var CompanyProfile = React.createClass({displayName: 'CompanyProfile',
  companyFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function() {
    return (
      React.DOM.div(null, 
          React.DOM.br(null), 
          React.DOM.div({style: {display:'none'}}, 
          React.DOM.h6({style: {display:'inline-block',margin:0,
                      width:140,marginBottom:20}}, "Company Size "), 
                    React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                      style: {width:'73.5%'}, id: "prospect-profile-companySizeBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1 - 50"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 50 - 250"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 250 - 1000"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default employeeBtn"}, 
                React.DOM.input({type: "checkbox"}), " 1000 +"
              )
            )
          ), 

          React.DOM.div({style: {display:'none'}}, 
            React.DOM.br(null), " ", React.DOM.h6({style: {display:'inline-block',margin:0,width:140}}, 
              "Approx. Revenue  "), 
            React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
              style: {width:'73.5%'}, id: "prospect-profile-companyRevenueBtns"}, 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " ", '< $1M'
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $1M - $5M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $5M - $25M"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                React.DOM.input({type: "checkbox"}), " $25M +"
              )
            )
          )
      )
    )
  }
});

var ProspectProfile = React.createClass({displayName: 'ProspectProfile',
  prospectFormSubmit: function(e) { e.preventDefault() },

  componentDidMount: function() {
    $('.prospectRoleKeywords').tagsinput({
      maxTags: 5,
    })
    $('.bootstrap-tagsinput').width(400)
  },

  render: function() {
    showDetails = (this.props.hideProspectDetails) ? {display: 'none'} : {display:'block'}
    return (
      React.DOM.div({style: showDetails}, 
        React.DOM.form({className: "createSignal", onSubmit: this.prospectFormSubmit}, 
          React.DOM.span(null, 
            React.DOM.span({style: {width:140,display:'inline-block'}}, 
              React.DOM.h6(null, "Job Title Keyword:  ")
            ), 
            React.DOM.input({type: "text", 
                   'data-role': "tagsinput", 
                   style: {width:'400px !important'}, 
                   className: "form-control prospectRoleKeywords", 
                   placeholder: ""})
          )
        )
      )
    )
  }
})

},{}],18:[function(require,module,exports){
/** @jsx react.dom */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      
    }
  },

  componentDidMount: function() {
    $('.template-body').html(this.state.templateBody)
  },

  clickedOverlay: function() {
    console.log('clicked overlay')
    this.props.toggleTemplateEditMenu()
  },

  changeMode: function() {
    // Update template html on toggle
    console.log('EDIT MODE')
    console.log(this.state.editMode)
    parse_headers = appConfig.parseHeaders
    if(this.state.editMode){
      $('.summer').destroy();
      this.props.saveTemplate({
        name: this.state.name,
        templateBody: $('.summer').code(),
        templateSubject: $('.subject').val(),
      })
      this.setState({
        templateBody: $('.summer').code(),
        templateSubject: $('.subject').val(),
        editMode: !this.state.editMode,
      })
      $.ajax({
        url:'https://api.parse.com/1/classes/Templates/'+this.props.initialTemplateValues.objectId,
        type:'PUT',
        headers:parse_headers,
        data:JSON.stringify({body: $('.summer').code(),subject: $('.subject').val()}),
        success: function(res) {
          console.log(res)
        },
        error: function(err) {
          console.log(err)
        }
      });
    } else {
      this.setState({ editMode: !this.state.editMode })
    }
  },

  componentDidUpdate: function() {
    /* thiss = this; */

    console.log('OTHER')
    if(this.state.editMode){
      console.log('CALLED')
      // Replace Subject 
      $('.subject').val(this.state.templateSubject)

      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })

      // Initialize Editor with html
      $('.summer').code(this.state.templateBody)
    }
  },


  render: function() {
    subjectPlace = (this.state.editMode) ? react.dom.input({style: {display:'inline',width:480}, className: "form-control subject"}) : this.state.templateSubject

    if(this.state.editMode){
       toggleButton = react.dom.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-success btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            react.dom.i({className: "fa fa-save"}), "   Save Template")
    } else {
       toggleButton = react.dom.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            react.dom.i({className: "fa fa-pencil-square"}), "   Edit Template")
    }

    return (
      react.dom.div(null, 
      react.dom.div({onClick: this.clickedOverlay, id: "editTemplateOverlay"}), 
      react.dom.div({id: "editTemplateView", 
           className: "panel panel-info", 
           style: {display:'block'}}, 
           react.dom.div({className: "panel-heading", style: {height:50}}, 
             react.dom.h6({style: {float:'left'}}, 
               react.dom.i({className: "fa fa-file-text-o"}), 
               "  " + this.props.initialTemplateValues.name
             ), 
          toggleButton
        ), 
        react.dom.div({className: "panel-body"}, 
          react.dom.div({className: "editTemplateTitle"}, 
            react.dom.span(null, "Subject: "), 
            subjectPlace
          ), 
         react.dom.br(null), 
         react.dom.div({className: "templateDetails"}, 
           react.dom.h6({style: {marginBottom:'0'}, className: "text-muted"}, 
             "Created by Mark on Jul. 21, 2014"
           ), 
           react.dom.h6({style: {marginTop:'0'}, className: "text-muted"}, 
             "last updated 7 days ago"
           )
         ), 
        react.dom.br(null), 
        react.dom.div({className: "panel panel-default"}, 
          react.dom.div({className: "panel-body summer template-body"}
          )
        )
    )
)
)
    );
  }
});

},{}],19:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createCompanyProfileModal
  render: function() {
    return (
      React.DOM.div({className: "modal fade bs-createSignal-modal-md", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "createTerritoryStrategyModal", 
           style: {top:'50px',overflow:'hidden'}}, 
            React.DOM.div({className: "modal-dialog modal-sm", style: {width:650}}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-globe"}), "  " + ' ' +
                    "Create Territory Stategy"
                  ), 
                  React.DOM.a({href: "javascript:", className: "btn btn-success btn-sm", 
                     onClick: this.createCompanyProfile, 
                     style: {float:'right',marginTop:-28,marginRight:-5}}, 
                    "Create Profile"
                  )
                ), 
                React.DOM.div({className: "modal-body"}, 
                  CreateHiringSignal(null)
                ), 
              React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
                React.DOM.button({type: "button", className: "btn btn-default"}, 
                  "Close"
                ), 
                React.DOM.button({type: "button", className: "btn btn-primary"}, 
                  "Send Email"
                )
              )
              )
            )
          )
    );
  },

  createCompanyProfile: function() {
    profileName = $(".company-profile-name").val()
    industryProfile = {
      'className': 'IndustryProfile',
      'industries' : $('.company-profile-industries').tagsinput('items').reverse()
    }

    locationProfile = {
      'className': 'LocationProfile',
      'locale'    : $('.company-profile-location').tagsinput('items').reverse()
    }

    employeeProfile = {
      'className':'EmployeeProfile', 
      'employees': _.map($('#company-profile-employeeBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    revenueProfile = {
      'className':'RevenueProfile', 
      'revenues': _.map($('#company-profile-companyRevenueBtns').find('.active'), 
                        function(revBtn){ return $(revBtn).text().trim() }).reverse()
    }

    console.log(locationProfile)
    
    profiles = [industryProfile, locationProfile,
                employeeProfile, revenueProfile]

    nonemptyProfiles = _.filter(profiles, function(profile) {
      if(_.values(profile)[1]){ return _.values(profile)[1].length }
    });

    newProfile = {
      name: profileName,
      profiles: nonemptyProfiles,
      mining_job:true,
      list_type:'territory',
      user:{
        __type:'Pointer',
        className:'_User',
        objectId:JSON.parse(localStorage.currentUser).objectId
      },
      company: JSON.parse(localStorage.currentUser).company
    }

    if(nonemptyProfiles.length) {
      this.persistSignal(nonemptyProfiles, 
                         _.omit(newProfile,'profiles'))
      this.props.addProfile(newProfile)
      $('.modal').click()
    }
  },

  persistSignal: function(nonemptyProfiles, newProfile) {
    console.log('NEW PROFILE')
    console.log(newProfile)
    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectProfile',
      headers:appConfig.headers,
      type:'POST',
      data:JSON.stringify(newProfile),
      success:function(ress) {
        // Add Signal List
        _.map(nonemptyProfiles, function(profile) {
          $.ajax({
            url:'https://api.parse.com/1/classes/'+_.values(profile)[0],
            headers:appConfig.headers,
            type:'POST',
            data:JSON.stringify( _.pick(profile, _.keys(profile)[1]) ),
            success:function(res) {
              $.ajax({
                url:'https://api.parse.com/1/classes/ProspectProfile/'+ress.objectId,
                type:'PUT',
                headers:appConfig.headers,
                data:JSON.stringify({profiles:{
                  __op: 'AddUnique',
                  objects:[{
                    __type:'Pointer',
                    className: _.values(profile)[0],
                    objectId:res.objectId
                  }]}
                }),
              })
            },
          })
        });

      },
    })
  },

});

var CreateHiringSignal = React.createClass({displayName: 'CreateHiringSignal',
  componentDidMount: function() {
    _.map($('.hiring-role'),function(input){$(input).tagsinput()})
    $(this.getDOMNode()).find('.hiring-role').tagsinput()
    $('.bootstrap-tagsinput').width(400)

    $(this.getDOMNode()).find('.btn-default').click(function(e) {

      if($(e.target).parent('label').hasClass('active'))
        $(e.target).parent('label').removeClass('active')
      else
        $(e.target).parent('label').addClass('active')

      console.log($(e.target).parent('label'))
    });
  },

  render: function(){
    return (
      React.DOM.div(null, 
        React.DOM.form({className: "createSignal", onSubmit: this.createSignal}, 
          React.DOM.span(null, 
            React.DOM.h6({style: {width:140,display:'inline-block',marginBottom:20}}, 
              "Company Profile Name:  "), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%'}, 
                   className: "form-control company-profile-name", 
                   placeholder: "Company Profile Name ..."})
          ), 
          React.DOM.br(null), 
          React.DOM.span({style: {display:'block',marginBottom:-10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Industries:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-industries"}), 

                React.DOM.a({href: "javascript:", 
                   className: "btn btn-xs btn-success", style: {display:'none'}}, 
                  React.DOM.i({className: "fa fa-plus"})
                )
          ), 
          React.DOM.span({style: {display:'block',marginBottom:-10, display:'none'}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, 
              "Location:  "
            ), 
            React.DOM.input({type: "text", 
                   style: {display:'inline-block',width:'73.1%',marginRight:10}, 
                   'data-role': "tagsinput", 
                   className: "form-control hiring-role company-profile-location"}), 

            React.DOM.a({href: "javascript:", 
               className: "btn btn-xs btn-success", style: {display:'none'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
        React.DOM.div(null, 
            React.DOM.br(null), 
            React.DOM.h6({style: {display:'inline-block',margin:0,
                        width:140,marginBottom:20}}, "Company Size "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {width:'75.5%'}, 
                id: "company-profile-employeeBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 1 - 20"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 20 - 50"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 50 - 100"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 100 - 250"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 250 - 1000"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default employeeBtn", style: {width:'16%'}}, 
                  React.DOM.input({type: "checkbox"}), " 1000 +"
                )
              ), 

              React.DOM.br(null), " ", React.DOM.h6({style: {display:'none',margin:0,width:140}}, 
                "Approx. Revenue  "), 
              React.DOM.div({className: "btn-group", 'data-toggle': "buttons", 
                style: {display:'none'}, 
                id: "company-profile-companyRevenueBtns"}, 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " ", '< $1M'
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $1M - $5M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $5M - $25M"
                ), 
                React.DOM.label({className: "btn btn-sm btn-default revenueBtn"}, 
                  React.DOM.input({type: "checkbox"}), " $25M +"
                )
              )
        ), 

          React.DOM.div({style: {marginTop:10}}, 
            React.DOM.h6({style: {width:140,display:'inline-block'}}, "Auto Prospect:  "), 
            React.DOM.div({className: "btn-group autoprospect", 'data-toggle': "buttons"}, 
              React.DOM.label({className: "btn btn-sm btn-default active"}, 
                React.DOM.input({type: "radio"}), " Yes"
              ), 
              React.DOM.label({className: "btn btn-sm btn-default"}, 
                React.DOM.input({type: "radio"}), " No"
              )
            )
          )
        )
      )
    )
  },
});

},{}],20:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // DataRow
  getInitialState: function() {
    return { }
  },

  clickCheck: function() {
    domNode = this.getDOMNode()
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.props.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidMount: function() { },

  render: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      // Adjust Scroll depending on where the prospect is
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }

    prospect = this.props.prospect
    company = (prospect.company) ? prospect.company : prospect.company_info
    company = (company) ? company : {}
    console.log(prospect)

    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    // console.log(this.state.checked)
    // console.log(checked)
    // {prospect.employeeCountRange.name + " employees" }
    // Today
    
    color = {}
    if(this.state.checked || this.props.alreadyChecked)
      color = {backgroundColor: '#eef8ff'}
      
    rowCl = (this.props.keyboardSelected) ? "prospects-tr keySelect" : "prospects-tr"
    websiteBtn = (prospect.website) ?  React.DOM.a({href: "http://"+prospect.website.replace('http://',''), className: "btn btn-xs btn-primary btn-gradient", style: {float:'right',marginLeft:5}}, " ", React.DOM.i({className: "fa fa-globe"}), " ") : ""
    //if(parseInt(prospect.linkedin_url.split('/').pop())){
    if(company.linkedin_url){
      btnClass = "btn btn-primary btn-xs btn-gradient"
    } else {
      btnClass = "btn btn-primary btn-xs btn-gradient disabled"
    }
    if(company.logo)
      logo = company.logo

    return (
      React.DOM.tr({className: rowCl, 
          onClick: this.rowClick, 
          style: keyboardSelected}, 
          React.DOM.td({style: color}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     checked: checked})
          ), 
          React.DOM.td({style: color}, 
              React.DOM.div({style: {backgroundImage: "url("+company.logo+")"}, 
              className: "company-img-thumbnail"})
          ), 

          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold',fontSize:15}}, company.company_name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px',fontSize:11}}, 
              company.headcount)
          ), 


          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:13}}, company.industry), 
            React.DOM.h6({style: {margin:'0px',fontStyle:'italic',marginTop:5,fontSize:11}}, 
              company.city)
          ), 

          React.DOM.td({style: color}, 
            "   ", 
            React.DOM.div({style: {width:290,marginTop:-15}}, 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openLinkedinCompanyProfile}, 
              React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
              "Search Profiles"
            ), 
            "   ", 
            React.DOM.a({href: "javascript:", className: btnClass, 
              onClick: this.openSimilarCompanies}, 
              React.DOM.i({className: "fa fa-copy"}), "  " + ' ' +
              "Find Similar Companies"
            )
            )
          ), 
          React.DOM.td({style: color, 
              className: "fixed-data-column"}, 
            React.DOM.h6({style: {margin:'0px',fontSize:11,paddingTop:5}}, moment(company.createdAt).fromNow())
          ), 

          React.DOM.td({style: color}, " ", React.DOM.h6({style: {margin:'0px'}}, ""), " "), 

          React.DOM.td({style: color}, 
            React.DOM.div({style: {width:92, paddingTop:5}}, 
              this.props.li, " ", 
              websiteBtn
            )
          )
        )
    );
  },

  openLinkedinCompanyProfile: function(e) {
    console.log(this.props.prospect.linkedin_url)
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    console.log(cid)
    window.open("https://www.linkedin.com/vsearch/p?f_CC="+cid)
    e.stopPropagation()
  },

  openSimilarCompanies: function(e) {
    cid = this.props.prospect.company_info.linkedin_url.split('?')[0].split('/company/')[1]
    //window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    window.open("https://www.linkedin.com/vsearch/c?rsid=526440371409184768175&pivotType=sim&pid="+cid+"&trk=sim_companies_res_sim&trkInfo=VSRPsearchId%3A526440371409184768175%2CVSRPtargetId%3A1025%2CVSRPcmpt%3Aprimary")
    e.stopPropagation()
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.props.prospect.objectId, 'Prospect')
  }
});


},{}],21:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  createListButtonClick: function() {
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  createMiningJob: function(e) {
    e.preventDefault()
    console.log('lmao')
    if($('#listTitle').val().trim() != "")
      this.createList()
  },

  deleteList: function() {
    this.props.deleteList()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-deleteList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-trash-o"}), "  Delete List?")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({className: "deleteForm", onSubmit: this.deleteList}, 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-danger", 
                      style: {display:'block', width:'100%'}}, 
                      "Delete"
                    ), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.deleteList, 
                      className: "btn btn-default", 
                      style: {display:'block', width:'100%'}}, 
                      "Cancel"
                    )
                  )

                )
              )
            )
          )
    );
  }
});


},{}],22:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      name: this.props.initialTemplateValues.name,
      body: this.props.initialTemplateValues.body,
      subject: this.props.initialTemplateValues.subject,
      editMode: this.props.initialTemplateValues.editMode
    }
  },

  componentDidMount: function() {
    console.log('did mount')
    $('.template-body').html(this.state.body)
    if(this.state.editMode) {
      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })
    }

    renderjson.set_show_to_level('all')
    prospect = _.pick(this.props.prospect, 
      'company_name', 'name', 'pos'
    )
    prospect.first_name = prospect.name.split(' ')[0]
    prospect.last_name = _.last(prospect.name.split(' '))
    prospect = _.omit(prospect, 'name')

    document.getElementById("editTemplate").appendChild(renderjson(prospect));
    $('#editTemplateOverlay').html()
    thiss = this;
    $('.renderjson').click(function() {
      thiss.props.toggleTemplateEditMenu()
    })

    $('.renderjson').css({
      'position': 'absolute',
      'z-index': '1000000000',
      'background-color':'rgba(0,0,0,0)',
      'border':'0',
      'color':'white',
      'margin-top':'0px',
      'height': '542px',
      'overflow':'auto',
      'width':'380px'
    })

    $('.key').css({
      'cursor':'pointer'
    })

    $('.timeline').css({
      '-webkit-filter': 'blur(10px)',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': 'blur(10px)',
    })
  },
  componentWillUnmount:function() {
    $('.timeline').css({
      '-webkit-filter': '',
    })
    $('#campaign-top-detail').css({
      '-webkit-filter': '',
    })
  },

  clickedOverlay: function() {
    console.log('clicked overlay')
    this.props.toggleTemplateEditMenu()
  },

  changeMode: function() {
    // Update template html on toggle
    parse_headers = appConfig.parseHeaders
    if(this.state.editMode){
      $('.summer').destroy();
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })

      console.log('look at this')
      console.log(name)
      name = (this.props.initialTemplateValues.newTemplate) ? $('#template-name').val() : this.state.name
      this.props.saveTemplate({
        name: name,
        body: $('.summer').code(),
        subject: $('.subject').val(),
      }, this.props.initialTemplateValues.newTemplate)

      this.setState({
        name: $('#template-name').val(),
        body: $('.summer').code(),
        subject: $('.subject').val(),
        editMode: !this.state.editMode,
      })

      objId = this.props.initialTemplateValues.objectId
      $.ajax({
        url:'https://api.parse.com/1/classes/Templates/'+objId,
        type:'PUT',
        headers:parse_headers,
        data:JSON.stringify({body: $('.summer').code(),
                             subject: $('.subject').val()}),
        success: function(res) {
          console.log(res)
        },
        error: function(err) {
          console.log(err)
        }
      });
    } else {
      this.setState({ editMode: !this.state.editMode })
      $('.timeline').css({
        '-webkit-filter': 'blur(20px)',
      })
    }
  },

  componentWillUpdate: function(newProps) {
    console.log('THE NEW PROPS')
    console.log(newProps)
  },

  componentDidUpdate: function() {
    /* thiss = this; */
    console.log('OTHER')
    if(this.state.editMode){
      console.log('CALLED')
      // Replace Subject 
      $('.subject').val(this.state.subject)
      $('#template-name').val(this.state.name)

      $('.summer').summernote({
        height: 200,
        toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
        ]
      })

      // Initialize Editor with html
      $('.summer').code(this.state.body)
    }
  },


  render: function() {
    subjectPlace = (this.state.editMode) ? React.DOM.input({style: {display:'inline',width:480}, className: "form-control subject"}) : this.state.subject

    if(this.state.editMode){
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-success btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-save"}), "   Save Template")

       if(this.props.initialTemplateValues.newTemplate){
         the_name = React.DOM.input({className: "form-control", 
                           id: "template-name", 
                           style: {float:'left',width:200}})
       }
    } else {
       toggleButton = React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:5}}, 
            React.DOM.i({className: "fa fa-pencil-square"}), "   Edit Template")

       the_name = React.DOM.h6({style: {float:'left'}}, 
                   React.DOM.i({className: "fa fa-file-text-o"}), " ", 
                   this.state.name
                  )
    }

    return (
      React.DOM.div({id: "editTemplate"}, 
        React.DOM.h5({className: "example-template-title"}, "Example Template Values"), 
        React.DOM.div({className: "example-template-title", 
             style: {marginLeft:215, marginTop:8}}, 
          React.DOM.a({href: "javascript:", 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-left"})), 
          React.DOM.a({href: "javascript:", 
            style: {marginLeft:5}, 
            className: "btn btn-default btn-xs"}, 
            React.DOM.i({className: "fa fa-chevron-right"}))
        ), 
        React.DOM.div({onClick: this.clickedOverlay, id: "editTemplateOverlay"}), 
          React.DOM.div({id: "editTemplateView", 
               className: "panel panel-default", 
               style: {display:'block'}}, 
               React.DOM.div({className: "panel-heading", style: {height:50}}, 
                 the_name, 
              React.DOM.a({href: "javascript:", 
                className: "btn btn-default btn-xs", 
                style: {float:'right',marginLeft:5,marginTop:5}}, 
                React.DOM.i({className: "fa fa-trash"})
              ), 
              toggleButton
            ), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.div({className: "editTemplateTitle"}, 
                React.DOM.span(null, "Subject: "), 
                subjectPlace
              ), 
             React.DOM.br(null), 
             React.DOM.div({className: "templateDetails"}, 
               React.DOM.h6({style: {marginBottom:'0'}, className: "text-muted"}, 
                 "Created by Mark on Jul. 21, 2014"
               ), 
               React.DOM.h6({style: {marginTop:'0'}, className: "text-muted"}, 
                 "last updated 7 days ago"
               )
             ), 
            React.DOM.br(null), 
            React.DOM.div({className: "panel panel-default"}, 
              React.DOM.div({className: "panel-body summer template-body"}
              )
            )
        )
      )
    )
    );
  }
});

},{}],23:[function(require,module,exports){
/** @jsx React.DOM */

var Templates = require('./templates.js.min.js');
var Schedules = require('./schedule.js.min.js');
var Campaigns = require('./campaigns.js.min.js');
var SentMail = require('./sent_mail.js.min.js');
var FollowupFeed = require('./followup_feed.js.min.js');
var CampaignDetail = require('./campaign_detail.js.min.js');
var CreateCampaignModal = require('./create_campaign.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      selectedScreen: 'Campaigns',
      selectedCampaign:'',
      prospectLists: [],
      campaigns: []
    }
  },

  deleteCampaign: function(objectId) {
    // sweetAlert
    console.log(this.state.campaigns)
    campaigns = _.filter(this.state.campaigns, function(campaign) {
      return campaign.objectId != objectId
    })
    console.log(campaigns)
    this.setState({campaigns: campaigns})
    $.ajax({
      url:'https://api.parse.com/1/classes/Campaign/'+objectId,
      type:'DELETE',
      headers:appConfig.headers,
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err) }
    })
    // persist
    // error log
  },

  componentDidMount: function() {
    thiss = this;
     company = JSON.parse(localStorage.currentUser).company
     user = appConfig.pointer('_User', JSON.parse(localStorage.currentUser).objectId)
     qry = {
       where : JSON.stringify({
         user: user,
         company: company
       }),
       include: 'prospect_list,followups,followups.template,batches',
       order: '-createdAt'
     }
     $.ajax({
       url:'https://api.parse.com/1/classes/Campaign',
      headers: appConfig.headers,
      data: qry,
      success: function(res) {
        console.log(res.results)
        thiss.setState({campaigns: res.results})
        // Find All Prospects In ProspectList that are not in any batches
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
     });
    $.ajax({
      url: 'https://api.parse.com/1/classes/ProspectList',
      data: {
        order: '-createdAt',
        where : JSON.stringify({
          user: appConfig.user,
          company: appConfig.company,
        })
      },
      headers: appConfig.headers,
      success: function(res) {
        console.log('PROSPECT LISTS')
        console.log(res.results)
        thiss.setState({prospectLists: res.results})
      },
      error: function(err) {

      }
    })


  },
  
  toggleScreen: function(screen) {
    this.setState({selectedScreen : screen})
  },

  changeSelectedCampaign: function(screen, selectedCampaign) {
    console.log(selectedCampaign)
    this.setState({
      selectedCampaign : selectedCampaign,
      selectedScreen: screen,
    })
  },

  render: function() {
    thiss = this
    console.log(this.state.selectedCampaign)
    console.log(this.state.selectedScreen)
    console.log(this.state.campaigns)
    switch (this.state.selectedScreen){
      case 'Campaigns':
        CurrentScreen = Campaigns({campaigns: thiss.state.campaigns, 
                            changeSelectedCampaign: thiss.changeSelectedCampaign, 
                            deleteCampaign: this.deleteCampaign, 
                            toggleScreen: thiss.toggleScreen})
        break;
      case 'CampaignDetail':
        CurrentScreen = CampaignDetail({
                        selectedCampaign: thiss.state.selectedCampaign, 
                      selectedCampaignObjectId: thiss.state.selectedCampaginObjectId, 
                        toggleScreen: thiss.toggleScreen})
        break;
      case 'Templates':
        CurrentScreen = Templates(null)
        break;
      case 'Overview':
        CurrentScreen = Campaigns({campaigns: thiss.state.campaigns, 
                            changeSelectedCampaign: thiss.changeSelectedCampaign, 
                            toggleScreen: thiss.toggleScreen})
        break;
      case 'Sent Mail':
        CurrentScreen = SentMail(null)
        break;
      case 'Followup Feed':
        CurrentScreen = FollowupFeed(null)
        break;
      case 'Schedules':
        CurrentScreen = Schedules(null)
        break;
    }

    return (
      React.DOM.div({className: "", style: {height:'550px'}}, 
        React.DOM.div({className: "container", style: {padding:'0',width:'100%',height:'100%'}}, 
          SideMenu({
                createCampaign: this.createCampaign, 
                prospectLists: this.state.prospectLists, 
                toggleScreen: this.toggleScreen}), 
              React.DOM.div({className: "col-md-10", 
                   style: {padding:'0',height:'100%'}}, 
            CurrentScreen
          )
        )
      )
    );
  },

  persistCampaign: function(newCampaign) {
    Campaign = {}
    Campaign.name = newCampaign.name
    Campaign.user = appConfig.pointer('_User', JSON.parse(localStorage.currentUser).objectId)
    Campaign.company = JSON.parse(localStorage.currentUser).company
    var thiss = this;

    $.ajax({
      url:'https://api.parse.com/1/classes/Campaign',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(Campaign),
      success: function(res) {
        the_campaign = _.find(thiss.state.campaigns, function(campaign){
          first = campaign.name == newCampaign.name 
          second = campaign.prospect_list == newCampaign.prospect_list
          return first && second
        })
        console.log(res)
        console.log(res.objectId)

        the_campaign.objectId = res.objectId
        campaigns = _.filter(thiss.state.campaigns, function(campaign){
          first = campaign.name == newCampaign.name 
          second = campaign.prospect_list == newCampaign.prospect_list
          return !(first && second)
        })
        campaigns.push(the_campaign)
        console.log(campaigns)

        thiss.setState({campaigns:  campaigns})

        $.ajax({
          url:'https://api.parse.com/1/classes/Campaign/'+res.objectId,
          type:'PUT',
          data: JSON.stringify({prospect_list:{
            '__type':'Pointer',
            'className':'ProspectList',
            'objectId':newCampaign.prospect_list.objectId,
          }}),
          headers:appConfig.headers,
          success: function(res){
          },
          error: function() {

          }
        })
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  createCampaign: function(newCampaign) {
    campaigns = this.state.campaigns
    campaigns.push(newCampaign)
    this.setState({campaigns: campaigns})
    console.log(newCampaign)

    $('.modal').click()
    $('.modal-backdrop').click()

    this.persistCampaign(newCampaign)
  }
});

var SideMenu = React.createClass({displayName: 'SideMenu',
  toggleScreen: function(e) {
    this.props.toggleScreen($(e.target).text().trim())
  },

  /*
    <button type="button" className="sharp btn btn-default" onClick={this.toggleScreen}>
      <i className="fa fa-file-text" /> &nbsp; Templates
    </button>
    <button type="button" className="sharp btn btn-default" onClick={this.toggleScreen}>
      <i className="fa fa-clock-o" /> &nbsp; Schedules
    </button>
  */
  createCampaignModal: function() {

  },

  render: function() {
    return (
      React.DOM.div({className: "col-md-2", 
        style: {padding:'0',height:'100%', backgroundColor:'rgb(90, 107, 119)',borderBottomLeftRadius:'3px'}}, 
        React.DOM.div({className: "btn-group-vertical", style: {width:'100%'}}, 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.span({style: {marginLeft:'27px'}}, "Overview")
          ), 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-newspaper-o"}), "  ",  
            React.DOM.span({style: {marginLeft:'4px'}}, "Followup Feed")
          ), 
          React.DOM.button({type: "button", style: {display:'none'}, 
                  className: "sharp btn btn-default"}, 
            React.DOM.i({className: "fa fa-code-fork"}), "  ",  
            React.DOM.span({style: {marginLeft:'4px'}}, "Rules")
          ), 
          React.DOM.button({type: "button", style: {display:'none'}, 
                  className: "sharp btn btn-default", onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-pie-chart"}), "   Analytics"
          ), 
          React.DOM.button({type: "button", 
                  className: "sharp btn btn-default", 
                  onClick: this.toggleScreen}, 
            React.DOM.i({className: "fa fa-paper-plane"}), "   Sent Mail"
          )
        ), 

        React.DOM.div({className: "", style: {width:'100%',textAlign:'center',marginTop:100}}, 
          React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
                'data-toggle': "modal", 'data-target': ".bs-createCampaign-modal-sm", 
                style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
            React.DOM.i({className: "fa fa-plus-circle"}), "  New Campaign"
          )
        ), 
        CreateCampaignModal({prospectLists: this.props.prospectLists, 
                             createCampaign: this.createCampaign})
      )
    );
  },

  createCampaign: function(newCampaign) {
    this.props.createCampaign(newCampaign)
  }
});

},{"./campaign_detail.js.min.js":4,"./campaigns.js.min.js":8,"./create_campaign.js.min.js":11,"./followup_feed.js.min.js":24,"./schedule.js.min.js":45,"./sent_mail.js.min.js":47,"./templates.js.min.js":58}],24:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // FollowupFeed
  getInitialState: function() {
    return {
      scheduledFollowups: []
    }
  },


  render: function() {
    scheduledFollowups = []
    for(i=0;i< this.state.scheduledFollowups.length; i++){ 
      scheduledFollowups.push(ScheduledFollowupRow(null))
    }

    return (
      React.DOM.div({style: {overflow:'auto', height:550}}, 
        React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Prospect Name"), 
            React.DOM.th(null, "Prospect Email"), 
            React.DOM.th({style: {textAlign:'center'}}, "Status")
          ), 
          React.DOM.tbody(null, 
            scheduledFollowups
          )
        )
      )
    );
  }
});

var ScheduledFollowupRow = React.createClass({displayName: 'ScheduledFollowupRow',
  render: function() {
    return (
      React.DOM.tr(null

      )
    );
  }
})

},{}],25:[function(require,module,exports){
/** @jsx React.DOM */
var SendEmailModal = require('./send_email_modal.js.min.js')
var TimelineDayElement = require('./timeline_day_element.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  // FollowupTimeline
  getInitialState: function() {
    initialFollowups = this.props.initialFollowups
    initialFollowups = (initialFollowups) ? initialFollowups : []
    batches = this.props.selectedCampaign.batches
    batches = (batches) ? batches : []
    return {
      followups: _.compact(initialFollowups),
      loading: false,
      currentTemplate:'',
      currentBatch: '',
      batches : batches
    }
  },

  componentDidMount: function() {
    thiss = this;
    $('.day').tooltip({
      placement: 'right',
      title:'+ Add a follow-up'
    })

    console.log(this.props.selectedCampaign)
     company = JSON.stringify(JSON.parse(localStorage.currentUser).company)
     currentCampaign = appConfig.pointer('Campaign', this.props.selectedCampaign.objectId)
     $.ajax({
       url:'https://api.parse.com/1/classes/Followup',
       type:'GET',
       headers: appConfig.headers,
       data: {
         where: JSON.stringify({
           campaign: currentCampaign,
           company: appConfig.company
         }),
         include:'template',
       },
       success: function(res) {
         console.log('followup timeline')
         console.log(res.results)
       },
       error: function(err) {
         console.log('error')
         console.log(err)
       }
     })
  },

  addFollowupSentToBatch: function(batch, followup) {
    batches = _.map(this.state.batches, function(_batch) {
                  if(_batch.objectId == batch.objectId) {
                    if(_batch.followups)
                      _batch.followups.push(followup)
                    else
                      _batch.followups = [followup]
                  }
                  return _batch
              })
    // Persist
  },
  
  render: function() {
    timelineElements = []
    followups = this.state.followups

    batches = _.map(this.state.batches, function(batch) {
      if(batch){
        now = moment().startOf('day').valueOf()
        batch.currentDay = moment(batch.started).diff(moment(now),  'days') * -1
        return batch
      }
    })
    batches = _.compact(batches)

    for(i=0;i< 31;i++){
      followup = _.findWhere(this.state.followups, {day: i})
      var elementType = (followup) ? true : false
      var currentTemplate = (followup) ? followup.template : false
      var addTemplateMode = (followup) ? followup.addTemplateMode : true
      campaign = this.props.selectedCampaign

      currentBatch = {}
      batch_started_today = false
      alreadySent = false
      batchCount = undefined
      if(i == 0) {
        batchCount = (batches) ? this.props.newProspects.length : this.props.prospects.length
      } else {
        batch = _.findWhere(batches, {currentDay: i})
        if(batch) {
          currentBatch = batch.objectId
          console.debug(batch.objectId)
          batchCount = "~"
          if(followup) {
            _batches = followup.batches
            alreadySent = _.findWhere(_batches, _.pick(batch,'objectId'))
          }
        }
      }

      timelineElements.push(React.DOM.div(null, TimelineDayElement({
                                    dayCount: i, 
                                    elementType: !elementType, 
                                    currentTemplate: currentTemplate, 
                                    batchCount: batchCount, 
                                    currentBatch: currentBatch, 
                                    alreadySent: alreadySent, 
                                    addTemplateMode: addTemplateMode, 
                                    templates: this.props.templates, 
                                    newProspects: this.props.newProspects, 
                                    addFollowup: this.addFollowup, 
                                    editFollowup: this.editFollowup, 
                                    saveFollowup: this.saveFollowup, 
                                    removeFollowup: this.removeFollowup, 
                                 addFollowupSentToBatch: this.addFollowupSentToBatch, 
                                    batches: this.props.selectedCampaign.batches, 
                                    prospectListCount: this.props.prospectListCount, 
                                    setCurrentBatch: this.setCurrentBatch, 
                                    setCurrentTemplate: this.setCurrentTemplate})
                                  ))

      if(i == 0 && _.findWhere(batches, {currentDay: 0})){
          currentBatch = _.findWhere(batches, {currentDay: 0}).objectId
          console.debug('0.5')
          console.debug(currentBatch)
          batchCount = "~"
          timelineElements.push(React.DOM.div(null, TimelineDayElement({
                                  dayCount: 0.5, 
                                  batchCount: batchCount, 
                                  currentBatch: currentBatch, 
                                  newProspects: this.props.newProspects, 
                                  elementType: true, 
                                  batches: this.props.selectedCampaign.batches, 
                                  prospectListCount: this.props.prospectListCount, 
                                  setCurrentBatch: this.setCurrentBatch})
                                ))
      }
    }
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "timeline", 
             style: {height:'100%',backgroundColor:'rgb(90, 107, 119)', width:5,marginTop:-35}}, 
             timelineElements
        ), 
        SendEmailModal({prospects: this.props.prospects, 
                        selectedCampaign: this.props.selectedCampaign, 
                        newProspects: this.props.newProspects, 
                        addFollowupSentToBatch: this.addFollowupSentToBatch, 
                        currentBatch: this.state.currentBatch, 
                        currentTemplate: this.state.currentTemplate})
      )
    );
  },

  createFollowup: function() {
    //
  },         

  addFollowup: function(day) {
    //console.log('called template edit menu')
    followups = this.state.followups
    followups.push({addTemplateMode: true, day: day})
    this.setState({ followups: followups })
  },

  editFollowup: function(day) {
    // find template set editmode is false
    followups = _.map(this.state.followups, function(followup) {
      if(followup.day == day){ followup.addTemplateMode = true }
      return followup
    })
    this.setState({followups: followups})
  },

  saveFollowup: function(day, chosenTemplate) {
    new_followups = _.map(this.state.followups, function(followup) {
      if(followup.day == day){
        followup.addTemplateMode = false
        followup.template = chosenTemplate
      }
      return followup
    })
    this.setState({followups: new_followups})
    followup = _.findWhere(new_followups, {day: day})

      if(followup.objectId){
        url = "/"+followup.objectId; type="PUT"
        data = {template: appConfig.pointer('Template', chosenTemplate.objectId)}
      } else {
        url = ""; type="POST";

          data = {
            day: day,
            campaign : appConfig.pointer('Campaign', 
                                         this.props.selectedCampaign.objectId),
            template: appConfig.pointer('Template', chosenTemplate.objectId),
          }
      }

    thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/Followup'+url,
      type:type,
      data:JSON.stringify(data),
      headers:appConfig.headers,
      success: function(res) {
        new_followups = _.map(new_followups, function(followup) {
          if(followup.day == day) { followup.objectId = false }
          return followup
        })
        thiss.setState({followups: new_followups})

        console.log(res)
        $.ajax({
          url:'https://api.parse.com/1/classes/Campaign/'+thiss.props.selectedCampaign.objectId,
          type:'PUT',
          data:JSON.stringify({followups: {
            __op: 'AddUnique',
            objects:[appConfig.pointer('Followup', res.objectId)]
          }}),
          headers:appConfig.headers,
          success: function() { },
          error: function() { }
        })
      },
      error: function() { },
    })
  },

  removeFollowup: function(day) {
    followups = []
    for(i=0;i< this.state.followups.length;i++)
      if(this.state.followups[i].day != day)
        followups.push(this.state.followups[i])
      
    for(i=0;i< this.state.followups.length;i++)
      if(this.state.followups[i].day == day)
        break
    
    this.setState({followups: followups}) 
    id = this.state.followups[i]

    thiss = this;
    if(id) {
      id = id.objectId
      $.ajax({
        url:'https://api.parse.com/1/classes/Followup/'+id,
        headers:appConfig.headers,
        type:'DELETE',
        success: function(res) { console.log(res) }
      })

     console.log('REMOVE ARRAY')
      $.ajax({
        url:'https://api.parse.com/1/classes/Campaign/'+thiss.props.selectedCampaign.objectId,
        headers:appConfig.headers,
        type:'PUT',
        data: JSON.stringify({
          followups: {
            __op : 'Remove',
            objects: [appConfig.pointer('Followup', id)]
          }
        }),
        success: function(res){ console.log(res) },
        error: function() { }
      })
    }
  },

  setCurrentBatch: function(currentBatch) {
    this.setState({currentBatch: currentBatch})
  },

  setCurrentTemplate: function(template) {
    this.setState({currentTemplate: template })
  }
});

},{"./send_email_modal.js.min.js":46,"./timeline_day_element.js.min.js":62}],26:[function(require,module,exports){
/** @jsx React.DOM */

data = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // free trial
  open: function() {
    console.log('open')
    handler.open({
      name: 'Customero',
      description: 'Get 900 free email credits!',
      amount: 0,
      panelLabel: "Start Your Free Trial!",
      open: function() {
        console.log($('.close'))
        $('.close').hide()
      },
      closed: function() {
        console.log("closed")
      }
    });
  },

  componentDidMount: function() {
    $('body').css({overflow:'hidden'})


    //console.log(this.getDOMNode())
    /*
    $(this.getDOMNode()).append(' <form action="" method="POST"> <script src="https://checkout.stripe.com/checkout.js" class="stripe-button" data-key="pk_test_4T5Pftl4ho0EgFVo1G7OKRda" data-amount="2000" data-name="Demo Site" data-description="2 widgets ($20.00)" data-image=""> </script> </form>')

  setTimeout(function() {
    console.log($('.stripe-button-el').html())
    $('.stripe-button-el').click()

  }, 400)
*/

  },

  render: function() { 
  data = data()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div(null, 
      React.DOM.div({id: "signup"}, " "), 

      React.DOM.div(null, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Get 900 free email credits. 100% refund guarantee.  We will only start charging your card after 1 month.")

      ), 

      React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
        React.DOM.div({className: "", style: {marginLeft:34}}, 
        imgs_1, 
        imgs_2
        )
      )
      )
    )
  }
});

},{"../lib/data.min.js":67}],27:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Spinner
  render: function() {
    return (
      React.DOM.div({className: "horizantal-spinner"}, 
        React.DOM.div({className: "hoz-bounce1"}), 
        React.DOM.div({className: "hoz-bounce2"}), 
        React.DOM.div({className: "hoz-bounce3"})
      )
    )
  }
})

},{}],28:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Landing Page
  login: function() {
    console.log('login')
    email = $('#email').val()
    password = $('#password').val()
    p = {"X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
         "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"}
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: p,
      type:'GET',
      data: {
        'username':email,
        'password':password
      },
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  render: function() {
    $('body').css({overflow:'auto'})

    return (
      React.DOM.div({className: ""}, 
        React.DOM.div({className: "background-image"}), 
        React.DOM.nav({className: "thenavbar navbar navbar-default navbar-fixed-top", role: "navigation", style: {padding:70}}, 
          React.DOM.div({className: "container-fluid"}, 
            React.DOM.a({className: "the-title tk-foco brand navbar-brand", style: {fontWeight:'100'}, 
                href: "#"}, 
              "Customero", 
              React.DOM.span({style: {fontSize:'22px',marginLeft:'30px'}}, "Supercharge your sales! ")
            )
          ), 
          React.DOM.a({href: "#login", className: "btn-lg btn login-btn"}, "Log In")
        ), 
        React.DOM.div({className: "col-md-12", style: {marginTop:'100px',paddingTop:'100px'}}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'bold',textAlign:'center',fontSize:'56px'}}, " Generate High Quality Prospect Lists "), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',fontSize:'56px'}}, " Accelerate Sales "), 
          React.DOM.a({href: "#signup", className: "btn-lg btn-success btn start-trial"}, "Start Your Free Trial Today"), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " ")
          )
        ), 
        React.DOM.div({className: "gradient"}, " ")
      )
    );
  }
});

},{}],29:[function(require,module,exports){
/** @jsx React.DOM */

var MarketingFooter = require('./marketing_footer.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  // Landing Page
  login: function() {
    console.log('login')
    email = $('#email').val()
    password = $('#password').val()
    p = {"X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
         "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"}
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: p,
      type:'GET',
      data: {
        'username':email,
        'password':password
      },
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },
  componentDidMount: function() {
    particles()
  },

  render: function() {
    $('body').css({overflow:'auto'})

    return (
      React.DOM.div({className: "particles-js", id: "particles-js"}, 
        React.DOM.nav({className: "thenavbar navbar navbar-default", role: "navigation", style: {padding:70}}, 
          React.DOM.div({className: "container-fluid", style: {fontFamily:'proxima-nova', fontSize:12}}, 
            React.DOM.a({href: "#"}, 
            React.DOM.img({className: "", src: "build/img/full-logo-5.png", style: {width:220}})
          ), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {marginRight:0,fontSize:11,marginTop:-70}}, 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#login"}, "LOGIN")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "http://resources.customerohq.com/v1.0/blog"}, "BLOG")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "http://resources.customerohq.com"}, "RESOURCES")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "http://resources.customerohq.com/v1.0/discuss"}, "KNOWLEDGE BASE")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#"}, "+1905-616-7602 ", React.DOM.i({className: "fa fa-phone"})))
              )
          ), 
          React.DOM.a({href: "#signup", className: "btn-lg btn login-btn", style: {fontFamily:'proxima-nova'}}, "TRY IT"), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {width:600,fontSize:13,marginRight:100,marginTop:-45}}, 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'block'}}, " "), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "PRODUCT")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "DATA")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#product/features"}, "FEATURES")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "INTEGRATIONS")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#pricing"}, "PRICING")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#services"}, "SERVICES"))
              )
        ), 

        React.DOM.div({className: "row", style: {margin:0}}, 
        React.DOM.div({className: "gradient-2"}), 
        React.DOM.div({className: "the-background-image"}), 
        React.DOM.div({className: "col-md-12 col-sm-12", style: {paddingTop:'80px'}, id: ""}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',color:'white',textAlign:'center',fontSize:'38px',fontFamily:'Open Sans',fontSize:'40px'}}, 
            "Generate High Quality Prospect Lists" 
          ), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',color:'white',fontSize:'46px',fontFamily:'Open Sans', fontStyle:'italic'}}, 
            "Find New Customers Faster"
          ), 
          React.DOM.a({href: "#signup", className: "btn-lg btn-success btn start-trial", style: {display:'none'}}, "Start Your Free Trial Today"), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 

              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " "), 
        React.DOM.div({className: "the-gradient-1"})
          )
        )
      ), 

        React.DOM.div({className: "container product-header chrome-bar", 
             style: {height:100,paddingTop:45, marginTop:113}}, 
             React.DOM.div({className: "col-md-4", style: {textAlign:'center',fontFamily:'proxima-nova', fontSize:12}}, React.DOM.i({className: "fa fa-line-chart"}), " GROW PIPELINE FAST"), 
          React.DOM.div({className: "col-md-4", style: {textAlign:'center',fontFamily:'proxima-nova', fontSize:12}}, React.DOM.i({className: "fa fa-search"}), " IDENTIFY HIGH-VALUE PROSPECTS"), 
          React.DOM.div({className: "col-md-4", style: {textAlign:'center',fontFamily:'proxima-nova', fontSize:12}}, React.DOM.i({className: "fa fa-coffee"}), " CONNECT WITH DECISION MAKERS  ")
        ), 

      React.DOM.div({className: "container", style: {fontFamily:'open-sans'}}, 
        React.DOM.div({className: "row", style: {height:300}}, 
          React.DOM.div({className: "col-md-offset-1 col-md-6"}, 
            React.DOM.h1({style: {color:'rgb(0, 132, 255)'}}, " Grow Pipeline Fast"), " ", React.DOM.br(null), 
            React.DOM.h5({style: {fontWeight:100,lineHeight:1.7, fontStyle:'italic'}}, 
              "Automate list building through the power of social networks and sync contact information directly to your CRM"
            ), 
            React.DOM.h5({className: "text-muted", style: {fontWeight:100,lineHeight:1.7}}, 
              " Customero searches through social profiles on the web to find you the exact prospects you're looking for. Add prospects to lists with one click. Once you have your list you can start qualifying leads and tracking down new leads."
            )

          ), 
        React.DOM.div({className: "col-md-4"}, " ", React.DOM.i({className: "fa fa-line-chart lp-icon"}), 
            React.DOM.div({className: "col-md-1"}, " ")
        )
        )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #ecedee', borderTop: '1px solid #ecedee', backgroundColor:'#f5f7f9',fontFamily:'open-sans'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300}}, 
            React.DOM.div({className: "col-md-4 col-md-offset-1"}, React.DOM.i({className: "fa fa-search lp-icon"}), "  "), 
            React.DOM.div({className: "col-md-6"}, 
            React.DOM.h1({style: {color:'rgb(0, 132, 255)'}}, 
              "Identify High-Value Prospects In Real Time"
            ), 
            React.DOM.h5({style: {fontWeight:100,lineHeight:1.7, fontStyle:'italic'}}, " ", React.DOM.br(null), 
              "Customero tracks over 2 million US, Canadian and International companies and our database is growing daily." 
            ), 
            React.DOM.h5({className: "text-muted", style: {fontWeight:100, lineHeight:1.7}}, 
          "Customero sits at the top of your sales funnel, proactively identifying and delivering high value prospects. This enables you to be first to call on a prospect with a high quality signal - such as funding, product launch, hiring, or job posting and many others."
            )
            ), 
            React.DOM.div({className: "col-md-1"}, " ")
          )
        )
      ), 

      React.DOM.div({style: {fontFamily:'open-sans'}}, 
          React.DOM.div({className: "container"}, 
            React.DOM.div({className: "row", style: {height:300}}, 
              React.DOM.div({className: "col-md-6 col-md-offset-1"}, " ", React.DOM.h1({style: {color:'rgb(0, 132, 255)'}}, "Connect With Decision Makers "), " ", React.DOM.br(null), 
                React.DOM.h5({style: {fontWeight:100,lineHeight:1.7, fontStyle:'italic'}}, 
                  "Create hyper-targeted email campaigns using our data-driven sales automation platform."
                ), 
                React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}, className: "text-muted"}, 
                  " With Customero Sales Tracking, Templates and Analytics, put the most powerful sales acceleration platform to work for you and your team."
                )

              ), 
              React.DOM.div({className: "col-md-4"}, " ", React.DOM.i({className: "fa fa-coffee lp-icon"}), " "), 
            React.DOM.div({className: "col-md-1"}, " ")
            )
          )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #edeeef', borderTop: '1px solid #edeeef', 
                   paddingTop:50, backgroundColor:'#f5f8fa'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:200, textAlign:'center'}}, 
            React.DOM.h2(null, "Give Customero a try. Free 14-day trial available for all plans."), 
            React.DOM.br(null), 
            React.DOM.a({href: "#signup", className: "btn btn-success btn-lg start-trial", style: {marginTop:10}}, 
              "START A NO-RISK FREE TRIAL  ", React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:18}})
            )
          )
        )
      ), 

      React.DOM.div({class: "tmp-footer"})

      )
    );
  }
});


},{"./marketing_footer.js.min.js":34}],30:[function(require,module,exports){
/** @jsx React.DOM */
var MarketingFooter = require('./marketing_footer.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div({className: "particles-js", id: "particles-js"}, 
        React.DOM.nav({className: "thenavbar navbar navbar-default", role: "navigation", style: {padding:70}}, 
          React.DOM.div({className: "container-fluid", style: {fontFamily:'proxima-nova', fontSize:12}}, 
            React.DOM.a({href: "#"}, 
            React.DOM.img({className: "", src: "build/img/full-logo-5.png", style: {width:220}})
          ), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {marginRight:0,fontSize:11,marginTop:-70}}, 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#"}, "LOGIN")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#"}, "BLOG")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "RESOURCES")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "KNOWLEDGE BASE")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "+1905-616-7602 ", React.DOM.i({className: "fa fa-phone"})))
              )
          ), 
          React.DOM.a({href: "#signup", className: "btn-lg btn login-btn", style: {fontFamily:'proxima-nova'}}, "TRY IT"), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {width:600,fontSize:13,marginRight:100,marginTop:-45}}, 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'block'}}, " "), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "PRODUCT")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "DATA")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav active", style: {display:'block'}, href: "#product/features"}, "FEATURES")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "INTEGRATIONS")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#pricing"}, "PRICING")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#services"}, "SERVICES"))
              )
        ), 
        React.DOM.div({className: "row", style: {margin:0}}, 
        React.DOM.div({className: "gradient-2"}), 
        React.DOM.div({className: "features-background-image"}), 
        React.DOM.div({className: "col-md-12 col-sm-12", style: {paddingTop:'80px'}}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',color:'white',textAlign:'center',fontSize:'38px',fontFamily:'Open Sans',fontSize:'40px'}}, 
            "Close more deals with powerful prospecting features."
          ), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',color:'white',fontSize:'46px',fontFamily:'Open Sans', fontStyle:'italic',display:'none'}}, " Accelerate Sales "), 
          React.DOM.a({href: "#signup", className: "btn-lg btn-success btn start-trial", style: {display:'none'}}, "Start Your Free Trial Today"), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 

              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " "), 
        React.DOM.div({className: "the-gradient-1"}), " ")
        )
      ), 
      MarketingBody(null)
    )
    )
  },
  componentDidMount: function() {
    console.log('features')
particlesJS('particles-js', {
    particles: {
      color: '#fff',
      shape: 'circle',
      opacity: 1,
      size: 2.5,
      size_random: true,
      nb: 100,
      line_linked: {
        enable_auto: true,
        distance: 250,
        color: '#fff',
        opacity: 0.5,
        width: 1,
        condensed_mode: {
          enable: false,
          rotateX: 600,
          rotateY: 600
        }
      },
      anim: {
        enable: true,
        speed: 2.5
      }
    },
    interactivity: {
      enable: true,
      mouse: {
        distance: 250
      },
      detect_on: 'canvas',
      mode: 'grab',
      line_linked: {
        opacity: 0.5
      },
      events: {
        onclick: {
          push_particles: {
            enable: true,
            nb: 4
          }
        }
      }
    },
    retina_detect: true
});
$('canvas').css({
  'width': '100%',
  'height': '376px',
  'background-color': 'rgba(0,0,0,0)',
  'top': '122px',
  'position': 'absolute',
})
    
    /*
    $(window).scroll(function (event) {
        var scroll = $(window).scrollTop();
        var top = $('.product-header').offset().top
        if(scroll > top){
          pos = $('.product-header').css('position')
          console.log(pos)
          if(pos != "static" || pos != "fixed"){
              $('.product-header').css({
                position: "fixed",
                top: 0,
                "z-index": 100000000,
              })
          }
        }else {
          $('.product-header').removeAttr( 'style' );
        }
    })
    */
  }
})

var MarketingBody = React.createClass({displayName: 'MarketingBody',
  render: function() {
    return (
      React.DOM.div({style: {marginTop:180, fontFamily:'open-sans'}}, 
        React.DOM.div({className: "container product-header chrome-bar", 
             style: {height:100,paddingTop:45, fontFamily:'proxima-nova', fontSize:12,textAlign:'center'}}, 
             React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-wifi"}), " SIGNALS"), 
          React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-cloud-download"}), " MINING JOBS"), 
          React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-globe"}), " TERRITORY MANAGEMENT"), 
          React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-users"}), " SOCIAL PROSPECT DATA"), 
          React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-envelope"}), " CAMPAIGNS"), 
          React.DOM.div({className: "col-md-2"}, React.DOM.i({className: "fa fa-database"}), " CRM INTEGRATION")
        ), 

      React.DOM.div({className: "container"}, 
        React.DOM.div({className: "row", style: {height:300}, id: "signals"}, 
          React.DOM.div({className: "col-md-6 col-md-offset-1"}, React.DOM.br(null), React.DOM.br(null), " ", React.DOM.h1(null, " Signals "), 
            React.DOM.br(null), 
            React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
            "Your personal radar system for sales prospecting. The more companies you follow, the more trigger events you’ll find, and the more prospects you’ll have in your sales funnel. Start using signal-based selling to increase sales!"
          )
          ), 
        React.DOM.div({className: "col-md-4", style: {textAlign:'center',paddingTop:80}}, " ", React.DOM.i({className: "fa fa-wifi lp-icon"}), " "), 
        React.DOM.div({className: "col-md-1"})
        )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #ecedee', borderTop: '1px solid #ecedee', backgroundColor:'#f5f7f9'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300}}, 
            React.DOM.div({className: "col-md-4 col-md-offset-1", style: {paddingTop:80,textAlign:'center'}}, 
              React.DOM.i({className: "fa fa-cloud-download lp-icon"}), " "), 
            React.DOM.div({className: "col-md-6"}, " ", React.DOM.br(null), React.DOM.br(null), React.DOM.h1(null, " Mining Jobs "), 
              React.DOM.br(null), 
              React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
              "Generate highly specific prospect lists in minutes instead of days with on demand scraping jobs." + ' ' +
              "Automate search queries to find companies and titles prospects."
            )
            ), 
            React.DOM.div({className: "col-md-1"})
          )
        )
      ), 

      React.DOM.div(null, 
          React.DOM.div({className: "container"}, 
            React.DOM.div({className: "row", style: {height:300}}, 
              React.DOM.div({className: "col-md-6 col-md-offset-1"}, React.DOM.br(null), React.DOM.br(null), " ", React.DOM.h1(null, "Territory Management "), 
                React.DOM.br(null), 
              React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
                "Organize companies that match your ideal customer profile by territory and" + ' ' + 
                "be confident that your sales reps are not missing a single opportunity."
              )
              ), 
            React.DOM.div({className: "col-md-4", style: {textAlign:'center',paddingTop:80}}, " ", React.DOM.i({className: "fa fa-globe lp-icon"}), " "), 
            React.DOM.div({className: "col-md-1"})
            )
          )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #ecedee', borderTop: '1px solid #ecedee', backgroundColor:'#f5f7f9'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300}}, 
            React.DOM.div({className: "col-md-4 col-md-offset-1", style: {paddingTop:80,textAlign:'center'}}, 
              React.DOM.i({className: "fa fa-users lp-icon"}), " "), 
            React.DOM.div({className: "col-md-6"}, " ", React.DOM.br(null), React.DOM.br(null), React.DOM.h1(null, "Social Prospect Data "), 
              React.DOM.br(null), 
              React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
              "You can run your search from anywhere on the web using our Chrome browser extension. Search for titles, industry, location, social network groups, and more. Build highly specific and targeted searches."
            )
            ), 
            React.DOM.div({className: "col-md-1"})
          )
        )
      ), 

      React.DOM.div(null, 
          React.DOM.div({className: "container"}, 
            React.DOM.div({className: "row", style: {height:300}}, 
              React.DOM.div({className: "col-md-6 col-md-offset-1"}, " ", React.DOM.br(null), React.DOM.br(null), React.DOM.h1(null, " Campaigns "), 
                React.DOM.br(null), 
              React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
                "Build your own unique process for sales development emails, phone calls, and other activity. Customize each email with references to social profiles, blogs, or specific interests."
              )
              ), 
            React.DOM.div({className: "col-md-4", style: {textAlign:'center',paddingTop:80}}, " ", React.DOM.i({className: "fa fa-envelope lp-icon"}), " "), 
            React.DOM.div({className: "col-md-1"})
            )
          )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #ecedee', borderTop: '1px solid #ecedee', backgroundColor:'#f5f7f9'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300}}, 
            React.DOM.div({className: "col-md-4 col-md-offset-1", style: {paddingTop:80,textAlign:'center'}}, 
              React.DOM.i({className: "fa fa-database lp-icon"}), " "), 
            React.DOM.div({className: "col-md-6"}, " ", React.DOM.br(null), React.DOM.br(null), React.DOM.h1(null, " CRM Integration "), 
              React.DOM.br(null), 
              React.DOM.h5({style: {fontWeight:100,lineHeight:1.7}}, 
              "Enjoy Native Integration with all Major CRMs"
            )
            ), 
            React.DOM.div({className: "col-md-1"})
          )
        )
      ), 

      React.DOM.div({style: {borderBottom: '1px solid #edeeef', borderTop: '1px solid #edeeef', 
                   paddingTop:50, backgroundColor:'#f5f8fa'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:200, textAlign:'center'}}, 
            React.DOM.h2(null, "Give Customero a try. Free 14-day trial available for all plans."), 
            React.DOM.br(null), 
            React.DOM.a({href: "#signup", className: "btn btn-success btn-lg start-trial", style: {marginTop:10}}, 
              "START A NO-RISK FREE TRIAL  ", React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:18}})
            )
          )
        )
      )
    )

    )
  }
})

},{"./marketing_footer.js.min.js":34}],31:[function(require,module,exports){
/** @jsx React.DOM */
var MarketingFooter = require('./marketing_footer.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div({className: "particles-js", id: "particles-js"}, 
        React.DOM.nav({className: "thenavbar navbar navbar-default", role: "navigation", style: {padding:70}}, 
          React.DOM.div({className: "container-fluid", style: {fontFamily:'proxima-nova', fontSize:12}}, 
            React.DOM.a({href: "#"}, 
            React.DOM.img({className: "", src: "build/img/full-logo-5.png", style: {width:220}})
          ), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {marginRight:0,fontSize:11,marginTop:-70}}, 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#"}, "LOGIN")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#"}, "BLOG")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "RESOURCES")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "KNOWLEDGE BASE")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#pricing"}, "+1905-616-7602 ", React.DOM.i({className: "fa fa-phone"})))
              )
          ), 
          React.DOM.a({href: "#signup", className: "btn-lg btn login-btn", style: {fontFamily:'proxima-nova'}}, "TRY IT"), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {width:600,fontSize:13,marginRight:100,marginTop:-45}}, 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'block'}}, " "), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "PRODUCT")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "DATA")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav active", style: {display:'block'}, href: "#product/features"}, "FEATURES")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "INTEGRATIONS")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#pricing"}, "PRICING")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#services"}, "SERVICES"))
              )
        ), 
        React.DOM.div({className: "row", style: {margin:0}}, 
        React.DOM.div({className: "gradient-2"}), 
        React.DOM.div({className: "services-background-image"}), 
        React.DOM.div({className: "col-md-12 col-sm-12", style: {paddingTop:'80px'}}, 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',color:'white',textAlign:'center',fontSize:'38px',fontFamily:'Open Sans',fontSize:'40px'}}, 
            "Your On-Demand Sales Development Team"
          ), 
          React.DOM.h1({style: {color:'#1ca3fd',fontWeight:'100',textAlign:'center',color:'white',fontSize:'46px',fontFamily:'Open Sans', fontStyle:'italic'}}, "   "), 

          React.DOM.div({className: "panel panel-default", style: {display:'none'}}, 
          React.DOM.div({className: "panel-heading"}, " "), 
            React.DOM.div({className: "panel-body"}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg", style: {fontWeight:'100',fontSize:'22px'}}), 
              React.DOM.br(null), 

              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-success btn-lg", style: {display:'block',backgroundColor:'#1ca3fd'}}, "Log In")
              )
            ), 
          React.DOM.div({className: "panel-footer"}, " "), 
        React.DOM.div({className: "the-gradient-1"}), " ")
        )
      ), 
      React.DOM.br(null), 
      React.DOM.br(null), 
      MarketingBody(null), 
      MarketingFooter(null)
    )
    )
  }
})

var MarketingBody = React.createClass({displayName: 'MarketingBody',
  render: function() {
    return (
      React.DOM.div({style: {marginTop:70,fontFamily:'open-sans'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300, textAlign:'center'}}, 
            React.DOM.br(null), " ", React.DOM.br(null), 
            React.DOM.div({className: "col-md-12"}, " ", React.DOM.h1(null, 
                "Building a Cold Calling 2.0 team can take 3 to 6 months and $100k+."
            ), 
            React.DOM.h2({style: {fontStyle:'italic'}}, 
            "Start a Predictable Revenue outbound sales program in 48 hours."
            )
          
            )
          )
        ), 

      React.DOM.div({style: {borderBottom: '1px solid #ecedee', borderTop: '1px solid #ecedee', backgroundColor:'#f5f7f9', textAlign:'center'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:300}}, 
              React.DOM.h1(null, "How It Works"), 
            React.DOM.div({className: "col-md-3"}, 
              "We have a dedicated fully-trained inside sales team ."
            ), 
            React.DOM.div({className: "col-md-3"}, 
              "We use Customero and other proprietary databases to find" + ' ' +
              "the best prospects for your business"
            ), 
            React.DOM.div({className: "col-md-3"}, 
              "We reach out to potential customers with tailored messages"
            ), 
            React.DOM.div({className: "col-md-3"}, 
              "View your leads in your CRM or as a .csv"
            )
          )
        )
      ), 

      React.DOM.div(null, " ", React.DOM.div({className: "container"}, 
            React.DOM.div({className: "row", style: {height:300, textAlign:'center'}}, 

              React.DOM.h1(null, "Why we're different"), 
            React.DOM.div({className: "col-md-3"}, 
              React.DOM.h4(null, "Research customized to you.")
            ), 
            React.DOM.div({className: "col-md-3"}, 
              React.DOM.h4(null, "Effective, targeted campaigns.")
            ), 
            React.DOM.div({className: "col-md-3"}, 
              React.DOM.h4(null, "Best in class technology.")
            ), 
            React.DOM.div({className: "col-md-3"}, 
              React.DOM.h4(null, "A scalable, on-demand team.")
            )
            )
          ), " "), 

      React.DOM.div({style: {borderBottom: '1px solid #edeeef', borderTop: '1px solid #edeeef', 
                   paddingTop:50, backgroundColor:'#f5f8fa', textAlign:'center'}}, 
        React.DOM.div({className: "container"}, 
          React.DOM.div({className: "row", style: {height:200, textAlign:'center'}}, 
            React.DOM.h2(null, 
              "Plans that grow with you, adjust at any time."
            ), 
            React.DOM.br(null), 
            React.DOM.a({href: "javascript:", className: "btn btn-success btn-lg start-trial", style: {marginTop:10}}, 
              "SCHEDULE A FREE DEMO  ", React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:18}})
            )
          )
        )
      )
    )
    )
  },
  componentDidMount: function() {
    console.log('features')
particlesJS('particles-js', {
    particles: {
      color: '#fff',
      shape: 'circle',
      opacity: 1,
      size: 2.5,
      size_random: true,
      nb: 100,
      line_linked: {
        enable_auto: true,
        distance: 250,
        color: '#fff',
        opacity: 0.5,
        width: 1,
        condensed_mode: {
          enable: false,
          rotateX: 600,
          rotateY: 600
        }
      },
      anim: {
        enable: true,
        speed: 2.5
      }
    },
    interactivity: {
      enable: true,
      mouse: {
        distance: 250
      },
      detect_on: 'canvas',
      mode: 'grab',
      line_linked: {
        opacity: 0.5
      },
      events: {
        onclick: {
          push_particles: {
            enable: true,
            nb: 4
          }
        }
      }
    },
    retina_detect: true
});
$('canvas').css({
  'width': '100%',
  'height': '376px',
  'background-color': 'rgba(0,0,0,0)',
  'top': '122px',
  'position': 'absolute',
})
    
    /*
    $(window).scroll(function (event) {
        var scroll = $(window).scrollTop();
        var top = $('.product-header').offset().top
        if(scroll > top){
          pos = $('.product-header').css('position')
          console.log(pos)
          if(pos != "static" || pos != "fixed"){
              $('.product-header').css({
                position: "fixed",
                top: 0,
                "z-index": 100000000,
              })
          }
        }else {
          $('.product-header').removeAttr( 'style' );
        }
    })
    */
  }
})

},{"./marketing_footer.js.min.js":34}],32:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // LoadingSpinner
  render: function() {
    return (
    React.DOM.div({className: "spinner", style: {marginTop:'180px'}}, 
      React.DOM.div({className: "spinner-container container1"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container2"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      ), 
      React.DOM.div({className: "spinner-container container3"}, 
        React.DOM.div({className: "circle circle1"}), 
        React.DOM.div({className: "circle circle2"}), 
        React.DOM.div({className: "circle circle3"}), 
        React.DOM.div({className: "circle circle4"})
      )
    )
    )
  }
});

},{}],33:[function(require,module,exports){
/** @jsx React.DOM */

theData = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // SignUp
  componentDidMount: function() {
    //$('body').css({overflow:'hidden'})
    var thiss = this;
    $("input").keypress(function(event) {
        if (event.which == 13) {
          event.preventDefault();
          thiss.login()
        }
    });
  },

  login: function() {
    console.log('login')
    $.ajax({
      url:'https://api.parse.com/1/login',
      headers: appConfig.headers,
      type:'GET',
      data: {
        'username':$('#email').val(),
        'password':$('#password').val()
      },
      beforeSend: function() { },
      success:function(res) {
        //alertify.success('Logging in...')
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        alertify.error('There was an error with your login request. Please try again')
      }
    });
  },

  render: function() { 
    data = theData()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div({style: {height:'100%'}}, 
      React.DOM.div({id: "signup", style: {paddingTop:50}}, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Generate high quality prospect lists. Accelerate Sales."), 
          React.DOM.div({className: "panel panel-default login-info", style: {display:'block'}}, 
            React.DOM.div({className: "panel-body", style: {fontFamily:'proxima-nova',fontWeight:'bold'}}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg"}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg"}), 
              React.DOM.br(null), 

              React.DOM.a({href: "javascript:", onClick: this.login, className: "btn btn-gradient btn-lg btn-primary", style: {borderRadius:3, display:'block',backgroundColor:'#1ca3fd',fontFamily:'proxima-nova',fontWeight:'bold'}}, "LOG IN")

              )
            )
          )
      ), 

        React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
          React.DOM.div({className: "", style: {marginLeft:34, display:'none'}}, 
          imgs_1, 
          imgs_2
          )
        )
      )
    )
  }
});

},{"../lib/data.min.js":67}],34:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div({className: "container footer", style: {marginTop:50}}, 
      React.DOM.div({className: "row", style: {fontFamily:"proxima-nova"}}, 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "PRODUCT"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Overview")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Customers")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Pricing")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Security"))
          )
        ), 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "FEATURES"), 
          React.DOM.ul({className: "list-unstyled"}, 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Signals")), 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Mining Jobs")), 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Territory Management")), 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Social Prospect Data")), 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Campaigns")), 
          React.DOM.li(null, React.DOM.a({href: "javascript:"}, "CRM Integration"))
          )
        ), 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "ROLES"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Sales Leaders")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Sales Professionals")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "CIO and IT")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Sales Ops"))
          ), 
          React.DOM.br(null), 
          React.DOM.h5(null, "SOLUTIONS"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Small Business")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Mid-Market")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Enterprise"))
          )
        ), 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "COMPANY"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "About")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Careers")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Partner Program")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Press")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Blog"))
          )
        ), 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "COMMUNITY"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Facebook")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Twitter")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Linkedin")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Free Resources")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Sales Blog"))
          )
        ), 
        React.DOM.div({className: "col-md-2 col-sm-2 col-xs-2"}, 
          React.DOM.h5(null, "HELP AND SUPPORT"), 
          React.DOM.ul({className: "list-unstyled"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Support Center")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Developer Tools")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:"}, "Contact Us"))
          ), 
          React.DOM.br(null), 
          React.DOM.h5({style: {color:'#0084ff',fontWeight:'bold',fontSize:12}}, "ACCOUNT"), 
          React.DOM.ul({className: "list-unstyled text-muted"}, 
            React.DOM.li(null, React.DOM.a({href: "javascript:", className: "text-muted"}, "Sign Up")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:", className: "text-muted"}, "Login")), 
            React.DOM.li(null, React.DOM.a({href: "javascript:", className: "text-muted"}, "Forgot Password"))
          )
        )
      ), 
      React.DOM.hr(null), 
      React.DOM.h6({className: "text-muted", style: {marginTop:-10}}, 
        React.DOM.i({className: "fa fa-copyright"}), " " + ' ' +
        "Customero 2014"
      ), 
      React.DOM.div({className: "text-muted", style: {float:'right',marginTop:-35}}, 
        React.DOM.h6(null, 
        React.DOM.a({href: "javascript:", className: "text-muted"}, "Facebook"), "   ", 
        React.DOM.a({href: "javascript:", className: "text-muted"}, "Twitter"), "   ", 
        React.DOM.a({href: "javascript:", className: "text-muted"}, "Linkedin"), "   "
      )
      )
    )
    )
  },

  componentDidMount: function() {
    $('.footer a').addClass('text-muted')
    $('.footer h5').css({color:'#0084ff',fontWeight:'bold',fontSize:12})
  }
})

},{}],35:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //Messenger
  render: function() {
    return (
        React.DOM.div({className: "alert alert-success", 
             'data-alert': "alert", 
             style: {position:'absolute',
                     top: 31, 
                     right:30, 
                     display:'none',
                     width:200}}, 
                     React.DOM.a({className: "close", 
                       href: "javascript:", 
                       onClick: this.hideAlert}, "×"), 
            "Test"
        )
    );
  }
});

},{}],36:[function(require,module,exports){
/** @jsx React.DOM */

var LoadingSpinner = require('./loading_spinner.js.min.js')

var Job = React.createClass({displayName: 'Job',
  startJob: function() {
    // Add Linkedin Locations
    // Email When Completed
    // Have Report For Number of Profiles Found / number of emails found per mining job
    
    miningJob = this.props.miningJob
    miningJob.status = "Running"
    miningJob.last_ran = Math.round(+new Date()/1000)

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      // status should be waiting
      data : JSON.stringify({'status':'Running', 'last_ran':Math.round(+new Date()/1000)+"" }),
      success: function(res) {
        console.log(res)
        // make request to heroku api
        $.ajax({
          //url: 'https://0.0.0.0:5000/mining_job' ,
          url: 'http://agile-plains-2430.herokuapp.com/mining_job' ,
          //type:'POST',
          crossDomain: true,
          data:{'locale':miningJob.locale, 
                'current_title':miningJob.prospect_title,
                'current_user_id':JSON.parse(localStorage.currentUser).objectId,
                'company_id':JSON.parse(localStorage.currentUser).company.objectId,
                'mining_job_id':miningJob.objectId},
          success: function(res) {
            console.log(res)
          },
          error: function(err) {
            console.log(err)
          }
        })
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.setState({miningJob: miningJob})
  },

  deleteJob: function() {
    //console.log(this.state.miningJob)
    this.props.deleteJob(this.state.miningJob)
      /*
    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+this.state.miningJob.objectId,
      type:'DELETE',
      headers: appConfig.parseHeaders,
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
      */
  },

  cancelJob: function() {
    miningJob = this.state.miningJob
    miningJob.status = ""

    $.ajax({
      url: 'https://api.parse.com/1/classes/MiningJob/'+miningJob.objectId,
      type:'PUT',
      headers: appConfig.parseHeaders,
      data : JSON.stringify({'status':''}),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });
    this.setState({miningJob: miningJob})
  },

  render: function(){
    miningJob = this.props.miningJob
    button = (miningJob.status == "") ? React.DOM.a({href: "javascript:", className: "btn btn-xs btn-success", onClick: this.startJob}, " ", React.DOM.i({className: "fa fa-check"}), " Run ") : React.DOM.a({href: "javascript:", className: "btn btn-xs btn-danger", onClick: this.cancelJob}, " ", React.DOM.i({className: "fa fa-times"}), " Cancel ")

    disabled = ""
    disabled_trash = ""
    /*
    disabled = (miningJob.status == "") ? "btn btn-xs btn-success" : "btn btn-xs btn-success disabled"
    disabled_trash = (miningJob.status == "") ? "btn btn-xs btn-default" :  "btn btn-xs btn-default disabled"
    button = <a href="javascript:" className={disabled} onClick={this.startJob}> <i className="fa fa-check" />&nbsp;Run </a> 
    */

    //console.log(miningJob)
    return (
      React.DOM.tr(null, 
        React.DOM.td(null, React.DOM.h6(null, miningJob.prospect_title)), 
        React.DOM.td(null, React.DOM.h6(null, miningJob.locale)), 
        React.DOM.td(null, React.DOM.h6(null, (miningJob.last_ran == "" ) ? "----" : moment.unix(miningJob.last_ran).fromNow())), 
        React.DOM.td(null, 
          React.DOM.span({className: "badge"}, 
            (miningJob.results == "") ? 0 : miningJob.results
          ), " ",  
          React.DOM.h6({style: {display:'inline-block'}}, "profiles found")
        ), 
        React.DOM.td({style: {paddingTop:'12px'}}, 
          React.DOM.span({className: (miningJob.status == "" ) ? "label label-primary" : "label label-success"}, 
            (miningJob.status == "") ? "Ready" : miningJob.status
          )
        ), 
        React.DOM.td({style: {paddingTop:'13px',width:'105px'}}, 
          button, 
          " ", 
          React.DOM.a({href: "javascript:", className: disabled_trash, 
                  onClick: this.deleteJob}, 
            React.DOM.i({className: "fa fa-trash-o"})
          )
        )
      )
    );
  }
});


module.exports = React.createClass({displayName: 'exports',
  // Mining Jobs
  //{(prospects.length == 0 && this.state.loading == false) ? <EmptyCompanyProspectsPanel /> : ""}
  getInitialState: function() {
    return { 
      miningJobs : [],
      loading    : true
    }
  },

  deleteJob: function(job) {
    //console.log(job.objectId)
    var filtered = _.filter(this.state.miningJobs, function(item) {
       console.log(item.objectId != job.objectId)
       return item.objectId != job.objectId
    });
    //console.log(filtered)
    this.setState({miningJobs: filtered})
  },

  render: function () {
    //console.log('render')
    miningJobs = []
    for(i=0;i<this.state.miningJobs.length;i++){
      miningJob = this.state.miningJobs[i]
      miningJobs.push(
        Job({deleteJob: this.deleteJob, miningJob: miningJob})
      )
    }

    return (
      React.DOM.div(null, 
      React.DOM.div({className: "mining-job-toolbar container", style: {width:'100%'}}, 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Prospects By Title and Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Hiring For Roles"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies Who Just Raised Funding"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Find Companies By Industy And Area"
        ), 
        "   ", 
        React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 'data-toggle': "modal", 'data-target': ".bs-example-modal-sm"}, 
          React.DOM.i({className: "fa fa-plus"}), "   Press Coverage"
        )
    ), 
      React.DOM.div({id: "autoscroll", style: {height:'400px',overflow:'auto'}}, 
        React.DOM.table({className: "table table-striped"}, 
          React.DOM.thead(null, 
            React.DOM.th(null, "Job Title"), 
            React.DOM.th(null, "City"), 
            React.DOM.th(null, "Last Ran"), 
            React.DOM.th(null, "Results"), 
            React.DOM.th(null, "Status"), 
            React.DOM.th(null, " ")
          ), 
          React.DOM.tbody(null, 
            miningJobs
          )
        ), 
          (this.state.loading) ? LoadingSpinner(null) : "", 
        createJobModal({createJob: this.createJob})
      )
      )
    );
  },
  
  runMiningJob: function() {

  },

  createJob: function(data) {
    miningJobs = this.state.miningJobs
    miningJobs.push(data)
    this.setState({ miningJobs: miningJobs })

    $('#miningJobModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
  },

  componentDidMount: function() {
    console.log('this did mount')
    thiss = this;
    qry = 'where={"company":'+company+'}&count=1&order=-createdAt'
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'GET',
      headers: appConfig.parseHeaders,
      data: qry,
      success: function(res) {
        thiss.setState({miningJobs : res.results})
        thiss.setState({loading    : false})
        console.log(res)
      },
      error: function(err) {
        console.log(err)
      }
    });
  }

});

var createJobModal = React.createClass({displayName: 'createJobModal',
  createMiningJob: function() {
    console.log('mining job')
    console.log($('#prospectTitle').val())
    console.log($('#locale').val())

    data =  {
      'prospect_title': $('#prospectTitle').val(),
      'locale'        : $('#locale').val(),
      'last_ran'      : '',
      'results'       : '',
      'status'        : '',   //Waiting , Running
    }
    //  update local jobs state
    $.ajax({
      url:'https://api.parse.com/1/classes/MiningJob',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    this.props.createJob(data)
    
    //$('button.close').click()
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-example-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "miningJobModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-bolt"}), "  Create Mining Job")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.createMiningJob}, 
                    React.DOM.input({id: "prospectTitle", type: "text", placeholder: "Enter prospect title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.input({id: "locale", type: "text", placeholder: "Enter City Area...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", onClick: this.createMiningJob, placeholder: "Enter City Area...", className: "btn btn-success", style: {display:'block', width:'100%'}}, "Start Mining!")
                  )

                )
              )
            )
          )
    );
  }
});

var EmptyMiningJob = React.createClass({displayName: 'EmptyMiningJob',
  render: function() {
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-success", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  " + ' ' +
            "Search for companies!")
        )
      )
    )
    );
  }
});

},{"./loading_spinner.js.min.js":32}],37:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // MiningJobCalendar
  getInitialState: function() {
    return {
      reports : [],
      reportCount: '~',
    }
  },

  getSignalReport: function() {
    thissss = this;
    profile = JSON.stringify({profile: appConfig.pointer('ProspectProfile',
                                          this.props.currentProfile.objectId)})
    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport?order=-createdAt',
      type:'GET',
      data: {where: profile, count: true},
      headers:appConfig.parseHeaders,
      success: function(res) {
        thissss.setState({reports: res.results,})
                         //reportCount: res.count})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  getResults: function() {
    thissss = this;
    profile = JSON.stringify({profile: appConfig.pointer('ProspectProfile',
                                          this.props.currentProfile.objectId)})
    console.log(this.props)
    theProfile = this.props.currentProfile
    $.ajax({
      url: 'https://api.parse.com/1/classes/PeopleSignal',
      type:'GET',
      data: {where: profile, order: '-createdAt',count:true},
      headers:appConfig.parseHeaders,
      success: function(res) {
        // divide results into groups of 100
        // schedule them for 1 intervals
        number_of_reports = Math.ceil(res.count/100)
        reports = []
        for(i=0;i< number_of_reports;i++){
          count = (i == number_of_reports-1) ? res.count % 100 : 100
          console.log(theProfile.done)
          reports.push({
          scheduledAt: moment.unix(theProfile.done).add(i,'day').fromNow(),
          people_count: count,
          })
        }
        thissss.setState({reports: reports})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    //this.getResults()
    this.getSignalReport()
  },

  componentWillRecieveProps: function() {
    //this.getResults()
  },

  setCurrentReport: function(newReport) {
    console.log('CURRENT REPORT')
    console.log(newReport)
    this.props.setCurrentReport(newReport)
  },

  render: function() {
    reports = []
    for(i=0;i< this.state.reports.length; i++)
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    setReport: this.props.setReport, 
                                    setCurrentView: this.setCurrentView, 
                                    report: this.state.reports[i]}))

    return (
      React.DOM.div({className: "container", style: {height:400, overflow:'auto',paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name + " - " + this.state.reportCount
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           overflow:'auto',height:356}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                    React.DOM.i({className: "fa fa-clock-o"}), " " + ' ' +
                    "Scheduled"
                ), 
                React.DOM.th({style: {textAlign:'center'}}, "Prospects"), 
                React.DOM.th({style: {width:150,textAlign:'center'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  rowClick: function() {
    //this.props.setCurrentReport(this.props.report)
    this.props.setReport('MiningJobDetail', this.props.report)
  },

  prospectAllSignalReportProspects: function(e) {
    /*
    e.stopPropagation()
    // Update UI
    console.log(this.props.report.objectId)
    thiss = this
    $.ajax({
      //url:'http://nameless-retreat-3525.herokuapp.com/prospect_signal_report',
      url:'http://127.0.0.1:5000/prospect_signal_report',
      data: {signal_report_id: thiss.props.report.objectId },
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err) }
    })
    */
  },

  render: function() {
    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td(null), 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          React.DOM.i({className: "fa fa-cloud-download", style: {color:'#555'}})
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            this.props.report.scheduledAt
          )
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  People found."
          )
        ), 
        React.DOM.td(null, 
          React.DOM.a({href: "javascript:", 
            onClick: this.prospectAllSignalReportProspects, 
             style: {fontWeight:'bold',marginTop:5}, 
             className: "btn btn-xs btn-success"}, 
            "Prospect All"
          )
        )
      )
    )
  }
});

},{}],38:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalDetail
  getInitialState: function() {
    return {
      currentSignal: 'PeopleSignal',
      signals: [],
      //allProspected: this.props.currentProfileReport.prospected,
      companyCount: '~',
      peopleCount: '~'
    }
  },

  getSignals: function(currentSignal) {
    var thissss = this;
    currentReport = this.props.currentProfileReport.objectId
    currentProfileReport = appConfig.pointer('SignalReport', currentReport)
    currentProfile = appConfig.pointer('ProspectProfile', 
                                   this.props.currentProfile.objectId)

    qry = {
      //where:JSON.stringify({ profile: currentProfile }),
      where:JSON.stringify({ report: currentProfileReport}),
      include:'company_signal,company_signal.signals,signals',
      order:'createdAt',
      limit:100
    }

   $.ajax({
      url: 'https://api.parse.com/1/classes/'+currentSignal,
      data: qry,
      type:'GET',
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('SIGNAL DETAIL')
        console.log(res.results)
        console.log('PROFILE REPORT')
        console.log(thissss.props.currentProfileReport.objectId)
        thissss.setState({signals: res.results})
      },
      error: function(err) { console.log(err.responseText) }
    });
  },

  setCompanyState: function() { this.setState({currentSignal: 'CompanySignal'}) }, 
  setPersonState: function() { this.setState({currentSignal: 'PeopleSignal'}) }, 

  componentDidMount: function() {
    console.log(this.props.currentProfileReport.objectId)
    this.getSignals(this.state.currentSignal)
    currentProfile = appConfig.pointer('ProspectProfile', 
                                   this.props.currentProfile.objectId)
    qry = {
      where:JSON.stringify({ profile: currentProfile }),
      count: 1,
      limit:100
    }
    var thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({peopleCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })

    $.ajax({
      url:'https://api.parse.com/1/classes/CompanySignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({companyCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })
  },

  componentWillUpdate: function(nextProps, nextState) {
    if(this.state.currentSignal != nextState.currentSignal)
      this.getSignals(nextState.currentSignal)
  },

  returnToCalendarView: function() {
    console.log('return to calendar view')
  },

  render: function() {
    signals = []
    for(i=0;i< this.state.signals.length; i++) {
      if(this.state.currentSignal == 'CompanySignal')
        signals.push(CompanyHiringSignalRow({signal: this.state.signals[i], 
                                       allProspected: this.state.allProspected}))
      else
        signals.push(PeopleSignalRow({signal: this.state.signals[i], 
                                       allProspected: this.state.allProspected}))
    }

    currentProfileReport = this.props.currentProfileReport
    companyBtn = (this.state.currentSignal == "CompanySignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    peopleBtn = (this.state.currentSignal == "PeopleSignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    return (
      React.DOM.div({className: "container", style: {height:356,paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                      paddingLeft:20,paddingTop:5,display:'inline-block'}}, 
              
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          ), 
          React.DOM.h6({style: {fontSize:13,paddingLeft:5,paddingTop:5,display:'inline-block'}}, 
            React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:9}}), "  ", 
            React.DOM.i({className: "fa fa-clock-o"}), "  ", 
            moment(currentProfileReport.createdAt).fromNow(), "  "
          ), 

          (this.state.allProspected) ?
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             className: "btn btn-success btn-xs disabled"}, 
            "Prospected"
          ) :
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             onClick: this.prospectAll, 
             className: "btn btn-success btn-xs"}, 
            "Prospect"
          ), 
          

          React.DOM.div({className: "btn-group", 
               style: {float:'right',marginTop:10,marginRight:10}, 
               'data-toggle': "buttons"}, 
            React.DOM.label({className: peopleBtn, style: {}, 
                 onClick: this.setPersonState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-user"}), "  ", 
              this.state.peopleCount
            ), 
            React.DOM.label({className: companyBtn, style: {}, 
              onClick: this.setCompanyState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-building"}), "  ", 
              this.state.companyCount
            )
          )
        ), 

        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0}}, 
          React.DOM.div({style: {overflow:'auto',height:356}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th({style: {textAlign:'center',width:90}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 

                React.DOM.th({style: {width:300}}, 
                  (this.state.currentSignal == 'CompanySignal') ?  
                    "Companies" : "People"
                ), 

                React.DOM.th(null, "Company"), 

                React.DOM.th({style: {width:90,textAlign:'center'}}, " ")

              ), 
              React.DOM.tbody({className: "reports"}, 
                signals
              )
            )
          )
        )
      )
    );
  },

  prospectAll: function() {
    console.log('PROSPECT')
    console.log(this.state.currentSignal)
    console.log(this.props.currentProfileReport.objectId)
    report_id = this.props.currentProfileReport.objectId
    var thiss = this;

    $.ajax({
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:true, report_id: report_id, 
             signal_type: thiss.state.currentSignal},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  }
});

var CompanyHiringSignalRow = React.createClass({displayName: 'CompanyHiringSignalRow',
  render: function() {
    //console.log(company)
    company = (this.props.signal) ? this.props.signal : {}
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, company.revenue), 
          React.DOM.h6(null, React.DOM.a({href: "javascript:"}, company.websiteUrl)), 
          React.DOM.h6(null, company.city)
        ), 

        React.DOM.td(null, 
          (this.props.allProspected) ? 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
          ) : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
                  onClick: this.turnCompanySignalToProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
        )

      )
    )
  },
  turnCompanySignalToProspect: function() {
    var thiss = this;
    $.ajax({
      //url: 'https://nameless-retreat-',
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:false, signal_id: company.objectId,
             signal_type: 'CompanySignal'},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  }
})

var PeopleSignalRow = React.createClass({displayName: 'PeopleSignalRow',
  turnSignalIntoProspect: function() {
    var thiss = this;
    console.log(this.props.signal)
    $.ajax({
      //url:'http://127.0.0.1:5000/signal_to_prospect',
      url:'http://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {signal_id: thiss.props.signal.objectId, signal_type:'PeopleSignal',
             all_signals:false},
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err.responseText) } 
    })
  },

  render: function() {
    //console.log(company)
    people = (this.props.signal) ? this.props.signal : {}
    company = (people.company_signal) ? people.company_signal : {}
    name = people.link_text.split('|')[0]
    //city = people.split('-')[0]
    city = ""
    //console.log(people)
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6({style: {fontSize:13, fontWeight:'bold'}}, name), 
          React.DOM.h6({style: {fontStyle:'italic'}}, " ", people.title)
        ), 

        React.DOM.td(null, 
          React.DOM.h6({style: {fontSize:13, fontWeight:'bold'}}, people.prospect_company, " "), 
          React.DOM.h6({style: {fontStyle:'italic'}}, people.industry), 
          React.DOM.h6(null, people.company_size, " ", React.DOM.span({style: {fontStyle:'italic'}}
          ), React.DOM.a({href: people.website}, people.website))
          
        ), 

        React.DOM.td(null, 
          (this.props.allProspected) ? 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
            ) : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
                      onClick: this.turnSignalIntoProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
          
        )
      )
    )
  }
})

},{}],39:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalLoading
  getInitialState: function() {
    return {
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    }
  },

  initialize: function() {
    var thiss = this;
    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.currentProfile.objectId
    var channel = pusher.subscribe(objectId);
    channel.bind("my-event", function(data) {
      console.log(data)
      thiss.setState({
        count: data.count,
        prospectName: data.name,
        prospectTitle: data.title,
        companyName: data.company
      })
    });

    // Get Signal Report Count
    // Get Last PeopleSignal Found
    qry = { profile: appConfig.pointer('ProspectProfile',objectId) }
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        count = (res.results[0]) ? res.results[0].people_count : 0
        
        thiss.setState({count: count })
      },
    });
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        thiss.setState({
          prospectName: (res.results[0]) ? res.results[0].link_text : "",
          prospectTitle: (res.results[0]) ? res.results[0].title : "",
          companyName: (res.results[0]) ? res.results[0].company : ""
        })
      },
    });
  },

  componentDidMount: function() {
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        //window.console.log(message);
      }
    };

    this.initialize()
  },

  componentDidUpdate: function() {
  },

  componentWillReceiveProps: function() {
    this.setState({
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    })
    this.initialize()
  },

  render: function() {
    // Show companies for hiring signals
    return (
      React.DOM.div({style: {background:'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)',height:'100%',paddingTop:10}}, 
        React.DOM.div({className: "signal-card", style: {
            width:500,textAlign:'center',display:'block',marginRight:'auto',
            marginLeft:'auto',marginTop:100,height:200
          }}, 

        React.DOM.div({className: "loading-two-balls", style: {height:20,width:20}}, 
          React.DOM.div({className: "dot1", style: {color:'red'}}), 
          React.DOM.div({className: "dot2", style: {color:'red'}})
        ), 
        React.DOM.div({id: "", style: {color:'#1ca3fd', fontWeight:'bold',marginTop:-25,
                          marginLeft:0, fontSize:32, fontFamily:'Proxima-Nova'}}, 
            this.state.count + " people found."
          ), 
          React.DOM.div({style: {float:'right',marginTop:55,marginRight:55}}, 
            React.DOM.h6({style: {marginBottom:3, fontWeight:'bold'}}, this.state.prospectName.split('|')[0].split('-')[0].split(',')[0], " -  ", 
              React.DOM.span({style: {fontWeight:500, fontStyle:'italic'}}, 
                this.state.prospectTitle)), 
            React.DOM.h6({style: {marginTop:0,textAlign:'left'}}, 
              this.state.companyName.name
            )
          )
        )
      )
    )
  },
});

},{}],40:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Panel Footing
  paginatePrevious: function() {
    var _this = this;

    qry = {
      where: JSON.stringify({archived:{$in: [false, null]}}),
      order: '-createdAt', count: 1,
      skip: (this.props.currentPage-2)*this.props.prospectsPerPage,
      limit: this.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+_this.props.prospectType,
      type:'GET',
      beforeSend: function() {
        console.log('before Send')
        _this.props.setPaginate(true)
      },
      headers: appConfig.parseHeaders,
      data: qry,
      success: function(res){
        console.log(res)
        _this.props.paginate(res.results, _this.props.currentPage - 1)
        _this.props.setPaginate(false)
      },
      error: function(res){ console.log(res) }
    });
  },

  paginate: function(direction) {
    var _this=this;
    prospectsPerPage = this.props.prospectsPerPage
    qry = {count: true}
    if(direction=='previous')
      qry.skip = (this.props.currentPage - 2)*prospectsPerPage
    else if(direction=="forward")
      qry.skip = this.props.currentPage*prospectsPerPage

    Parse.get(this.props.prospectType, qry).done(function(res) {
       console.log(res)
       this.props.paginate(res.results, _this.props.currentPage + 1)
    })
  },

  paginateForward: function() {
    var _this = this;
    qry = {
      where: JSON.stringify({ archived: {$in:[false, null] }}),
      order: '-createdAt', count: 1,
      skip: this.props.currentPage*this.props.prospectsPerPage,
      limit: this.props.prospectsPerPage,
      include: 'company',
    }

    $.ajax({
      url: 'https://api.parse.com/1/classes/'+_this.props.prospectType,
      type:'GET',
      headers: appConfig.parseHeaders,
      data: qry,
      beforeSend: function() {
        _this.props.setPaginate(true)
      },
      success: function(res){
        console.log(res)
        _this.props.paginate(res.results, _this.props.currentPage + 1)
        _this.props.setPaginate(false)
      },
      error: function(res){ console.log(res); }
    });
  },

  componentDidMount: function() {
    paginateForward = this.paginateForward
    paginatePrevious = this.paginatePrevious

    Mousetrap.bind('l', function() { 
      console.log('new forward')
      paginateForward()
    });

    Mousetrap.bind('h', function() { 
      console.log('new back')
      paginatePrevious()
    });
  },

  render: function() {
    // Add Support For Current List
    // Current List
    //console.log('current page')
    //console.log(this.props.currentPage)
    //console.log(this.props.count)

    previous = (this.props.currentPage - 1) ? '' : 'disabled'

    lowerLimit = (this.props.currentPage-1)*this.props.prospectsPerPage
    upperLimit = this.props.currentPage*this.props.prospectsPerPage

    lowerLimit = (lowerLimit) ? lowerLimit : 1
    upperLimit = (upperLimit > this.props.count) ? this.props.count : upperLimit

    lastPage = this.props.currentPage == this.props.pages
    lessThanOnePage = upperLimit - lowerLimit<= this.props.prospectsPerPage - 2
    console.log(this.props.prospectsPerPage)
    forward = (lastPage || lessThanOnePage) ? 'disabled' : ''

    return (
      React.DOM.div({className: "panel-footing", 
           id: "navbar", 
           style: {height:'35px',padding:'0px', paddingTop:'7px'}}, 
          React.DOM.span({style: {float:'right',marginRight:5}}, 
            React.DOM.a({href: "javascript:", 
               style: {marginRight:'5px'}, 
               onClick: this.fastPrevious, 
               className: "blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-fast-backward"})
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginatePrevious, 
             className: "paginate-back-btn blue-gradient btn btn-primary btn-xs "+previous}, 
            React.DOM.i({className: "fa fa-chevron-left"})
          ), 
          React.DOM.span({style: {marginLeft:5, marginRight:5,display:'inline',width:'100%', textAlign:'center'}}, 
            React.DOM.span({style: (this.props.count) ? {}:{display:'none'}}, 
              lowerLimit+' - ', " "), " ", upperLimit+' of '+this.props.count
          ), 
          React.DOM.a({href: "javascript:", 
             onClick: this.paginateForward, 
             className: "paginate-forward-btn blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-chevron-right"})
          ), 
          React.DOM.a({href: "javascript:", 
             style: {marginLeft:'5px'}, 
             onClick: this.fastForward, 
             className: "blue-gradient btn btn-primary btn-xs "+forward}, 
            React.DOM.i({className: "fa fa-fast-forward"}))
          )
        )
    );
  }, 

  fastPrevious: function() {
    var thiss = this;
    qry = {
      where: JSON.stringify({ user_company: Parse.user_company, 
                              archived:{$in: [null, false]}}),
      order: '-createdAt',
      count: 1,
      limit: thiss.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/'+thiss.props.prospectType,
      data: qry,
      beforeSend: function() {
        console.log('before Send')
        thiss.props.setPaginate(true)
      },
      headers: appConfig.headers,
      success: function(res){ console.log(res.results) 
        thiss.props.paginate(res.results, 1)
        thiss.props.setPaginate(false)
      },
      error: function(err) { console.log(err.responseText) }
    })
  },

  fastForward: function() {
    var thiss = this;
    console.log('fast forward')
    console.log(thiss.props.count - thiss.props.prospectsPerPage)
    _prosp = this.props.prospectsPerPage
    qry = {
      where: JSON.stringify({ user_company: Parse.user_company, 
                              archived:{$in: [null, false]}}),
      order: '-createdAt',
      count: 1,
      skip: Math.floor(thiss.props.count / _prosp)*_prosp,
      limit: thiss.props.count - thiss.props.prospectsPerPage,
      include: 'company'
    }
    $.ajax({
      url:'https://api.parse.com/1/classes/'+thiss.props.prospectType,
      data: qry,
      beforeSend: function() {
        console.log('before Send')
        thiss.props.setPaginate(true)
      },
      headers: appConfig.headers,
      success: function(res){ console.log(res.results) 
        page = Math.ceil(thiss.props.count / 50)
        thiss.props.paginate(res.results, page)
        thiss.props.setPaginate(false)
      },
      error: function(err) { console.log(err.responseText) }
    })
  }
});

},{}],41:[function(require,module,exports){
/** @jsx React.DOM */


module.exports = React.createClass({displayName: 'exports',
  // SignalCard
  prospectPerson: function() {
    // Add To Signal List
    // Add Company
    // Add Prospect
    person = this.props.person
    personId = person.objectId
    company = this.props.person.company
    companyId = company.objectId
    person.signalId = person.signalId
    company.signalId = company.objectId
    p = person; c = company;
    delete p.objectId; delete c.objectId;
    delete p.className; delete c.className;
    delete p.__type; delete c.__type;
    delete p.createdAt; delete c.createdAt;
    delete p.updatedAt; delete c.updatedAt;
    p.companySignal = p.company
    delete p.company

    p.linkedin_url = p.url
    p.company = JSON.parse(localStorage.currentUser).company
    p.archived = true
    p.loading = true
    p.city = p.title.split('-')[0]
    p.pos = p.title.split('-').slice(-1)[0].split(' at ')[0]
    p.company_name = p.title.split('-').slice(-1)[0].split(' at ').slice(-1)[0] 
    name = p.link_text.split('|')[0]
    name = name.split('-')[0]
    p.name = name
    p.websiteUrl = company.websiteUrl
    // Automatically Add To The Signal List It Belongs To
    
    console.log(this.props.profile)
    p.lists = [{'__type':'Pointer','className':'ProspectList','objectId':this.props.profile.prospect_list.objectId}] 

    $.ajax({
      url:'https://api.parse.com/1/classes/Prospects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(p),
      success: function(res) {
        console.log(res)
         $.ajax({
          url:'https://api.parse.com/1/classes/PeopleSignal/'+personId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function() { }
         })
      },
      error: function(err) { }
    })

    //Create Company Prospect with Pointer to CompanySignal
    $.ajax({
      url:'https://api.parse.com/1/classes/CompanyProspects',
      type:'POST',
      headers:appConfig.headers,
      data:JSON.stringify(c),
      success: function(res) {
        //Update Company Signal With Pointer to Company Prospect and date prospected
        console.log(res)
         $.ajax({
           url:'https://api.parse.com/1/classes/CompanySignal/'+companyId,
          type:'PUT',
          headers:appConfig.headers,
          data: JSON.stringify({prospectId: res.objectId, prospected_on: Date.now()/1000}),
          success:function(res) { console.log(res) },
          error: function(err) { }
         })
      },
      error: function(err) { }
    })
  },

  render: function() {
    person = this.props.person
    signal = (person.signals) ? person.signals[0] : {}
    
    return (
      React.DOM.div({className: "panel panel-default signal-card"}, 
        React.DOM.div({className: "panel-body", style: {paddingLeft:25, paddingRight:25}}, 
          React.DOM.h4(null, 
            person.title
          ), 
          React.DOM.h6({style: {display:'inline-block',width:'100%'}}, 
            React.DOM.span({style: { float:'left',maxWidth: '60%', whiteSpace: 'nowrap',
                overflow: 'hidden', textOverflow: 'ellipsis'}}, 
              person.link_text)
          ), 
        React.DOM.div({id: "signal-stuff", 
            style: (_.isEqual(signal, {})) ? {display:'none'} : {display:'block'}}, 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-building"}), 
            "  ", signal.company), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-map-marker"}), 
            "  ", signal.location), 
          React.DOM.h6(null, " ", React.DOM.i({className: "fa fa-suitcase"}), 
            " ", signal.job_title, " ")
        ), 

          React.DOM.a({href: "javascript:", className: "btn btn-success", 
            onClick: this.prospectPerson, 
            style: {float:'right',marginTop:15, fontWeight:'bold',width:'100%'}}, 
            "Prospect This Person")
        )
      )
    );
  }
});

},{}],42:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    //$('body').css({overflow:'hidden'})
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "pricing-background-image"}), 
          Header(null), 
          PricingTables(null), 
        React.DOM.div({className: "the-gradient-1", style: {height:'100%'}}, " ")
      )
    )
    /*
              <a href="#signup" className="btn btn-success btn-lg" style={{display:'block',backgroundColor:'#1ca3fd',float:'right',marginTop:'13px' }}>Log In</a>
    */
  }
});

var PricingTables = React.createClass({displayName: 'PricingTables',
  render: function() {
    return (
      React.DOM.div(null, 
        React.DOM.div({className: "container"}, 
        React.DOM.div({className: "row flat"}, 
          React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
                React.DOM.ul({className: "signal-card plan plan2"}, 
                    React.DOM.li({className: "plan-name"}, " Individual "), 
                    React.DOM.li({className: "plan-price"}, 
                      React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$99 ", React.DOM.small(null, "/ month"))
                    ), 

                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 200 Email Credits"), " "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 1 Team Members")), 
                  React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, 'Emails & Phone Numbers')), 
                  React.DOM.li(null, " "), 
                  React.DOM.li(null, " "), 
                  React.DOM.li(null, " "), 
                  React.DOM.li(null, " "), 
                  React.DOM.li({className: "", style: {paddingBottom:0}}, 
                    React.DOM.a({href: "#signup", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
                  )
             )
         ), 

            React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
                React.DOM.ul({className: "signal-card plan plan2"}, 
                    React.DOM.li({className: "plan-name"}, " Startup "), 
                    React.DOM.li({className: "plan-price"}, 
                      React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$499 ", React.DOM.small(null, "/ month"))
                    ), 

                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 1000 Email Credits"), " "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Up to 10 Team Members")), 
                  React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
                  React.DOM.li(null, " ", React.DOM.strong(null, 'Emails & Phone Numbers')), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Quick Start Package")), 
                  React.DOM.li(null, " ", React.DOM.strong(null, "Signals")), 
                  React.DOM.li({className: "", style: {paddingBottom:0}}, 
                    React.DOM.a({href: "#signup", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
                  )
             )
         ), 

         React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
            React.DOM.ul({className: "signal-card plan plan3 featured"}, 
                React.DOM.li({className: "plan-name"}, " Growth "), 
                React.DOM.li({className: "plan-price"}, 
                  React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$1299 ", React.DOM.small(null, "/ month"))
                ), 

            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 2500 Email Credits"), " "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 25 Team Members")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "All Startup Features ")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.i({className: "fa fa-plus"})), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Bulk CRM Integration")), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Mining Jobs")), 
            React.DOM.li({className: "", style: {paddingBottom:0}}, 
              React.DOM.a({href: "#signup", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
            )
         )
     ), 

     React.DOM.div({className: "col-lg-3 col-md-3 col-xs-6"}, 
        React.DOM.ul({className: "signal-card plan plan4"}, 
            React.DOM.li({className: "plan-name"}, " Premium "), 
            React.DOM.li({className: "plan-price"}, 
              React.DOM.h1({style: {fontWeight:'bold',color:'#0294f5'}}, "$2999 ", React.DOM.small(null, "/ month"))
            ), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 7500 Email Credits"), " "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Up to 50 Team Members")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.strong(null), " Includes: "), 
            React.DOM.li(null, " ", React.DOM.strong(null, "All Growth Features ")), 
            React.DOM.li({style: {padding:0}}, " ", React.DOM.i({className: "fa fa-plus"})), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Dedicated Happiness Officer")), 
            React.DOM.li(null, " ", React.DOM.strong(null, "Improved territory planning")), 
            React.DOM.li({className: "", style: {paddingBottom:0}}, 
              React.DOM.a({href: "#signup", className: "btn btn-primary btn-md cool-btn"}, "Sign Up")
            )
         )
       )

)

)
      )
    );
  },
});

var Header = React.createClass({displayName: 'Header',
  render: function() {
    return (
        React.DOM.nav({className: "thenavbar navbar navbar-default", role: "navigation", style: {padding:70}}, 
          React.DOM.div({className: "container-fluid", style: {fontFamily:'proxima-nova', fontSize:12}}, 
            React.DOM.a({href: "#"}, 
            React.DOM.img({className: "", src: "build/img/full-logo-5.png", style: {width:220}})
          ), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {marginRight:0,fontSize:11,marginTop:-70}}, 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "#login"}, "LOGIN")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", style: {display:'block'}, href: "http://resources.customerohq.com/v1.0/blog"}, "BLOG")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "http://resources.customerohq.com"}, "RESOURCES")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "http://resources.customerohq.com/v1.0/discuss"}, "KNOWLEDGE BASE")), 
                React.DOM.li(null, React.DOM.a({className: "landing-page-nav-tab", href: "#"}, "+1905-616-7602 ", React.DOM.i({className: "fa fa-phone"})))
              )
          ), 
          React.DOM.a({href: "#signup", className: "btn-lg btn login-btn", style: {fontFamily:'proxima-nova'}}, "TRY IT"), 
              React.DOM.ul({className: "nav nav-pills landing-page-nav", role: "tablist", style: {width:600,fontSize:13,marginRight:100,marginTop:-45}}, 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'block'}}, " "), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "PRODUCT")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "DATA")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#product/features"}, "FEATURES")), 
                React.DOM.li({style: {width:'24%',textAlign:'center',display:'none'}}, 
                  React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#"}, "INTEGRATIONS")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#pricing"}, "PRICING")), 
                React.DOM.li({style: {width:'24%',textAlign:'center'}}, React.DOM.a({className: "landing-page-nav-tab lp-bottom-nav", style: {display:'block'}, href: "#services"}, "SERVICES"))
              )
        )
    )
  }
})

},{}],43:[function(require,module,exports){
/** @jsx React.DOM */

//TODO - abstract lists
//TODO - rename this
var Lists = require('./side_menu_user_prospects.js.min.js'); 

var UserProspectHeader = require('./user_prospect_header.js.min.js');
var UserProspectRow = require('./user_prospect.js.min.js');

//var CompanyProspectHeader
var CompanyProspectRow = require('./data_row.js.min.js');
var LoadingSpinner = require('./loading_spinner.js.min.js')
var Spinner = require('./spinner.js.min.js')
var Messenger = require('./messenger.js.min.js')
var PanelFooting = require('./panel_footing.js.min.js')

//var CreateProspectListFromCompanyListModal = require('./create_prospect_list_from_company_list.js.min.js')
//var CreateProspectProfileModal = require('./create_title_mining_job.js.min.js')
/*
      <CreateProspectListFromCompanyListModal 
        currentList={this.state.currentList} 
        currentListObjectId={this.state.currentListObjectId}/>
      <CreateProspectProfileModal 
        currentList={this.state.currentList} 
        currentListObjectId={this.state.currentListObjectId}/>
      <RenameListModal renameList={this.props.renameList}/>
      <DeleteListModal deleteList={this.props.deleteList}/>
*/

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {  prospects   : [],
              currentPage : 1,
              className: this.props.className,
              listClassName: this.props.listClassName,
              pages       : 1,
              currentList : 'All',
              currentListObjectId : '',
              loading: true,
              paginating: false,
              prospectsPerPage: 50,
              downloading: false,
              lists : [],
              masterCheckboxChecked: false,
              keyboardActiveProspect: 0, //first
              //selectedProspects: [],
              totalCount  : "~", 
              detailMode: false,
              detailCompany: {},
              count       : "~", }
  },

  setPaginate: function(value) { this.setState({paginating: value}) },
  setDownloading: function(value) { this.setState({downloading: value}) },
  removeProspects: function(objArray) {
    _prospects = _.map(this.state.prospects, function(prospect) {
      console.log(objArray.indexOf(prospect.objectId) == -1)
      if(objArray.indexOf(prospect.objectId) == -1){
          return prospect
      }
    })
    this.setState({prospects: _.compact(_prospects)})
  },

  archiveProspects: function(objects) {
    console.log('ARCHIVE')
    objects = (objects) ? objects : []
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    selectedProspects = selectedProspects.concat(objects)
    qry = {'archived':true}
    console.log('starting parse archive')
    Parse.batchUpdate(this.state.className, selectedProspects, qry).done(function(res) {
      console.log(res)
    })
    this.removeProspects(selectedProspects)
    totalCount = this.state.totalCount
    this.setState({totalCount : totalCount - 1})

    selected = _.map(this.state.prospects, function(prospect) {
      if(selectedProspects.indexOf(prospect.objectId) != -1)
        return prospect
    })

    selected = _.compact(selected)
    selected = _.pluck(selected, 'lists')
    selected = _.flatten(selected)
    selected = _.pluck(selected, 'objectId')
    selected = _.compact(selected)

    _.map(selected, function(list_id) {
      decrement = {count: {__op: 'Increment', amount: -1}}
      Parse.put('ProspectList/'+list_id, decrement, function(res) {
        console.log(res)
      })
    })
  },

  changeList: function(newListName, objectId) {
    localStorage.selectedProspects = JSON.stringify([])
    this.setState({
      currentList : newListName,
      currentListObjectId : objectId,
      prospects  : [],    
      count      : '~',
      pages      : 1,
      loading    : true,
      currentPage: 1,
      keyboardActiveProspect: 0
    })

    qry = {include: 'company', limit: this.state.prospectsPerPage, count: true}
    qry.where = {}
    qry.where.archived = {$in:[null, false]}
    if (newListName == 'Archived')
      qry.where.archived = true
    else if(newListName != "All")
      qry.where.lists = Parse._pointer(this.state.listClassName, objectId)
    qry.where = JSON.stringify(qry.where)
    console.log(qry)

    var _this = this;
    Parse.get(this.state.className, qry).done(function(res) {
      console.log(res)
      _this.setState({
        prospects: res.results,
        count: res.count,
        pages: Math.ceil(res.count/_this.props.prospectsPerPage),
        loading: false,
      })
    })
  },

  checkboxAction: function(checkedState, obj) {
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    if(checkedState)
      selectedProspects.push(obj)
    else
      selectedProspects = _.reject(selectedProspects,function(id){return id == obj})

    selectedProspects = _.uniq(selectedProspects)
    console.log(selectedProspects)
    localStorage.selectedProspects = JSON.stringify(selectedProspects)
    //this.setState({selectedProspects: selectedProspects})
  },

  masterCheckboxChanged: function(masterCheckboxValue) {
    this.setState({masterCheckboxChecked: masterCheckboxValue})
  },

  render: function() {
    this.startKeyboardShortcuts()
    $('body').css({overflow:'auto'})

    prospects = []
    for(i=0;i< this.state.prospects.length;i++) {
      url = this.state.prospects[i].url
      prospect = this.state.prospects[i]

      keyboardSelected = (i == this.state.keyboardActiveProspect)

      selectedProspects = JSON.parse(localStorage.selectedProspects)
      alreadyChecked=false
      for(ii=0;ii< selectedProspects.length;ii++)
        if(prospect.objectId == selectedProspects[ii])
          alreadyChecked = true

      //console.log(alreadyChecked)

      if(this.state.className == "Prospect") { 
      prospects.push(
        UserProspectRow({deleteProspect: this.deleteProspect, 
                      prospect: this.state.prospects[i], 
                      masterCheckboxChecked: this.state.masterCheckboxChecked, 
                      key: this.generate_id(), 
                      link: "", 
                      archiveProspects: this.archiveProspects, 
                      keyboardSelected: keyboardSelected, 
                      alreadyChecked: alreadyChecked, 
                      checkboxAction: this.checkboxAction}
                    )
      )
      } else { 
        prospects.push(
          CompanyProspectRow({deleteProspect: this.deleteProspect, 
                            prospect: this.state.prospects[i], 
                            masterCheckboxChecked: this.state.masterCheckboxChecked, 
                            key: this.generate_id(), 
                            link: "", 
                            keyboardSelected: keyboardSelected, 
                            alreadyChecked: alreadyChecked, 
                            checkboxAction: this.checkboxAction})
        )
      }

      $('#prospectDetailButtons').click(function(e) {
        //e.stopPropagation()
        //setTimeout(function(){ $('.dropdown').show() }, 30);
      })
    }

    if(this.state.currentList == "All"){
      listType = {display:'none'}
      listNameStyle = {display:'none'}
      listBtn = {display:'none'}
      listOptions = {display:'none'}
      copyDropdownStyle = {width:114, right:4}
    } else {
      listType = {float:'left'}
      listNameStyle = {float:'left',display:'inline-block', fontWeight: 200, marginTop: 1, paddingRight: 10, marginLeft: -10}
      listBtn = {float:'left',marginLeft:5}
      listOptions = {float:'right'}
      copyDropdownStyle = {width:114, right:36}
    }

    currentList     = this.state.currentList
    paginateOverlay = (this.state.paginating) ? PaginateOverlay(null) : ""
    downloadIcon    = (!this.state.downloading) ? React.DOM.i({className: "fa fa-download"}) : Spinner({circleStyle: {backgroundColor:'white',height:4,width:4}, spinnerStyle: {height:13, width:13,margin:0,display:'inline-block',paddingTop:2}})
    prospectTableStyle = (this.state.count == 0) ? {display:'none'} :{height:'400px',overflow:'auto'}

    header = (this.props.className == "Prospect") ? UserProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged}) : CompanyProspectHeader({masterCheckboxChanged: this.masterCheckboxChanged})

    return (
        React.DOM.div(null, 
      React.DOM.div({className: "container prospects-container"}, 
        Lists({currentList: this.state.currentList, 
               count: this.state.count, 
               listClassName: this.state.listClassName, 
               currentListObjectId: this.state.currentListObjectId, 
               totalCount: this.state.totalCount, 
               removeProspects: this.removeProspects, 
               changeList: this.changeList, 
               createList: this.createList, 
               lists: this.state.lists}), 

      React.DOM.div({className: "col-lg-10 col-md-10 col-sm-10 col-xs-10", style: {padding:'0'}}, 
              paginateOverlay, 
              React.DOM.div({id: "prospectDetailButtons"}, 
                ListDetailButtons({
                  renameList: this.renameList, 
                  deleteList: this.deleteList, 
                  currentListName: this.state.currentList, 
                  currentList: this.state.currentListObjectId}), 

                React.DOM.div({className: "dropdown"}, 
                  React.DOM.a({href: "javascript:", 
                     className: "btn btn-primary btn-xs list-options", 
                     id: "", 
                     style: listOptions}, 
                    React.DOM.i({className: "fa fa-bars"})
                  )
                ), 

                React.DOM.div({className: "dropdown1 copyList", style: {display:'inline-block',float:'right'}}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     id: "copyToList", 
                     href: "javascript:", 
                     className: "drop-target btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-copy"}), "  Copy To List ", 
                     React.DOM.i({className: "fa fa-caret-down"})), 
                  CurrentListsTwo({lists: this.state.lists, 
                                   copyDropdownStyle: copyDropdownStyle, 
                               copySelectedProspects: this.copySelectedProspects})
                ), 
  
                React.DOM.div({className: "dropdown1 moveList", style: {display:'inline-block',float:'right'}}, 
                  React.DOM.a({'data-toggle': "dropdown", 
                     href: "javascript:", 
                     id: "moveToList", 
                     className: "btn btn-primary btn-xs list-options"}, 
                     React.DOM.i({className: "fa fa-share"}), "  Move To List ", 
                     React.DOM.i({className: "fa fa-caret-down"})), 
                CurrentLists({lists: this.state.lists, 
                              moveSelectedProspects: this.moveSelectedProspects})
                ), 

                React.DOM.a({onClick: this.downloadFile, 
                   href: "javascript:", 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   downloadIcon, 
                   "  Download CSV  " 
                ), 

                React.DOM.a({href: "javascript:", 
                   onClick: this.archiveProspects, 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   React.DOM.i({className: "fa fa-archive"}), 
                   "  Archive  " 
                ), 

                React.DOM.a({href: "javascript:", 
                   onClick: this.launchProspectProfileModal, 
                   style: {display:'none'}, 
                   id: "downloadProspects", 
                   className: "drop-target btn btn-primary btn-xs list-options"}, 
                   React.DOM.i({className: "fa fa-cloud-download"}), 
                   "  Find Prospects By Title  " 
                )
              ), 
          (this.state.count == 0) ? EmptyPeopleProspectsPanel({className: this.props.className})  : "", 
          React.DOM.div({id: "autoscroll", style: prospectTableStyle}, 
            React.DOM.table({className: "prospects-table table table-striped", 
                style: {marginBottom:'0px'}}, 
              React.DOM.thead({style: {backgroundColor:'white'}}, 
                header
              ), 
              React.DOM.tbody(null, 
                prospects
              )
            ), " ", (this.state.loading) ? LoadingSpinner(null) : ""
          )
        )
      ), 
      PanelFooting({currentPage: this.state.currentPage, 
                    count: this.state.count, 
                    totalCount: this.state.totalCount, 
                    paginate: this.paginate, 
                    prospectType: 'Prospect', 
                    prospectsPerPage: this.state.prospectsPerPage, 
                    setPaginate: this.setPaginate, 
                    pages: this.state.pages}), 
      Messenger(null)
    )
    );
  },

  launchProspectProfileModal: function(){ $('#createProspectProfileModal').modal() },

  paginate: function(newProspects, newPage) {
    this.setState({
      prospects: newProspects,
      currentPage: newPage,
      keyboardActiveProspect: 0
    })
    this.startKeyboardShortcuts()
    document.getElementById('autoscroll').scrollTop = 0
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern[0]) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return prospect_email
  },

  downloadFile: function() {
    if(this.state.className == "Prospect")
      this.downloadProspects()
    else
      this.downloadCompanies()
  },

  downloadCompanies: function() {
    console.log('download file')
    _list = Parse._pointer('CompanyProspectList', this.state.currentListObjectId)

    var _this = this;
    results = _.map([0,1,2,3,4,5,6,7,8,9], function(num) {
      qry = { count: 1, archived: {$in:[null, false]}, limit: 1000, skip: num*1000}
      qry.include = 'company,company.email_guess'
      if(_this.state.currentList != "All")
        qry.where = JSON.stringify({lists: _list})
      return Parse.get(_this.state.className, qry)
    })

    $.when.apply(this, results).then(function (res) {
      prospects = _.flatten(_.map(arguments, function(arg) { return arg[0].results}))
      prospects = _.map(prospects, function(prospect) {
        // TODO - add email
        if(prospect.company) {
          company = prospect.company
          delete company.name
          _keys = _.keys(prospect).concat(_.keys(company))
          _values = _.values(prospect).concat(_.values(company))
          obj = _.object(_keys, _values)
          obj.address = obj.normalizedLocation

          console.log(obj)
          delete obj.company; delete obj.createdAt; delete obj.updatedAt; delete obj.objectId;
          delete obj.lists; delete obj.loading; delete obj.user; delete obj.user_company;
          delete obj.api_key; delete obj.className;
          return obj;
        } else {
          //console.log(prospect)
          return prospect
        }
      })
      prospects = [Papa.unparse(prospects)]
      var blob = new Blob(prospects, {type: "text/plain;charset=utf-8"});
      console.log(blob)
      saveAs(blob, _this.state.className+".csv");
      _this.setState({downloading: false})
    })
  },

  downloadProspects: function() {
    console.log('download file')
    _list = Parse._pointer('ProspectList', this.state.currentListObjectId)

    var _this = this;
    results = _.map([0,1,2,3,4,5,6,7,8,9], function(num) {
      qry = { count: 1, archived: {$in:[null, false]}, limit: 1000, skip: num*1000}
      qry.include = 'company,company.email_guess'
      if(_this.state.currentList != "All")
        qry.where = JSON.stringify({lists: _list})
      return Parse.get(_this.state.className, qry)
    })

    $.when.apply(this, results).then(function (res) {
      prospects = _.flatten(_.map(arguments, function(arg) { return arg[0].results}))
      prospects = _.map(prospects, function(prospect) {
        // TODO - add email
        if(prospect.company) {
          company = prospect.company
          delete company.name
          _keys = _.keys(prospect).concat(_.keys(company))
          _values = _.values(prospect).concat(_.values(company))
          obj = _.object(_keys, _values)
          obj.address = obj.normalizedLocation
          if(obj.email_pattern && !_.isEqual(obj.email_pattern, []))
            obj.email = _this._make_email(prospect.name, prospect.company.email_pattern)
          else
            obj.email = ""

          console.log(obj)
          delete obj.company; delete obj.createdAt; delete obj.updatedAt; delete obj.objectId;
          delete obj.lists; delete obj.loading; delete obj.user; delete obj.user_company;
          delete obj.api_key; delete obj.className;
          return obj;
        } else {
          //console.log(prospect)
          return prospect
        }
      })
      prospects = [Papa.unparse(prospects)]
      var blob = new Blob(prospects, {type: "text/plain;charset=utf-8"});
      console.log(blob)
      saveAs(blob, _this.state.className+".csv");
      _this.setState({downloading: false})
    })
  },


  hideAlert: function() { $('.alert').hide() },
  startKeyboardShortcuts: function() { /*KeyboardShortcuts.initialize()*/ },
  componentDidUpdate: function() { $('.dropdown').show() },

  componentDidMount: function() {
    $('.dropdown').show(); 
    localStorage.selectedProspects = JSON.stringify([]);

    qry = { lists: currentList }
    if(this.state.currentList == 'All'){
      qry = {
        count: true, order: '-createdAt',
        limit: this.state.prospectsPerPage,
        include: 'email_guesses,email_guesses.pattern,company'
      }
      qry.where = JSON.stringify({ archived: {'$in':[false, null]}, })
    }

    var _this = this;
    Parse.get(_this.state.className, {count: true,limit:0}).done(function(res) {
      console.log(res)
    })
    Parse.get(_this.state.className, qry).done(function(res) {
      console.log(res)
      res.prospects = res.results
      res.loading = false; 
      res.pages = Math.ceil(res.count/_this.props.prospectsPerPage);
      res.totalCount = res.count
      _this.setState(res)
    })

    Parse.get(this.props.listClassName, { order: '-createdAt'}).done(function(res) {
      _this.setState({lists: res.results})
    })
  },

  generate_id : function () {
    return '_' + Math.random().toString(36).substr(2,9); 
  },
});

/*  Dropdown Menus */
var ListsMenu = React.createClass({displayName: 'ListsMenu',
  render: function() {
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {
            minWidth:'inherit',
            top: '20px',
            width: '125px',
            right: '154px',
            left:'auto'
          }}, 
        React.DOM.li(null, React.DOM.a({href: "#books"}, 
          React.DOM.i({className: "fa fa-times"}), "  " + ' ' +
          "Delete List"
        )), 
        React.DOM.li(null, React.DOM.a({href: "#podcasts"}, 
          "Rename Lists"
        ))
      )
    );
  }
});

var ListDetailButtons = React.createClass({displayName: 'ListDetailButtons',
  // Rename List
  getInitialState: function() {
    return {
      editMode: false
    }
  },
  render: function() {
    //console.log(this.props.currentListObjectId)
    if(!this.state.editMode) {
      stuff = React.DOM.span({className: "", style: listNameStyle}, 
            (this.props.currentListName == "All") ? '' : React.DOM.i({className: "fa fa-bars", style: {fontSize:16, marginTop:-5}}), 
            (this.props.currentListName == "All") ? '' : "   " +this.props.currentListName
              )
    } else {
      stuff = React.DOM.input({className: "form-control", style: {width: 100, float: 'left', height: 24, marginTop: -1}})
    }
    return (

          React.DOM.div(null, 
            React.DOM.h4({style: {margin:0}}, " ", stuff, 
              React.DOM.a({href: "javascript:", 
                style: listBtn, 
                'data-toggle': "modal", 
                id: "renameListBtn", 
                'data-target': ".bs-renameList-modal-sm", 
                style: {display:'none'}, 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-pencil"})
              ), 
              React.DOM.a({href: "javascript:", 
                onClick: this.deleteList, 
                style: listBtn, 
                style: {display:'none'}, 
                className: "btn btn-xs btn-default"}, 
                React.DOM.i({className: "fa fa-trash-o"})
              )
            )

          )
      );
  },

  renameList: function(newListName) { this.props.renameList(newListName) },

  deleteList: function(){
    thiss = this;
    swal({   
      title: "Are you sure?",   
      text: "Your will not be able to recover this prospect list!",   
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   swal("Deleted!", "Your prospect list has been deleted.", "success"); 
        console.log('deleted')
        thiss.props.deleteList()
      });
  },

  toggleEdit: function() { this.setState({editMode: !this.state.editMode }) }
});

var PaginateOverlay = React.createClass({displayName: 'PaginateOverlay',
  render: function() {
    return (
        React.DOM.div({id: "paginate-overlay", style: {paddingTop:70}}, 
          Spinner({circleStyle: {backgroundColor:'white'}})
        )
    )
  }
})

var EmptyPeopleProspectsPanel = React.createClass({displayName: 'EmptyPeopleProspectsPanel',
  openLinkedinWindow: function() {
    if(this.props.className == "Prospect")
      window.open('https://www.linkedin.com/vsearch/p?type=people')
    else
      window.open('https://www.linkedin.com/vsearch/c')
  },

  render: function() {

    name = (this.props.className == "Prospect") ? "Prospects" : "Companies"
    return (
      React.DOM.div({className: "col-md-offset-3 col-md-6", style: {height:400}}, 
      React.DOM.div({className: "panel panel-default", style: {marginTop:100,height:200}}, 
        React.DOM.div({className: "panel-body"}, 
          React.DOM.h1({className: "lead", style: {textAlign:'center'}}, "Start Prospecting On Linkedin"), 
          React.DOM.a({href: "javascript:", onClick: this.openLinkedinWindow, className: "btn btn-primary", style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%) !important',display:'block',marginRight:'auto',marginLeft:'auto',width:200, marginTop:50}}, 
            React.DOM.i({className: "fa fa-search"}), "  ", 
            "Search for "+name+"!")
        )
      )
    )
    );
  }
});

var CompanyProspectHeader = React.createClass({displayName: 'CompanyProspectHeader',
  render: function() {
    return (
      React.DOM.tr(null, 
        React.DOM.th(null), 
        React.DOM.th(null), 
        React.DOM.th({style: {width:400}}, "Name"), 
        React.DOM.th({style: {width:500}}, "Industry"), 
        React.DOM.th({style: {width:137,display:'none'}}, "# of Prospects"), 
        React.DOM.th(null, "  "), 
        React.DOM.th({style: {display:'none'}}, "Signals"), 
        React.DOM.th({style: {width:100}}, "Added"), 
        React.DOM.th(null, " "), 
        React.DOM.th(null, " ")
      )
    );
  }
});

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == $(e.target).text()
    });

    this.props.moveSelectedProspects(listSelect[0].objectId)
  },

  componentDidMount: function() {
    //$(this.getDOMNode().data()
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      console.log(this.props.lists[i].objectId)
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
            className: "dropdown-move-list-name dropdown-list-name", 
            href: "javascript:", 
            'data-move-objectId': "this.props.lists[i].objectId"}, 
           this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:123,top:27}}, 
        lists
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.copySelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               className: "dropdown-copy-list-name dropdown-list-name", 
               href: "javascript:", 
               'data-objectId': this.props.lists[i].objectId}, 
               
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {width:114,right:6,top:27}}, 
        lists
      )
    );
  }
});

},{"./data_row.js.min.js":20,"./loading_spinner.js.min.js":32,"./messenger.js.min.js":35,"./panel_footing.js.min.js":40,"./side_menu_user_prospects.js.min.js":48,"./spinner.js.min.js":57,"./user_prospect.js.min.js":64,"./user_prospect_header.js.min.js":65}],44:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // createListModal
  createList: function() {
    console.log($('#listTitle').val())

    data =  {
      'name'        : $('#listTitle').val().trim(),   //Waiting , Running
      'user'        : { '__type':'Pointer',
                      'className':'_User',
                      'objectId':'xWESiw5Smd' },
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/ProspectList',
      type:'POST',
      headers: appConfig.parseHeaders,
      data: JSON.stringify(data),
      success: function(res) {
        console.log(res)
      },
      error: function(err) {
        console.log('error')
        console.log(err)
      }
    });

    data.count = 0

    this.props.createList(data)
    
    $('#createListModal').modal('hide')
    $('body').removeClass('modal-open');
    $('.modal-backdrop').remove();
    //$('button.close').click()
  },

  renameList: function(e) {
    e.preventDefault()
    //console.log($('#newListName').val())
    newListName = $('#newListName').val()
    if(newListName.trim() != "")
      this.props.renameList(newListName)
    // Disable Modal
  },

  render: function() {
    return (
          React.DOM.div({className: "modal fade bs-renameList-modal-sm", tabIndex: "-1", role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", id: "createListModal", style: {top:'200px'}}, 
            React.DOM.div({className: "modal-dialog modal-sm"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-list"}), "  Rename List")
                ), 
                React.DOM.div({className: "modal-body"}, 
                  React.DOM.form({onSubmit: this.renameList}, 
                    React.DOM.input({id: "newListName", type: "text", placeholder: "Enter list title...", className: "form-control"}), 
                    React.DOM.br(null), 
                    React.DOM.a({href: "javascript:", 
                      onClick: this.renameList, 
                      className: "btn btn-success", 
                      style: {display:'block', width:'100%'}}, 
                      "Create List"
                    )
                  )
                )
              )
            )
          )
    );
  }
});


},{}],45:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div(null, 
        "Scheduls"
      )
    );
  }
});

},{}],46:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      currentProspect: 0,
    }
  },

  sendEmails: function() {
    selectedCampaign = this.props.selectedCampaign
    campaign_id = selectedCampaign.objectId
    prospectlist_id = selectedCampaign.prospect_list.objectId
    template_id = this.props.currentTemplate.objectId
    
    $.ajax({
      //url:'https://nameless-retreat-3525.herokuapp.com/send_email',
      url:'http://127.0.0.1:5000/v1/campaign/email',
      data: {
        template : template_id,
        campaign : campaign_id,
        //batch: batch_id
      },
      success: function(res) { console.log(res.results) },
      error: function(err) { console.log(err) }
    })

    /* */
    // Update Followup
    // Persist Followup
    // close modal
  },

  render: function() {
    prospect = this.props.prospects[this.state.currentProspect]
    prospect = (prospect) ? prospect : {'name':'','email':''}

    var thiss = this;
    console.debug('SEND EMAIL BATCH')
    console.debug(this.props.currentBatch)
    newBatch = _.isEqual(this.props.currentBatch, {})
    prospects = (newBatch) ? this.props.newProspects : this.props.prospects
    if(newBatch){
      prospects = _.map(this.props.newProspects, function(prospect) {
          return UserPlaceHolder({prospect: prospect})
      })
    } else {
      prospects = _.map(this.props.prospects, function(prospect) {
        if(_.findWhere(prospect.batches, {objectId: thiss.props.currentBatch}))
          return UserPlaceHolder({prospect: prospect})
      })
    }
    prospects = _.compact(prospects)
    console.debug(prospects)
    console.debug(prospects.length)
    prospectCount = prospects.length
    email = (prospect.email) ? prospect.email : ""
    if(email == "no_email" || email == "") {
      console.log('GUESSING')
      if(prospect.email_guesses) {
        console.log('GUESSING EMAIL')
        guess = _.findWhere(prospect.email_guesses, {tried: false})
        name = _.title(prospect.name.trim())

        vars = {
          first: _.first(name.split(' ')).replace(/\W/g, ''),
          last: _.last(name.split(' ')).replace(/\W/g, ''),
          fi: _.first(name.split(' '))[0].replace(/\W/g, ''),
          li: _.last(name.split(' '))[0].replace(/\W/g, '')
        }
        if(guess){
          console.log(guess.pattern.pattern)
          email = Mustache.render(guess.pattern.pattern, vars)
          email = email+"@"+prospect.domain
        }
      } else {
        console.log('NO GUESSES FOUND')
      }
    }
    email = email.toLowerCase()
    email = email
    return (
      React.DOM.div({className: "modal fade bs-sendEmail-modal-lg", tabIndex: "-1", 
           role: "dialog", 'aria-labelledby': "mySmallModalLabel", 'aria-hidden': "true", 
           id: "sendEmailModal", style: {top:'10px'}}, 
            React.DOM.div({className: "modal-dialog modal-lg"}, 
              React.DOM.div({className: "modal-content"}, 
                React.DOM.div({className: "modal-header"}, 
                  React.DOM.button({type: "button", className: "close", 'data-dismiss': "modal"}, React.DOM.span({'aria-hidden': "true"}, "×"), 
                    React.DOM.span({className: "sr-only"}, "Close")), 
        React.DOM.button({type: "button", 
                onClick: this.sendEmails, 
                style: {float:'right'}, 
                className: "btn btn-primary btn-sm"}, 
                React.DOM.i({className: "fa fa-paper-plane"}), "  Send Email"), 
        React.DOM.button({type: "button", style: {marginRight:10, float:'right'}, 
                className: "btn btn-default btn-sm", 'data-dismiss': "modal"}, "Close"), 
                  React.DOM.h4({className: "modal-title", id: "myModalLabel"}, 
                    React.DOM.i({className: "fa fa-envelope"}), "  Send Email" + ' ' +
                    "  ", 
                    React.DOM.small(null, "("+prospectCount+")")
                  )
                ), 
                React.DOM.div({className: "modal-body", style: {paddingTop:5}}, 
                  React.DOM.h4(null, "People"), 
                  
                  React.DOM.div({className: "prospect-container"}, 
                    prospects
                  ), 
                  React.DOM.br(null), 
                  React.DOM.h4({style: {display:'inline-block'}}, "Emails    ", 
                  React.DOM.a({href: "javascript:", 
              className: (this.state.currentProspect == 0 ) ? "badge btn disabled" : "badge btn", 
                    onClick: this.previousProspect}, React.DOM.i({className: "fa fa-arrow-left"})), "  ", 
                    React.DOM.small(null, (this.state.currentProspect+1)+' of '+prospectCount
                  )), 
                  "   ", 
                  React.DOM.a({href: "javascript:", 
            className: (this.state.currentProspect ==  this.props.prospects.length-1) ? "btn disabled badge" : "btn badge", 
                    onClick: this.nextProspect}, React.DOM.i({className: "fa fa-arrow-right"})), 

                  React.DOM.div(null, 

React.DOM.ul({className: "list-group email-holder", style: {borderTop:'solid 1px #eee'}}, 
  React.DOM.li({className: "list-group-item"}, 
    React.DOM.h5({style: {display:'inline-block',marginTop:0,marginBottom:0}}, "To:  "), 
    
    React.DOM.span({className: "label label-primary"}, email)
  ), 
  React.DOM.li({className: "list-group-item"}, 
    React.DOM.h5({style: {display:'inline-block',marginTop:0,marginBottom:0}}, "Subject:  "), " ", React.DOM.span({className: "label label-primary"}, this.props.currentTemplate.subject)
  ), 
  React.DOM.li({className: "list-group-item body"})
)
  
                  )

                ), 

      React.DOM.div({className: "modal-footer", style: {display:'none'}}, 
        React.DOM.button({type: "button", 
                className: "btn btn-default", 'data-dismiss': "modal"}, "Close"), 
        React.DOM.button({type: "button", 
                className: "btn btn-primary"}, "Send Email")
      )
              )
            )
          )
    );
  },

  previousProspect: function() {
    this.setState({currentProspect: this.state.currentProspect-1 })
  },

  nextProspect: function() {
    this.setState({currentProspect: this.state.currentProspect+1 })
  },

  parseTemplate: function(templateBody) {
    first_name = prospect.name.split(' ')[0]
    //hiring_signal = prospect.signals

    signals = (prospect.signals) ? prospect.signals[0] : ""
    templateBody = Mustache.render(templateBody, {
      hiring_signal: signals,
      first_name: _.title(prospect.name.split(' ')[0])
    })

    //console.log(templateBody)
      
    return templateBody
  },

  componentDidUpdate: function() {
    //console.log(this.props.currentTemplate)
    parsedTemplate = this.parseTemplate(this.props.currentTemplate.body)
    
    //$('.body').html(this.props.currentTemplate.body)
    $('.body').html(parsedTemplate)
  }
});

var UserPlaceHolder = React.createClass({displayName: 'UserPlaceHolder',
  render: function() {
    return (
        React.DOM.div({className: "btn-group", style: {marginRight:5,marginBottom:5}}, 
          React.DOM.div({className: "btn-group"}, 
            React.DOM.button({type: "button", 
                    className: "btn btn-success btn-sm"}, 
              React.DOM.i({className: "fa fa-user"}), "  ", 
              (this.props.prospect) ? _.title(this.props.prospect.name) : ""
            )
          ), 
          React.DOM.button({type: "button", className: "btn btn-success btn-sm"}, 
            React.DOM.i({className: "fa fa-trash-o"})
          )
        )
    )
  }
});

},{}],47:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Sent Mail
  getInitialState: function() {
    return {
      sentEmails: []
    }
  },

  componentDidMount: function() {
    thiss = this;
    $.ajax({
      url: 'https://api.parse.com/1/classes/SentEmail',
      data:{include: 'campaign,prospect,prospect.email_guesses.pattern'},
      headers: appConfig.headers,
      success: function(res) { thiss.setState({sentEmails: res.results}) },
      error: function() {}
    })
  },

  render: function() {
    sentEmails = []
    for(i=0;i< this.state.sentEmails.length; i++) 
      sentEmails.push(SentEmailRow({sentEmail: this.state.sentEmails[i]}))

    return (
      React.DOM.div({style: {overflow:'auto',height:550}}, 
        React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
          React.DOM.thead(null, 
            React.DOM.th(null), 
            React.DOM.th(null, "Prospect Name"), 
            React.DOM.th(null, "Prospect Email"), 
            React.DOM.th({style: {width:290}}, "Status"), 
            React.DOM.th(null, "Campaign"), 
            React.DOM.th(null, "Template")
          ), 
          React.DOM.tbody(null, 
            sentEmails
          )
        )
      )
    );
  }
});

var SentEmailRow = React.createClass({displayName: 'SentEmailRow',
  render: function() {
    sentEmail = this.props.sentEmail
    //console.log(sentEmail)

    email = sentEmail.email
    if(email == "no_email"){
      first = sentEmail.prospect.name.split(' ')[0]
      last = _.last(sentEmail.prospect.name.split(' '))

      pattern = _.findWhere(sentEmail.prospect.email_guesses, {'tried':false})
      data = {first: first, last: last, fi: first[0], li: last[0]}
      email = Mustache.render(pattern.pattern.pattern, data).toLowerCase()
    }

    return (
      React.DOM.tr(null, 
        React.DOM.td(null, React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-clock"}), 
            moment(sentEmail.createdAt).fromNow())), 
        React.DOM.td(null, 
          React.DOM.h6({style: {fontSize:14,fontWeight:'bold',marginBottom:0}}, sentEmail.prospect.name), 
          React.DOM.h6({style: {marginTop:4,marginBottom:0}}, sentEmail.prospect.pos.trim()), 
          React.DOM.h6({style: {marginTop:4}}, sentEmail.prospect.company_name)
        ), 
        React.DOM.td(null, React.DOM.h6(null, email)), 
        React.DOM.td({style: {paddingTop:13}}, 
          React.DOM.span({className: "label label-default"}, "Queued"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-success"}, "Opened"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-default"}, "Delivered"), 
          React.DOM.i({className: "fa fa-chevron-circle-right text-muted", 
             style: {paddingLeft:5,paddingRight:5}}), 
          React.DOM.span({className: "label label-default"}, "Replied")
        ), 
        React.DOM.td(null, 
          React.DOM.h6({style: {cursor:'pointer'}}, 
          React.DOM.i({className: "fa fa-list-alt"}), "  " + ' ' +
          "Boston VP Sales - Retail"
          )
        ), 
        React.DOM.td(null, 
          React.DOM.h6({style: {cursor:'pointer'}}, 
          React.DOM.i({className: "fa fa-file-text-o"}), "  " + ' ' +
          "Followup #2 - Provide Value ", React.DOM.br(null), 
          React.DOM.span({className: "text-muted"}, " Subject: Just wanted to followup on the last email "), React.DOM.br(null), 
          React.DOM.span({className: "text-muted"}, " Body: Just wanted to followup on the last email ")

          )
        )
      )
    )
  }
})

},{}],48:[function(require,module,exports){
/** @jsx React.DOM */

var SideMenuListOption = require('./user_side_menu_list.js.min.js');
var CreateListModal = require('./create_list_modal.js.min.js')
var Messenger = require('./messenger.js.min.js')

var DeleteListModal = require('./delete_list_modal.js.min.js')
var RenameListModal = require('./rename_list_modal.js.min.js')
var SideMenuListOption = require('./user_side_menu_list.js.min.js');

module.exports = React.createClass({displayName: 'exports',
  //SideMenuProspects - SideList
  getInitialState: function() {
    return {
      /*
      createList: 
      renameList:
      deleteList:
      changeList:
      currentList:
      totalCount:
      lists:

      */
     lists: [],
    }
  },

  createList: function (data) {
    this.props.createList(data)
  },

  componentDidUpdate: function() {
    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('move-objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },

  componentDidMount: function() {
    var _this = this;
    Parse.get(this.props.listClassName, { order: '-createdAt'}).done(function(res) {
      _this.setState({lists: res.results})
    })

    $('.dropdown-copy-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.copySelectedProspects(listSelect[0].objectId)
    })

    $('.dropdown-move-list-name').on('click', function(e) {
      console.log(e.target)
      console.log($(e.target).data('objectId'))
      //this.props.moveSelectedProspects(listSelect[0].objectId)
    })
  },
  
  removeSelectedProspects: function() {
    // remove selected from list
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    _list = Parse._pointer(this.props.listClassName, this.state.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [_list] } }
    if(this.state.currentList == 'All'){ body = { archived: true } }
    Parse.batchUpdate('Prospect', selectedProspects, body)
    // Update List Counts
    //
  },

  moveSelectedProspects: function(_list) {
    // move to list
    // only if the current list is not all
    // remove prospects from currentList
    if(!this.props.currentListObjectId){ console.log('not supported'); return 0}
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    old_list = Parse._pointer(this.props.listClassName, this.props.currentListObjectId)
    new_list = Parse._pointer(this.props.listClassName, _list)
    this.props.removeProspects(selectedProspects)

    var _this = this;
    console.log(_list)
    console.log(this.props.currentListObjectId)
    body = { lists: { '__op' : 'Remove', "objects" : [old_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: -1*selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _this.props.currentListObjectId)
          item.count = item.count - amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })

    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function() {
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
          item.count = (item.count) ? item.count + amount : amount
        return item
      })
      //console.log(lists)
      _this.setState({lists: lists})
    })
    // Update List Counts
  },

  copySelectedProspects: function(_list) {
    // TODO - check to see if prospect exists in the other list
    // TODO - Remove from selected prospects If prospects already exist in list do not increment
    console.log('update')
    selectedProspects = JSON.parse(localStorage.selectedProspects)
    new_list = Parse._pointer(this.props.listClassName, _list)
    body = { lists: { '__op' : 'AddUnique', "objects" : [new_list] } }
    console.log(body)

    //

    var _this = this;
    Parse.batchUpdate('Prospect', selectedProspects, body).done(function(res) {
      console.log(res)
      // if success
      increment = {count: {__op: 'Increment', amount: selectedProspects.length}}
      Parse.put(_this.props.listClassName+'/'+_list, increment, function(res) {
        console.log(res)
      })

      amount = selectedProspects.length
      var lists = _.map(_this.state.lists, function(item) {
        if(item.objectId == _list)
            item.count = (item.count) ? item.count + amount : amount
        return item
      })
      console.log(lists)
      _this.setState({lists: lists})
    })
  },

  changeList: function(e) {
    /*
    currentList = $(e.target).parent()//.data('list')
    console.log(currentList)
    this.props.changeList(currentList.name, currentList.objectId)
    */
  },

  render: function() {
    if(this.props.currentList == "All")
      styles = {'backgroundColor':'rgb(0, 122, 255)', 'color':'white'} 
    else
      styles =  {}

    lists = [SideMenuListOption({list: {name: 'All', count: this.props.totalCount}, 
                                 iconType: 'users', 
                                 changeList: this.props.changeList}), 
             SideMenuListOption({list: {name: 'Archived', count: '~'}, 
                                 iconType: 'archive', 
                                 changeList: this.props.changeList, 
                                 hideCount: true})]

    for(i=0;i< this.state.lists.length;i++){
      list = this.state.lists[i]
      if(list.list_type == "signal_list")
        iconType = "wifi"
      else if (list.list_type == "mining_job")
        iconType = "cloudDownload"
      if(list.list_type)
        lists.push(SideMenuListOption({list: list, 
                                       iconType: iconType, 
                                       changeList: this.props.changeList}))
      else 
        lists.push(SideMenuListOption({list: list, 
                                       changeList: this.props.changeList}))
    }

    return (
      React.DOM.div({className: "col-lg-2 col-md-2 col-sm-2 col-xs-2", 
           style: {padding:'0',height:'438px',backgroundColor:'#e0e9ee',
                   borderRight:'1px solid #b0b8bf',textAlign:'center'}}, 
                   React.DOM.div({className: "prospect-list-header", style: {paddingLeft:10, textAlign:'center'}}, 
                     "Lists"

                   ), 
        React.DOM.div({className: "btn-group-vertical", 
             style: {width:'100%', height: '320px', overflow: 'auto'}}, 
          lists
        ), 
        React.DOM.br(null), React.DOM.br(null), 
        React.DOM.a({href: "javascript:", className: "btn btn-primary new-list-btn", 
              'data-toggle': "modal", 'data-target': ".bs-example-modal-sm", 
              style: { backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
          React.DOM.i({className: "fa fa-plus-circle"}), "  New List"
        ), 
        CreateListModal({createList: this.createList, 
                         updateList: this.updateList, 
                         listClassName: this.props.listClassName}), " ", React.DOM.br(null)
      )
    );
  },

  createList: function(data) { 
    this.setState({ lists: [data].concat(this.state.lists) }) 
  },

  updateList: function(_id, objId) {
    updated = _.map(this.state.lists, function(list) {
      if(list.tmp == _id)
          list.objectId = objId
      return list
    })
    console.log("update broski")
    this.setState({lists: updated})
  },

  renameList: function(newListName) {
    thiss = this;
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.name == thiss.state.currentList) {
        item.name = newListName
        return item
      }
      return item
    });

    this.setState({lists : filtered, currentList: newListName})

    $('.modal').click()
    $('#newListName').val('')
    $('.modal-backdrop').click()

    Parse.update(this.props.listClassName, {'name':newListName})
  },

  deleteList: function() {
    var filtered = _.filter(this.state.lists, function(item) {
      if(item.objectId == thiss.state.currentListObjectId)
        return false
      return true
    });

    this.setState({lists: filtered, currentList: 'All'})
    this.changeList('All', '')

    appConfig.closeModal(); 
    $('#newListName').val('');
    Parse.delete(this.props.listClassName+'/'+this.state.currentListObjectId);
  },
});

var CurrentLists = React.createClass({displayName: 'CurrentLists',
  listAction: function(e) {
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == $(e.target).text()
    });

    this.props.moveSelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
            className: "dropdown-list-name", 
            href: "javascript:", 
            onClick: this.listAction}, this.props.lists[i].name))
      )
    }
    //console.log(this.props.copyDropdownStyle)
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {right:-23,top:27}}, 
        lists
      )
    );
  }
});

var CurrentListsTwo = React.createClass({displayName: 'CurrentListsTwo',
  listAction: function(e) {
    listName = $(e.target).text()
    
    var listSelect = _.filter(this.props.lists, function(item) {
       return item.name == listName
    });

    this.props.copySelectedProspects(listSelect[0].objectId)
  },

  render: function() {
    lists = [] 
    for(i=0;i< this.props.lists.length;i++) {
      lists.push(
        React.DOM.li(null, React.DOM.a({style: {fontWeight:'bold',fontSize:'10px'}, 
               className: "dropdown-list-name", 
               href: "javascript:", 
               onClick: this.listAction}, 
          this.props.lists[i].name))
      )
    }
    return (
      React.DOM.ul({className: "dropdown-menu drop-test", id: "dropdown", 
          style: {width:114,right:-71,top:27}}, 
        lists
      )
    );
  }
});

},{"./create_list_modal.js.min.js":15,"./delete_list_modal.js.min.js":21,"./messenger.js.min.js":35,"./rename_list_modal.js.min.js":44,"./user_side_menu_list.js.min.js":66}],49:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalAnalytics
  getInitialState: function() {
    return {
      reports : []
    }
  },

  componentDidMount: function() {


var margin = {top: 1, right: 1, bottom: 6, left: 1},
    width = 850 - margin.left - margin.right,
    height = 350 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(15)
    .nodePadding(10)
    .size([width, height]);

var path = sankey.link();

//d3.json("https://gist.githubusercontent.com/rsimba/33fbc755fa71e6aea446/raw/880345a16dbae39753682bb659249404a3820146/gistfile1.json", function(energy) {
//d3.json("https://gist.githubusercontent.com/rsimba/70d4d3393d33777f4c11/raw/228e30d788591b15d85f20f8baf2ccd50b79298c/gistfile1.json", function(energy) {
/*
url = "http://127.0.0.1:5000/v1/report/profile"
  */
url = "https://api.parse.com/1/classes/ProspectProfile/TjCZRfHB7N"
d3.json(url)
  .header("X-Parse-Application-Id", "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ")
  .header("X-Parse-REST-API-Key", "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb")
  .header("Content-Type", "application/json")
  .get(function(error, energy) {
    console.log(error)
    console.log(energy)
    energy = energy.sankey
  sankey
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(32);

  var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
      .text(function(d) { return d.source.name + " → " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(energy.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      //.style("fill", function(d) { return d.color = color(d.name.replace(/ .*/, "")); })
      .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { return d.node + "\n" + d.value; });

  node.append("text")
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      //.text(function(d) { return d.name; })
      .text(function(d) { return d.name + "\n" + d.value; })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 6 + sankey.nodeWidth())
      .attr("text-anchor", "start");

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
});


  },
  
  render: function() {
    //TODO - add 2 pie charts for clearspark analysis
    return (
      React.DOM.div(null, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-pie-chart", style: {marginRight:5}}), 
                "Analytics -",  
                this.props.currentProfile.name
          )
        ), 
        React.DOM.div({id: "chart"})
      )
    )
  }
})

},{}],50:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  render: function() {
    return (
      React.DOM.div({className: "signal-gradient-bg col-md-12", style: {textAlign:'center'}}, 
          React.DOM.h3({style: {fontWeight:'bold',color:'white'}}, "Create Signal Strategy"), 
            React.DOM.div({className: "strategy-app"}, " "), 
            React.DOM.div({className: "strategy-app"}, " "), 
            React.DOM.div({className: "strategy-app"}, " "), 
            React.DOM.div({className: "strategy-app"}, " ")
      )
    )
  }
});
/*
 
        <table>
          <tr>
            <td> <div className="strategy-app"> </div> </td>
            <td> <div className="strategy-app"> </div> </td>
            <td> <div className="strategy-app"> </div> </td>
            <td> <div className="strategy-app"> </div> </td>
          </tr>
        </table>
*/

},{}],51:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalCalendar
  getInitialState: function() {
    return {
      reports : []
    }
  },

  getSignalReport: function() {
    var _this = this;
    qry = {
      where : JSON.stringify({profile:{
          __type:'Pointer',
          className:'ProspectProfile',
          objectId:this.props.currentProfile.objectId
      }}),
      order:'-createdAt',
      limit:10
    }

    Parse.get('SignalReport', qry).done(function(res) {
      console.log(res)
      _this.setState({reports: res.results})
    })
  },

  componentDidMount: function() {
    this.getSignalReport()
  },

  componentDidUpdate: function() {
    //this.getSignalReport()
  },

  render: function() {
    reports = []
    for(i=0;i< this.props.reports.length; i++) {
      if(this.props.reports[i]) {
          reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    prospectSignalReport: this.prospectSignalReport, 
                                        setCurrentView: this.setCurrentView, 
                                        report: this.props.reports[i]}))
      }
    }

    return (
      React.DOM.div({className: "container", style: {paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           height:456,overflow:'auto'}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                  React.DOM.i({className: "fa fa-clock-o"}), " Last Ran"
                ), 
                React.DOM.th({style: {textAlign:'center', display:'none'}}, "Posted Job Listing"), 
                React.DOM.th(null, "Company Signals"), 
                React.DOM.th({style: {display:'block'}}, "Prospect Signals"), 
                React.DOM.th({style: {width:150,textAlign:'center'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  },

  setCurrentReport: function(newReport) {
    this.props.setCurrentReport(newReport)
  },

  prospectSignalReport: function(signalReport) {
    this.props.prospectSignalReport(this.props.currentProfile, signalReport)
  },
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  getInitialState: function() {
    return {
      companyCount: '~',
      peopleCount: '~'
    }
  },

  rowClick: function() {
    if(this.props.report.done)
      this.props.setCurrentReport(this.props.report)
    else
      alertify.log("This mining job is still in progress. You'll be notified when it's completed")
  },

  prospectSignalReport: function(e) {
    this.props.prospectSignalReport(this.props.report)
    e.stopPropagation()
  },

  componentDidMount: function() { 
    console.log('calendar')
    report = appConfig.pointer('SignalReport', this.props.report.objectId)
    qry = {
      where:JSON.stringify({ report: report }),
      count: 1
    }
    var thiss = this;
    /*
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({peopleCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })

    $.ajax({
      url:'https://api.parse.com/1/classes/CompanySignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({companyCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })
    */
  },

  render: function() {
    prospected = this.props.report.prospected
    if(!this.props.report.mining_job)
      icon = React.DOM.i({className: "fa fa-wifi"})
    else
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {color:'#555'}})

    loading = (!this.props.report.done) ? React.DOM.div({className: "profile-loading", style: {marginLeft:30}}, 
          React.DOM.div({className: "double-bounce1", style: {backgroundColor:'#5cb85c'}}), 
          React.DOM.div({className: "double-bounce2", style: {backgroundColor:'#5cb85c'}})
          ) : React.DOM.a({href: "javascript:", 
                    onClick: this.prospectSignalReport, 
             style: {fontWeight:'bold',marginTop:5}, 
     className: (prospected) ? "btn btn-xs btn-success disabled green-gradient" : "btn btn-xs btn-success green-gradient"}, 
             (prospected) ? 'Prospected' : 'Prospect All'
          )
    // Make an Alert when somebody clicks on in progress signal report
    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          icon
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td({style: {textAlign:'center',display:'none'}}, 
          React.DOM.h6(null, 
          'lol'
          )
        ), 
        React.DOM.td(null, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.company_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  Companies found."
          )
        ), 
        React.DOM.td({style: {display:'block'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  People found."
          )
        ), 
        React.DOM.td({style: (this.props.report.done) ? {} : {paddingTop:17}}, 
          loading
        )
      )
    )
  }
});

},{}],52:[function(require,module,exports){
/** @jsx React.DOM */

var CompanyDetail = require('./company_detail.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  // SignalDetail
  getInitialState: function() {
    return {
      currentSignal: 'CompanySignal',
      signals: [],
      //allProspected: this.props.currentProfileReport.prospected,
      companyCount: '~',
      peopleCount: '~',
      detailMode: false,
      detailCompany: {},
    }
  },

  getSignals: function(currentSignal) {
    var thissss = this;
    currentReport = this.props.currentProfileReport.objectId
    currentProfileReport = appConfig.pointer('SignalReport', currentReport)

    qry = {
      where:JSON.stringify({ report: currentProfileReport }),
      include:'company,signal.signal,signal',
      order:'-createdAt',
      limit:100
    }

    $.ajax({
      url: 'https://api.parse.com/1/classes/'+currentSignal,
      data: qry,
      type:'GET',
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('SIGNAL DETAIL')
        console.log(res.results)
        console.log('PROFILE REPORT')
        console.log(thissss.props.currentProfileReport.objectId)
        thissss.setState({signals: res.results})
      },
      error: function(err) { console.log(err.responseText) }
    });
  },

  setCompanyState: function() { this.setState({currentSignal: 'CompanySignal'}) }, 
  setPersonState: function() { this.setState({currentSignal: 'PeopleSignal'}) }, 

  componentDidMount: function() {
    console.log('detail')
    console.log(this.props.currentProfileReport.objectId)
    this.getSignals(this.state.currentSignal)
    qry = {
      where:JSON.stringify({ report: currentProfileReport }),
      count: 1,
      limit:100,
      order:'createdAt'
    }
    var thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({peopleCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })

    $.ajax({
      url:'https://api.parse.com/1/classes/CompanySignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({companyCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })
  },

  componentWillUpdate: function(nextProps, nextState) {
    if(this.state.currentSignal != nextState.currentSignal)
      this.getSignals(nextState.currentSignal)
  },

  returnToCalendarView: function() {
    console.log('return to calendar view')
  },

  render: function() {
    console.log('ALL PROSPECTED')
    console.log(this.state.allProspected)
    console.log('CURRENT SIGNAL')
    console.log(this.state.currentSignal)
    console.log('SIGNAL')
    console.log(this.state.signals)
    signals = []
    for(i=0;i< this.state.signals.length; i++) {
      if(this.state.currentSignal == 'CompanySignal')
        signals.push(CompanyHiringSignalRow({signal: this.state.signals[i], 
                                       toggleDetailMode: this.toggleDetailMode, 
                                       allProspected: this.state.allProspected}))
      else
        signals.push(PeopleSignalRow({signal: this.state.signals[i], 
                                       allProspected: this.state.allProspected}))
    }

    currentProfileReport = this.props.currentProfileReport
    companyBtn = (this.state.currentSignal == "CompanySignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    peopleBtn = (this.state.currentSignal == "PeopleSignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    score_column=(this.state.currentSignal == "PeopleSignal") ? React.DOM.th(null, "Score") : ""
    logo_column=(this.state.currentSignal == "CompanySignal") ? React.DOM.th(null) : ""
    return (
      React.DOM.div({className: "container", style: {height:456,paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                      paddingLeft:20,paddingTop:5,display:'inline-block'}}, 
              
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          ), 
          React.DOM.h6({style: {fontSize:13,paddingLeft:5,paddingTop:5,display:'inline-block'}}, 
            React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:9}}), "  ", 
            React.DOM.i({className: "fa fa-clock-o"}), "  ", 
            moment(currentProfileReport.createdAt).fromNow(), "  "
          ), 

          (this.state.allProspected) ?
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             className: "btn btn-success btn-xs disabled"}, 
            "Prospected"
          ) :
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             onClick: this.prospectAll, 
             className: "btn btn-success btn-xs green-gradient"}, 
            "Prospect All"
          ), 
          

          React.DOM.div({className: "btn-group", 
               style: {float:'right',marginTop:10,marginRight:10}, 
               'data-toggle': "buttons"}, 
            React.DOM.label({className: peopleBtn, style: {width:50}, 
                 onClick: this.setPersonState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-user"}), "  ", 
              this.state.peopleCount
            ), 
            React.DOM.label({className: companyBtn, style: {width:50}, 
              onClick: this.setCompanyState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-building"}), "  ", 
              this.state.companyCount
            )
          )
        ), 

        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0}}, 
          (this.state.detailMode) ? CompanyDetail({toggleDetailMode: this.toggleDetailMode, detailCompany: this.state.detailCompany}) : "", 
          React.DOM.div({style: {overflow:'auto',height:456}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th({style: {textAlign:'center',width:90}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 

                logo_column, 
                React.DOM.th({style: {width:200}}, 
                  (this.state.currentSignal == 'CompanySignal') ?  
                    "Companies" : "People"
                ), 

                React.DOM.th({style: {width:200}}, "Signal"), 
                React.DOM.th(null, "Source "), 
                score_column, 

                React.DOM.th({style: {width:90,textAlign:'center'}}, " ")

              ), 
              React.DOM.tbody({className: "reports"}, 
                signals
              )
            )
          )
        )
      )
    );
  },

  prospectAll: function() {
    console.log(this.state.currentSignal)
    console.log(this.props.currentProfileReport.objectId)
    report_id = this.props.currentProfileReport.objectId
    var thiss = this;
    $.ajax({
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:true, report_id: report_id, 
             signal_type: thiss.state.currentSignal},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  },
  toggleDetailMode: function(company) {
    this.setState({detailMode: !this.state.detailMode})
    this.setState({detailCompany: company})
  }
});

var CompanyHiringSignalRow = React.createClass({displayName: 'CompanyHiringSignalRow',
  toggleDetailMode: function() {
    this.props.toggleDetailMode(this.props.signal.company)
  },

  render: function() {
    company = this.props.signal.company
    signal = this.props.signal.signal[0]
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.div({style: {backgroundImage: "url("+company.logo+")",height:60,width:60}, 
          className: "company-img-thumbnail"})
        ), 
        React.DOM.td({style: {width:200}}, 
          React.DOM.a({href: "javascript:", onClick: this.toggleDetailMode}, company.name), 
          React.DOM.h6(null, company.industry), 
          React.DOM.h6(null, (company.address) ? company.address.normalizedLocation : ""), 
          React.DOM.h6(null, company.revenue), 
          React.DOM.h6(null, company.headcount), 
          React.DOM.h6(null, React.DOM.a({href: "javascript:"}, company.website)), 
          React.DOM.h6(null, company.city)
        ), 

        React.DOM.td({style: {width:200}}, 
          React.DOM.h6(null, signal.job_title), 
          React.DOM.h6(null, signal.company_name), 
          React.DOM.h6(null, signal.location), 
          React.DOM.h6(null, signal.summary)
        ), 
        React.DOM.td(null, 
          signal.source, 
          React.DOM.h6(null, moment(signal.timestamp*1000).fromNow())
        ), 
        React.DOM.td(null, 
          (this.props.allProspected) ? 
            React.DOM.a({href: "javascript:", 
               className: "btn btn-success btn-xs disabled green-gradient", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
            ) : React.DOM.a({href: "javascript:", 
                      className: "btn btn-success btn-xs green-gradient", 
                  onClick: this.turnCompanySignalToProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
        )
      )
    )
  },
  turnCompanySignalToProspect: function() {
    var thiss = this;
    $.ajax({
      //url: 'https://nameless-retreat-',
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:false, signal_id: company.objectId,
             signal_type: 'CompanySignal'},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  }
})

var PeopleSignalRow = React.createClass({displayName: 'PeopleSignalRow',
  turnSignalIntoProspect: function() {
    var thiss = this;
    console.log(this.props.signal)
    $.ajax({
      //url:'http://127.0.0.1:5000/signal_to_prospect',
      url:'http://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {signal_id: thiss.props.signal.objectId, signal_type:'PeopleSignal',
             all_signals:false},
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err.responseText) } 
    })
  },

  render: function() {
    //console.log(company)
    people = (this.props.signal) ? this.props.signal : {}
    company = people.company
    signal = people.signal.signal[0]
    console.log(people)
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          people.title_score
        ), 
        React.DOM.td(null, 
          React.DOM.h6(null, people.name + " - ", " ", React.DOM.span({style: {fontStyle:'italic'}}, 
              people.title)), 
          React.DOM.h6(null, React.DOM.a({href: "javascript:"}, company.website)), 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, company.city)
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, signal.job_title), 
          React.DOM.h6(null, signal.company_name), 
          React.DOM.h6(null, signal.location), 
          React.DOM.h6(null, signal.summary)
        ), 
        React.DOM.td(null, 
          signal.source, 
          React.DOM.h6(null, moment(signal.timestamp*1000).fromNow())
        ), 

        React.DOM.td(null, 
          (this.props.allProspected) ? 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs green-gradient disabled", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
            ) : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs green-gradient", 
                      onClick: this.turnSignalIntoProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
          
        )
      )
    )
  }
})

},{"./company_detail.js.min.js":9}],53:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalLoading
  getInitialState: function() {
    return {
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    }
  },

  initialize: function() {
    var thiss = this;
    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.currentProfile.objectId
    var channel = pusher.subscribe(objectId);
    channel.bind("my-event", function(data) {
      console.log(data)
      thiss.setState({
        count: data.count,
        prospectName: data.name,
        prospectTitle: data.title,
        companyName: data.company
      })
    });

    // Get Signal Report Count
    // Get Last PeopleSignal Found
    qry = { profile: appConfig.pointer('ProspectProfile',objectId) }
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        count = (res.results[0]) ? res.results[0].people_count : 0
        
        thiss.setState({count: count })
      },
    });
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      headers:appConfig.headers,
      data: {'where':JSON.stringify(qry),order:'-createdAt'},
      success: function(res) {
        //console.log(res)
        thiss.setState({
          prospectName: (res.results[0]) ? res.results[0].link_text : "",
          prospectTitle: (res.results[0]) ? res.results[0].title : "",
          companyName: (res.results[0]) ? res.results[0].company : ""
        })
      },
    });
  },

  componentDidMount: function() {
    Pusher.log = function(message) {
      if (window.console && window.console.log) {
        //window.console.log(message);
      }
    };

    this.initialize()
  },

  componentDidUpdate: function() {
  },

  componentWillReceiveProps: function() {
    this.setState({
      count: '~',
      prospectName : '~',
      prospectTitle : '~',
      companyName : '~',
    })
    this.initialize()
  },

  render: function() {
    // Show companies for hiring signals
    return (
      React.DOM.div({style: {background:'linear-gradient(#dae8ff,#dae8ff)', backgroundImage: 'radial-gradient(circle at center center,#fff,#dff1fd 900px)',height:'100%',paddingTop:10}}, 
        React.DOM.div({className: "signal-card", 
            style: { width:500,textAlign:'center',display:'block',marginRight:'auto', marginLeft:'auto',marginTop:100,height:200,paddingTop:30,paddingLeft:30}}, 

        React.DOM.div({className: "loading-two-balls", style: {height:20,width:20}}, 
          React.DOM.div({className: "dot1", style: {color:'black'}}), 
          React.DOM.div({className: "dot2", style: {color:'black'}})
        ), 
        React.DOM.div({id: "", style: {color:'#1ca3fd', fontWeight:'bold',marginTop:-30,
                          marginLeft:0, fontSize:32, fontFamily:'Proxima-Nova'}}, 
              "lol", 
            this.state.count + " people found."
          ), 
          React.DOM.div({style: {float:'right',marginTop:55,marginRight:55}}, 
            React.DOM.h6({style: {marginBottom:3, fontWeight:'bold'}}, 
              this.state.prospectName.split('|')[0], " -  ", 
              React.DOM.span({style: {fontWeight:500, fontStyle:'italic'}}, 
                this.state.prospectTitle)), 
            React.DOM.h6({style: {marginTop:0,textAlign:'left'}}, 
              this.state.companyName
            )
          )
        )
      )
    )
  },
});

},{}],54:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      reportCount:'~',
      companyCount: '~',
      peopleCount: '~'
    }
  },
  // SignalProfile
  setCurrentView: function(e) {
    if(!this.props.profile.mining_job)
      this.props.setCurrentView('Calendar')
    else
      this.props.setCurrentView('MiningJobCalendar')
    //e.stopPropagation()
  },

  calendarClick:function(e) {
    this.props.setCurrentProfile(this.props.profile)
    if(!this.props.profile.mining_job)
      this.props.setCurrentView('Calendar')
    else
      this.props.setCurrentView('MiningJobCalendar')
    e.stopPropagation()
  },

  analyticsClick:function(e) {
    this.props.setCurrentProfile(this.props.profile)
    this.props.setCurrentView('Analytics')
    e.stopPropagation()
  },

  setCurrentProfile: function() {
    this.props.setCurrentProfile(this.props.profile)
    if(this.props.profile.type == "prospect_profile") {
      this.props.setCurrentView('MiningJobCalendar')
    } else {
      if(this.props.profile.list_type == "territory")
        this.props.setCurrentView('TerritoryCalendar')
      else if(this.props.profile.list_type == "territory")
        this.props.setCurrentView('TerritoryCalendar')
      else
        this.props.setCurrentView('Calendar')
    }
  },

  removeTheProfile: function() {
    this.props.removeProfile(this.props.profile)
  },

  removeProfile: function() {
    thissss = this;
    console.log(thiss.removeTheProfile)

    swal({   
      title: "Are you sure?",   
      text: "Your will not be able to recover this prospect list!",   
      type: "warning",   
      showCancelButton: true,   
      confirmButtonColor: "#DD6B55",   
      confirmButtonText: "Yes, delete it!",   
      closeOnConfirm: false }, 
      function(){   
        swal("Deleted!", "Your prospect list has been deleted.", "success"); 
        thissss.removeTheProfile()
        console.log('deleted')
      });
  },

  //componentDidUpdate: function(prevProps, prevState) { },
  componentWillReceiveProps: function(nextProps) {
  //componentWillUpdate: function(nextProps) {
    if(typeof(this.props.profile.objectId) == "undefined") {
      console.log('RECEIVE PROPS')

      var pusher = new Pusher('1a68a96c8fde938fa75a');
      var thiss = this;
      console.log(nextProps)
      console.log(nextProps.profile)
      console.log(_.keys(nextProps.profile))
      console.log(nextProps.profile.objectId)
      objectId = nextProps.profile.objectId
      console.log('new pusher channel -> '+ objectId)

      var channel = pusher.subscribe(objectId);
      channel.bind("done", function(data) {
        console.log(data)
        console.log(thiss.props)
        //thiss.setState({ done: data.done_timestamp })
        thiss.props.updateMiningJobDone(thiss.props.profile)
        alertify.success("Success notification");
      });
    }
  },

  componentDidMount: function() {
    var pusher = new Pusher('1a68a96c8fde938fa75a');
    objectId = this.props.profile.objectId
    console.log('new pusher channel ->', objectId)
    var channel = pusher.subscribe(objectId);
    var thiss = this;
    channel.bind("done", function(data) {
      console.log(data)
      console.log(thiss.props)
      //thiss.setState({ done: data.done_timestamp })
      thiss.props.updateMiningJobDone(thiss.props.profile)
      alertify.success("Success notification");
    });

    var thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      headers: appConfig.headers,
      data: {where: JSON.stringify( {profile: appConfig.pointer('ProspectProfile',this.props.profile.objectId)}),
             count: true},
      success: function(res) { thiss.setState({peopleCount: res.count})},
      error: function(err) { }
    })
    $.ajax({
      url:'https://api.parse.com/1/classes/CompanySignal',
      headers: appConfig.headers,
      data: {where: JSON.stringify({profile:
             appConfig.pointer('ProspectProfile',this.props.profile.objectId)}),
             count: true},
      success: function(res) { thiss.setState({companyCount: res.count})},
      error: function(err) { }
    })
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport',
      headers: appConfig.headers,
      data: {where: JSON.stringify({profile:
             appConfig.pointer('ProspectProfile',this.props.profile.objectId)}),
             count: true},
      success: function(res) { thiss.setState({reportCount: res.count})},
      error: function(err) { }
    })
  },

  render: function() {
    signalDetails = []
    for(i=0;i< this.props.profile.profiles.length; i++) {
      signalDetails.push(ProfileType({profile: this.props.profile.profiles[i]}))
    }
    //console.log(this.props.profile.list_type)
    //console.log(this.props.profile.list_type == "territory")
    if(this.props.profile.list_type == "signal") 
      icon = React.DOM.i({className: "fa fa-wifi", style: {marginRight:5}})
    else if(this.props.profile.list_type == "territory") 
      icon = React.DOM.i({className: "fa fa-globe", style: {marginRight:5}})
    else
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {marginRight:5}})

    loading = (!this.props.profile.done) ? React.DOM.div({className: "profile-loading"}, 
            React.DOM.div({className: "double-bounce1"}), 
            React.DOM.div({className: "double-bounce2"})
          ) : ""
    
    if(this.props.profile.mining_job && this.props.profile.done)
      mining_job_done = React.DOM.i({className: "fa fa-check-circle", style: {color:'#0096ff',marginLeft:5,fontSize:15}})
    else
      mining_job_done = ""

    selectedStyle = {paddingTop:5,borderLeft:0,paddingLeft:10, borderRight:'1px solid #ddd', borderLeft: '5px solid #0096ff !important'}
    regularStyle = {paddingTop:5,borderLeft:0,paddingLeft:10, borderRight:'1px solid #ddd', borderLeft: '5px solid red !important'}
    regularStyle = {paddingTop:5,borderLeft:0,paddingLeft:10, borderRight:'1px solid #ddd', borderLeft:'5px solid rgba(0,0,0,0)'}
    selected= this.props.profile.objectId == this.props.currentProfile.objectId
    itemStyle = (selected) ? selectedStyle : regularStyle
    itemClass = (selected) ? "list-group-item ideal-company-profile list-group-selected" : "list-group-item ideal-company-profile"


    signal_type = this.props.profile.signal_type
    return (
      React.DOM.div({className: itemClass, 
           onClick: this.setCurrentProfile, 
           style: regularStyle}, 
        React.DOM.span({className: "profile-title"}, 
          React.DOM.h6({className: "label label-primary profile-name", 
              style: {backgroundColor:'rgb(0, 122, 265)'}}, 
            icon, " ", this.props.profile.name
          ), 
          React.DOM.h6({className: "profile-name"}, 
            React.DOM.span({className: "label label-default"}, 
              React.DOM.i({className: "fa fa-calendar"}), " ", this.state.reportCount
            ), "  ", 
            React.DOM.span({className: "label label-default"}, 
              React.DOM.i({className: "fa fa-building"}), " ", this.state.companyCount, "  ", 
              React.DOM.i({className: "fa fa-user"}), " ", this.state.peopleCount
            )
          ), 
          loading, mining_job_done, 
          React.DOM.a({href: "javascript:", 
             className: "btn btn-primary btn-xs signal-detail-btn", 
             onClick: this.removeProfile}, 
            React.DOM.i({className: "fa fa-archive"})), 
          React.DOM.a({href: "javascript:", 
            style: {display:'block'}, 
            className: "btn btn-primary btn-xs signal-detail-btn", 
             onClick: this.analyticsClick}, 
            React.DOM.i({className: "fa fa-pie-chart"})), 
          React.DOM.a({href: "javascript:", 
            style: {display:'block'}, 
            className: "btn btn-primary btn-xs signal-detail-btn", 
             onClick: this.settingsClick}, 
            React.DOM.i({className: "fa fa-wrench"})), 
          React.DOM.a({href: "javascript:", className: "btn btn-primary btn-xs signal-detail-btn", 
             style: {display:'none'}, 
             onClick: this.calendarClick}, 
            React.DOM.i({className: "fa fa-calendar"})), 
          React.DOM.a({href: "javascript:", 
             onClick: this.launchModal, 
             style: (signal_type != "signal") ? {display:'block'}:{display:'none'}, 
             className: "btn btn-primary btn-xs signal-detail-btn"}, 
            React.DOM.i({className: "fa fa-cloud-download"}))
        ), 

        React.DOM.div({className: "profile-body", style: {marginTop:5}}, 
          signalDetails
        )
      )
    );
  },

  launchModal: function(e) {
    $('#createMiningJobModal').modal()
    this.props.setCurrentProfile(this.props.profile)
    if(this.props.currentView == 'Calendar')
      this.props.setCurrentView('Calendar')
    else if(this.props.currentView == 'Feed')
      this.props.setCurrentView('Feed')
    e.stopPropagation()
  }
});

var ProfileType = React.createClass({displayName: 'ProfileType',
  render: function() {

  if(this.props.profile){
    if(this.props.profile.className == "HiringProfile") {
      signalIcon = React.DOM.i({className: "fa fa-suitcase"})
      signalName = "Hiring"
      signalValue = _.reduce(this.props.profile.roles, function(result, role) {
        return role + ", "+ result
      }, "");
      //console.log('wtf')
      //console.log(signalValue)
    } else if (this.props.profile.className  == "EmployeeProfile") {
      signalIcon = React.DOM.i({className: "fa fa-users"})
      signalName = "Company Size"
      signalValue = _.reduce(this.props.profile.employees, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "FundingProfile") {
      signalIcon = React.DOM.i({className: "fa fa-institution"})
      signalName = "Funding"
      signalValue = _.reduce(this.props.profile.revenues, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "RevenueProfile") {
      signalIcon = React.DOM.i({className: "fa fa-money"})
      signalName = "Revenue"
      signalValue = _.reduce(this.props.profile.revenues, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "TechnologyProfile") {
      signalIcon = React.DOM.i({className: "fa fa-wrench"})
      signalName = "Technology"
    } else if (this.props.profile.className  == "LocationProfile") {
      signalIcon = React.DOM.i({className: "fa fa-map-marker"})
      signalName = "Locale"
      signalValue = _.reduce(this.props.profile.locale, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "IndustryProfile") {
      signalIcon = React.DOM.i({className: "fa fa-building"})
      signalName = "Industries"
      signalValue = _.reduce(this.props.profile.industries, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "TerritoryProfile") {
      console.log()
      signalIcon = React.DOM.i({className: "fa fa-globe"})
      signalName = (this.props.profile.territories.length == 1) ? "Territory" : "Territories"
      signalValue = _.reduce(this.props.profile.territories, function(result, role) {
        return role + ", "+ result
      }, "");
    } else if (this.props.profile.className  == "CompanySizeProfile") {
      signalIcon = React.DOM.i({className: "fa fa-wrench"})
      signalName = "Technology"
    } else if (this.props.profile.className  == "ListProfile") {
      signalIcon = React.DOM.i({className: "fa fa-list-alt"})
      signalName = "Company List"
      signalValue = this.props.profile.listName
    } else if (this.props.profile.className  == "ProspectTitleProfile") {
      signalIcon = React.DOM.i({className: "fa fa-user"})
      signalName = "Titles"
      signalValue = _.reduce(this.props.profile.title_keywords, 
     function(result, role) {
        return role + ", "+ result
      }, "");
    } else {
      signalIcon = "not found"
      signalName = "Not found"
      signalValue= "Not found"
    }
  } else {
      signalIcon = "not found"
      signalName = "Not found"
      signalValue= "Not found"

  }

    return (
      React.DOM.span({className: "ideal-profile"}, " ", signalIcon, 
        React.DOM.h6({className: "profile-signal-name"}, signalName, " - "), 
        React.DOM.span({className: "profile-signal-value"}, " "+signalValue)
      )
    );
  }
});

/*
  Funding Profile
  - Amount Raised - btn group
  - Stage - btn group

  People Profile
  - Locale - tags w/ typahead
  - Title - tags w/ typahead

  Company Profile
  - Industries - tags with typahead
  - Revenue - btn group
  - # of Employees - btn group
  - Locale - tags with typahead
*/


},{}],55:[function(require,module,exports){
/** @jsx React.DOM */

var PanelFooting = require('./panel_footing.js.min.js')
var SignalProfile = require('./signal_profile.js.min.js')
var SignalLoading = require('./signal_loading.js.min.js')
var MiningJobLoading = require('./mining_job_loading.js.min.js')
var CompanySignalCard = require('./company_signal_card.js.min.js')
var PeopleSignalCard = require('./people_signal_card.js.min.js')
var SignalCalendar = require('./signal_calendar.js.min.js')
var MiningJobCalendar = require('./mining_job_calendar.js.min.js')
var SignalsDetail = require('./signal_detail.js.min.js')
var TerritoryOverview = require('./territory_overview.js.min.js')
var TerritoryDetail = require('./territory_detail.js.min.js')
var MiningJobDetail = require('./mining_job_detail.js.min.js')
var SignalAnalytics = require('./signal_analytics.js.min.js')
var SignalApps = require('./signal_apps.js.min.js')

var CreateHiringSignalModal = require('./create_hiring_signal_modal.js.min.js')
var CreateFundingSignalModal = require('./create_funding_signal_modal.js.min.js')
var CreateProspectProfileModal = require('./create_prospect_profile_modal.js.min.js')
var CreateCompanyProfileModal = require('./create_company_profile_modal.js.min.js')
var CreateTerritoryStrategyModal = require('./create_territory_strategy_modal.js.min.js')
var CreateMiningJobModal = require('./create_mining_job_modal.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    return {
      signalType: 'CompanySignal',
      currentProfile: {name:'All'},
      currentProfileObjectId: {},
      currentProfileReport: {},
      signals: [],
      currentView: 'Apps',
      profiles: [],
    }
  },

  setCurrentReport: function(newProfileReport) {
    console.log('NEW REPORT')
    console.log(newProfileReport)

    this.setState({ 
      currentView:'Detail',
      currentProfileReport: newProfileReport 
    })
  },

  setReport: function(view, report) {
    console.log('setReport')
    this.setState({currentView:view, currentProfileReport: report}) 
  },

  prospectSignalReport: function(profile, report) {
    profiles = _.map(this.state.profiles, function(_profile) {
                  if(_profile.objectId == profile.objectId){
                    reports = _.map(_profile.reports, function(_report) {
                                if(_report.objectId == report.objectId){
                                  _report.prospected = true
                                  return _report
                                }
                                return _report
                              })
                    _profile.reports = reports
                    return _profile
                  }
                  return _profile
                })
                //console.log(profiles)
    this.setState({profiles: profiles})
    $.ajax({
      url:'https://api.parse.com/1/classes/SignalReport/'+report.objectId,
      type:'PUT',
      headers:appConfig.headers,
      data:JSON.stringify({prospected:moment().valueOf()/1000}),
      success: function(res) {},
      error: function(err) {}
    })
  },

  setCurrentView: function(newSignalView) {
    this.setState({currentView: newSignalView})
  },

  render: function() {
    currentProfile = this.state.currentProfile
    reports = this.state.currentProfile.reports
    reports = (reports) ? reports : []
    //reports = _.sortBy(reports, function(o){ return o.createdAt }).reverse()
    //console.log(currentProfile)
    console.log('CURRENT VIEW')
    console.log(this.state.currentView)
    if(currentProfile.name == "All" || currentProfile.done){
      if(this.state.currentView == "Apps") {
        signalView = SignalApps(null)
      } else if(this.state.currentView == "Feed") {
        signalView = React.DOM.div(null, 
            SignalDetailButtons({signalType: this.state.signalType, 
                                 currentProfile: this.state.currentProfile, 
                                 setSignalType: this.setSignalType}), 
            SignalsFeed({setCurrentView: this.setCurrentView, 
                         signalType: this.state.signalType, 
                         profile: this.state.currentProfile, 
                         signals: this.state.signals})
            )
      } else if(this.state.currentView == "Calendar"){
        signalView = SignalCalendar({currentProfile: this.state.currentProfile, 
                                    prospectSignalReport: this.prospectSignalReport, 
                                     reports: reports, 
                                     setCurrentReport: this.setCurrentReport, 
                                     setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "Analytics"){
        signalView = SignalAnalytics({currentProfile: this.state.currentProfile, 
                                    prospectSignalReport: this.prospectSignalReport, 
                                     reports: reports, 
                                     setCurrentReport: this.setCurrentReport, 
                                     setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "Detail"){
        signalView = SignalsDetail({currentProfile: this.state.currentProfile, 
                                    currentProfileReport: this.state.currentProfileReport, 
                                    setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "MiningJobDetail"){
        signalView = MiningJobDetail({currentProfile: this.state.currentProfile, 
                                    currentProfileReport: this.state.currentProfileReport, 
                                    setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "MiningJobOverview"){
        signalView = MiningJobDetail({currentProfile: this.state.currentProfile, 
                                    currentProfileReport: this.state.currentProfileReport, 
                                    setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "MiningJobCalendar"){
        signalView = MiningJobCalendar({currentProfile: this.state.currentProfile, 
                                        setCurrentReport: this.setCurrentReport, 
                                        setReport: this.setReport, 
                                        setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "TerritoryCalendar"){
        console.log('TERRITORY OVERVIEW IS CHOSEN')
        signalView = TerritoryOverview({currentProfile: this.state.currentProfile, 
                                        setCurrentReport: this.setCurrentReport, 
                                        setReport: this.setReport, 
                                        setCurrentView: this.setCurrentView})
      } else if(this.state.currentView == "TerritoryDetail"){
        console.log('TERRITORY DETAIL IS CHOSEN')
        signalView = TerritoryDetail({currentProfile: this.state.currentProfile, 
                                      currentProfileReport: this.state.currentProfileReport, 
                                      setCurrentReport: this.setCurrentReport, 
                                      setReport: this.setReport, 
                                      setCurrentView: this.setCurrentView})
      }
    } else {
      // Show Calendar Even When Signal Is Loading
      if(this.state.currentView == "Calendar"){
        signalView = SignalCalendar({currentProfile: this.state.currentProfile, 
                                     setCurrentReport: this.setCurrentReport, 
                                     reports: reports, 
                                     setCurrentView: this.setCurrentView})
      } else {
        console.log(this.state.currentProfile)
        if(this.state.currentProfile.type == "prospect_profile")
          signalView =MiningJobLoading({currentProfile: this.state.currentProfile})
        else
          signalView = SignalLoading({currentProfile: this.state.currentProfile})
      }
    }

   return (
     React.DOM.div(null, 
      React.DOM.div({style: {height:500}}, 
        React.DOM.div({className: "container", style: {padding:0, width:'100%', height:'100%'}}, 
          React.DOM.div({className: "col-md-3 signal-list", 
               style: { height:'102.8%', padding:0}}, 
              SignalsOptions({profiles: this.state.profiles, 
                              addProfile: this.addProfile, 
                              updateMiningJobDone: this.updateMiningJobDone, 
                              removeProfile: this.removeProfile, 
                              setCurrentView: this.setCurrentView, 
                              currentProfile: this.state.currentProfile, 
                              setCurrentProfile: this.setCurrentProfile})
          ), 
          React.DOM.div({className: "col-md-9", style: {height:'100%',padding:0}}, 
            signalView
          )

        ), 

        CreateMiningJobModal({createMiningJob: this.createMiningJob, 
                              currentProfile: this.state.currentProfile}), 
        CreateHiringSignalModal({addProfile: this.addProfile}), 
        CreateFundingSignalModal({addProfile: this.addProfile}), 
        CreateCompanyProfileModal({addProfile: this.addProfile}), 
        CreateProspectProfileModal({addProfile: this.addProfile, 
                      updateProfileWithObjectId: this.updateProfileWithObjectId}), 
        CreateTerritoryStrategyModal({addProfile: this.addProfile, 
                      updateProfileWithObjectId: this.updateProfileWithObjectId})
      )
      )

    )
  },
  /*
      <PanelFooting currentPage={this.state.currentPage}
                    count={this.state.count}
                    paginate={this.paginate}
                    prospectType={'Prospect'}
                    prospectsPerPage={this.state.prospectsPerPage}
                    setPaginate={this.setPaginate}
                    pages={this.state.pages}/>
  */

  createMiningJob: function(theProfile, date) {
    console.log('create mining job')
    var thiss = this;
    report = {
      //createdAt: moment().valueOf(),
      company_count: 0,
      people_count: 0,
      list_type:'mining_job',
      done: 0,
      mining_job: true,
    }

    profiles=_.map(this.state.profiles, function(profile) {
      if(_.isEqual(theProfile, profile)){
        if(profile.mining_days){
          profile.mining_days.push(date)
        }else{
          profile.mining_days = [date]
        }

        if(profile.reports){
          profile.reports = [report].concat(profile.reports)
        }else{
          profile.reports = [report]
        }
        
        thiss.setState({currentProfile: profile})
        thiss.persistMiningJob(date, report)
        return profile
      }
      return profile
    })
    thiss.setState({profiles: profiles})
  },

  persistMiningJob: function(date, report) {
    console.log(this.state)
    objectId = this.state.currentProfile.objectId
  },

  addProfile: function(newProfile) {
    profiles = this.state.profiles
    console.debug(newProfile)
    this.setState({profiles: [newProfile].concat(profiles)})
    this.setCurrentProfile(newProfile)
  },

  removeProfile: function(oldProfile) {
    this.setState({profiles: _.reject(this.state.profiles, function(profile) {
      return _.isEqual(oldProfile, profile)
    })})

    if(oldProfile.objectId){
      $.ajax({
        url:'https://api.parse.com/1/classes/ProspectProfile/'+oldProfile.objectId,
        headers:appConfig.headers,
        type:'DELETE',
      })
    }
  },

  updateMiningJobDone: function(profile) {
    profiles = _.map(this.state.profiles, function(_profile) {
                  if(_profile.objectId == profile.objectId) {
                    _profile.done = true
                    return _profile
                  }
                  return _profile
                })
    this.setState({profiles: profiles})
  },

  updateProfileWithObjectId: function(timestamp, objectId) {
    console.log('UPDATE PROFILES')
    newProfiles = _.map(this.state.profiles, function(profile) {
        if(profile.timestamp == timestamp) {
          profile.objectId = objectId
          return profile
        }
      return profile
    })
    
    console.log(newProfiles)
    this.setState({profiles: newProfiles})
    console.log(objectId)

    var pusher = new Pusher('1a68a96c8fde938fa75a');
    console.log('new pusher channel ->', objectId)
    var channel = pusher.subscribe(objectId);
    var thiss = this;
    channel.bind("done", function(data) {
      thiss.updateMiningJobDone(_.findWhere(thiss.state.profiles, {timestamp: timestamp}))
      alertify.success("New Success notification");
    });
  },

  setCurrentProfile: function(newProfile) {
    if(newProfile.only_people) {
      this.getSignals('PeopleSignal', 
                      JSON.stringify({
                         __type: 'Pointer',
                         className: 'ProspectProfile', 
                         objectId: newProfile.objectId}))
      this.setState({
        signalType: 'PeopleSignal',
        currentProfile: newProfile 
      })
    } else {
      this.setState({currentProfile: newProfile })
    }

    this.getSignals('PeopleSignal', newProfile)
  },

  componentDidMount: function() {
    this.getSignals(this.state.signalType)
    qry = {'include':'profiles,reports,prospect_list&order=-createdAt'}

    var _this = this;
    Parse.get('ProspectProfile', qry).done(function(res) {
      console.log(res)
      _this.setState({profiles: res.results})
    })
  },

  setSignalType: function(labelText) {
    if(labelText == "People")
      currentSignal = "PeopleSignal"
    else if(labelText == "Companies")
      currentSignal = "CompanySignal"
    this.getSignals(currentSignal)
    this.setState({signalType: currentSignal})
  },

  componentDidUpdate: function(nextProps, nextState) {
  },

  getSignals: function(signalType, currentProfile) {
    currentUser = JSON.parse(localStorage.currentUser)
    user = {
      '__type'    : 'Pointer',
      'className' : '_User',
      'objectId'  : currentUser.objectId
    }

    user = JSON.stringify(user)
    company = JSON.stringify(currentUser.company)
    profiles = this.state.currentProfile.profiles

    if(profiles){
      //qry = 'where={"company":'+company+',"user":'+user+',"profile":'+currentProfile+'}'
      profile = JSON.stringify({
        __type:'Pointer',
        className:'ProspectProfile',
        objectId:currentProfile.objectId
      })
      qry = 'where={"profile":'+profile+'}'
      //qry = qry + ',"profiles":{"$all":'+JSON.stringify(profiles)+'}}'
      if(signalType == 'PeopleSignal')
        qry = qry + '&include=signals'
      else
        qry = qry + '&include=signals,company'

    } else {
      qry = {'include':['signals','company']}
    }
  
    thiss = this
    $.ajax({
      url: 'https://api.parse.com/1/classes/'+signalType,
      //url: 'https://api.parse.com/1/classes/CompanySignal',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        //console.log(res.results)
        thiss.setState({signals: res.results})
      },
      error: function(err) { console.log(err) }
    });
  },
});

var SignalDetailButtons = React.createClass({displayName: 'SignalDetailButtons',
  setSignalType: function(e) {
    this.props.setSignalType($(e.target).text().trim())
  },

  render: function() {
    ppl = (this.props.signalType == "PeopleSignal") ? "choose btn btn-primary app-active" : "choose btn btn-primary"
    cmp = (this.props.signalType == "CompanySignal") ? "choose btn btn-primary app-active" : "choose btn btn-primary"

    cmp = (this.props.currentProfile.only_people)  ? cmp + " disabled" : cmp

    return (
      React.DOM.div(null, 
        React.DOM.div({id: "signalDetailButtons", style: {height:44}}, 
          React.DOM.h4({style: {display:'inline-block',float:'left',width:300,
                      fontWeight:200,marginTop:4,paddingLeft:20}}, 
            React.DOM.i({className: "fa fa-newspaper-o"}), " ",  
            this.props.currentProfile.name
          ), 
          React.DOM.div({className: "btn-group", style: {marginLeft:'0%'}}, 
            React.DOM.a({className: ppl, 
               style: {padding:2}, 
               onClick: this.setSignalType}, 
                React.DOM.i({className: "fa fa-user"}), " People"
            ), 
            React.DOM.a({className: cmp, 
               style: {padding:2}, 
               onClick: this.setSignalType}, 
                React.DOM.i({className: "fa fa-building"}), " Companies"
            )
          )
        )
      )
    );
  }
});

var SignalsOptions = React.createClass({displayName: 'SignalsOptions',
  addProfile: function(newProfile) {
    this.props.addProfile(newProfile)
  },

  setCurrentProfile: function(currentProfile) {
    this.props.setCurrentProfile(currentProfile)
  },

  removeProfile: function(oldProfile) {
    this.props.removeProfile(oldProfile)
  },

  componentDidMount: function() {
  },

  setCurrentView: function(newView) {
    console.log(newView)
    this.props.setCurrentView(newView)
  },

  render: function() {
    profs = []
    //console.log('signals render')
    console.debug(this.props.profiles)
    for(i=0; i< this.props.profiles.length;i++) {
      select= this.props.profiles[i].objectId == this.props.currentProfile.objectId
      profs.push(SignalProfile({setCurrentProfile: this.setCurrentProfile, 
                                updateMiningJobDone: this.props.updateMiningJobDone, 
                                setCurrentView: this.setCurrentView, 
                                currentProfile: this.props.currentProfile, 
                                selected: select, 
                                removeProfile: this.removeProfile, 
                                profile: this.props.profiles[i]}))
    }

    profiles_num = (this.props.profiles.length) ? this.props.profiles.length : "~"
    return (
      React.DOM.div(null, 
      React.DOM.div({className: "list-group"}, 
        React.DOM.li({className: "list-group-item", 
            style: {borderTop:0,borderLeft:0,height:44,paddingRight:5,paddingLeft:10,
                    backgroundColor:'#e0e6ea',
                    backgroundImage:'linear-gradient(#f5f7f8,#e0e6ea);'}}, 
            React.DOM.h4({style: {margin:0,textAlign:'center',fontWeight:200,
                        float:'left',marginTop:2}}, "Profiles (", profiles_num, ")"), 
          React.DOM.a({href: "javascript:", 
             className: "btn btn-xs btn-primary create-profile-dropdown", 
             'data-toggle': "dropdown", 
             onClick: this.launchDropdown, 
             style: {float:'right',
              backgroundImage:'linear-gradient(180deg, #0096ff 0%, #005dff 100%)'}}, 
            React.DOM.i({className: "fa fa-plus"}), "  Create Profile"
          ), 

          React.DOM.ul({className: "dropdown-menu", 
              style: {marginLeft:175,marginTop:-10}, 
              role: "menu", 'aria-labelledby': "dropdownMenu1"}, 
            React.DOM.li({role: "presentation"}, 
              React.DOM.a({href: "javascript:", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5}}, 
                 React.DOM.h6({style: {margin:2}}, 
                   React.DOM.i({className: "fa fa-suitcase", style: {width:10}}), 
                  "  Create Hiring Signal"
                )
              )
            ), 
            React.DOM.li({role: "presentation", style: {display:'block'}}, 
              React.DOM.a({href: "javascript:", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5}}, 
                React.DOM.h6({style: {margin:2}}, React.DOM.i({className: "fa fa-institution", style: {width:10}}), 
                  "  Create Funding Signal"
                )
              )
            ), 
            React.DOM.li({role: "presentation", style: {display:'block'}}, 
              React.DOM.a({href: "javascript:", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5}}, 
                React.DOM.h6({style: {margin:2}}, React.DOM.i({className: "fa fa-globe", style: {width:10}}), 
                  "  Create Territory Strategy"
                )
              )
            ), 
            React.DOM.li({role: "presentation"}, 
              React.DOM.a({onClick: this.launchModal, 
                 style: {paddingLeft:5,paddingRight:2}, 
                 href: "javascript"}, 
                React.DOM.h6({style: {margin:2}}, 
                  React.DOM.i({className: "fa fa-user", style: {width:10}}), 
                  "  Create Prospect Profile"
                )
              )
            ), 
            React.DOM.li({role: "presentation", style: {display:'none'}}, 
              React.DOM.a({role: "menuitem", tabindex: "-1", 
                 onClick: this.launchModal, 
                 style: {paddingLeft:5,paddingRight:2}, href: "#"}, 
                 React.DOM.h6({style: {margin:2}}, 
                   React.DOM.i({className: "fa fa-building", style: {width:10}}), 
                   "  Create Company Profile"
                 )
              )
            )
          )
        ), 
        React.DOM.div({id: "profiles-menu", style: {height:456, overflow:'auto',marginTop:1}}, 
          profs
        )
      )
    )
    );
  },

  launchModal: function(e) {
    e.preventDefault()
    console.log($(e.target).text().trim())
    if($(e.target).text().trim() == 'Create Hiring Signal')
      $('#createHiringSignalModal').modal()
    else if($(e.target).text().trim() == 'Create Funding Signal')
      $('#createFundingSignalModal').modal()
    else if($(e.target).text().trim() == 'Create Prospect Profile')
      $('#createProspectProfileModal').modal()
    else if($(e.target).text().trim() == 'Create Territory Strategy')
      $('#createTerritoryStrategyModal').modal()
    else if($(e.target).text().trim() == 'Create Company Profile')
      $('#createCompanyProfileModal').modal()
  },

  launchDropdown: function(e) {
    e.preventDefault()
    $('.create-profile-dropdown').dropdown()
  }
});

var SignalsFeed = React.createClass({displayName: 'SignalsFeed',
  render: function() {
    //this.getSignals()
    signalCards = []
    for(i=0;i< this.props.signals.length;i++) {
      if(this.props.signalType == "CompanySignal")
        signalCards.push(CompanySignalCard({company: this.props.signals[i]}))
      else if(this.props.signalType == "PeopleSignal")
        signalCards.push(PeopleSignalCard({profile: this.props.profile, person: this.props.signals[i]}))
    }
    
    content = (this.props.signals.length) ? signalCards : React.DOM.div({className: "signal-card"}, "LOL")
    content = signalCards

    return (
      React.DOM.div({className: "container signal-card-background", style: {height:456, overflow:'auto'}}, 
        React.DOM.div({className: "col-md-8 col-md-offset-2"}, 
          content
        )
      )
    );
  }
});

},{"./company_signal_card.js.min.js":10,"./create_company_profile_modal.js.min.js":12,"./create_funding_signal_modal.js.min.js":13,"./create_hiring_signal_modal.js.min.js":14,"./create_mining_job_modal.js.min.js":16,"./create_prospect_profile_modal.js.min.js":17,"./create_territory_strategy_modal.js.min.js":19,"./mining_job_calendar.js.min.js":37,"./mining_job_detail.js.min.js":38,"./mining_job_loading.js.min.js":39,"./panel_footing.js.min.js":40,"./people_signal_card.js.min.js":41,"./signal_analytics.js.min.js":49,"./signal_apps.js.min.js":50,"./signal_calendar.js.min.js":51,"./signal_detail.js.min.js":52,"./signal_loading.js.min.js":53,"./signal_profile.js.min.js":54,"./territory_detail.js.min.js":60,"./territory_overview.js.min.js":61}],56:[function(require,module,exports){
/** @jsx React.DOM */

theData = require('../lib/data.min.js') 

module.exports = React.createClass({displayName: 'exports',
  // SignUp
  componentDidMount: function() {
    //$('body').css({overflow:'hidden'})
    //$('body').css({overflow:'hidden'})
    var thiss = this;
    $("input").keypress(function(event) {
        if (event.which == 13) {
          event.preventDefault();
          thiss.signup()
        }
    });
  },

  retrieveUser: function(objectId) {
    headers = {
      "X-Parse-Application-Id": "N85QOkteEEQkuZVJKAvt8MVes0sjG6qNpEGqQFVJ",
      "X-Parse-REST-API-Key": "VN6EwVyBZwO1uphsBPsau8t7JQRp00UM3KYsiiQb"
    }
    $.ajax({
      url:'https://api.parse.com/1/users/'+objectId,
      headers: headers,
      type:'GET',
      success:function(res) {
        localStorage.setItem('currentUser', JSON.stringify(res))
        location.href = "#"
      },
      error: function(res) {
        console.log(res)
      }
    });
  },

  signup: function() {
    console.log('signup')
    email = $('#email').val().trim()
    password = $('#password').val().trim()
    thiss = this;
    if($('#company').val().trim() == "" || email == "" || password == ""){
      alertify.error('There was an error with your registration request. Please try again')
      return 0
      
    }

    $.ajax({
      url:'https://api.parse.com/1/classes/Company',
      type:'POST',
      headers: appConfig.headers,
      data: JSON.stringify({ 'name': $('#company').val(), }),
      success:function(res) {
        $.ajax({
          url:'https://api.parse.com/1/users',
          type:'POST',
          headers: appConfig.headers,
          data: JSON.stringify({
            'username':email,
            'password': password,
            'accountType':'trial',
            'user_company':{
              '__type'    : 'Pointer',
              'className' : 'UserCompany',
              'objectId'  : res.objectId,
            }
            // people_archive_list
            // company_archive_list
            // ClearSpark - api_key
          }),
          success:function(res) {
            // Do another request to get current user
            localStorage.setItem('currentUser', JSON.stringify(res))
            thiss.retrieveUser(res.objectId)
          },
          error: function(res) {
            console.log(res)
            alertify.error('There was an error with your registration request. Please try again')
          }
        });
      },
      error: function(res) {
        console.log(res)
        alertify.error('There was an error with your registration request. Please try again')
      }
    });
  },

  render: function() { 
    data = theData()
    imgs_1 = []
    imgs_2 = []
    for(i=0;i < 120; i++) {
      imgs_1.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }
    for(i=15;i < 30; i++) {
      imgs_2.push(React.DOM.img({src: data[i], className: "prospect-img"}))
    }

  console.log(data)
    return (
      React.DOM.div({id: "signup", style: {marginTop:0}}, 

      React.DOM.div({style: {paddingTop:100}}, 
        React.DOM.h1({className: "title"}, "Customero."), 
        React.DOM.h5({className: "tagline"}, "Generate high quality prospect lists. Accelerate Sales."), 
          React.DOM.div({className: "panel panel-default login-info", style: {display:'block',marginTop:50}}, 
            React.DOM.div({className: "panel-body", style: {fontFamily:'proxima-nova',fontWeight:'bold'}}, 
              React.DOM.form({onSubmit: this.login}, 
              React.DOM.input({placeholder: "Email", id: "email", type: "text", className: "form-control input-lg"}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Company", type: "text", id: "company", className: "form-control input-lg"}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Password", type: "password", id: "password", className: "form-control input-lg"}), 
              React.DOM.br(null), 
              React.DOM.input({placeholder: "Repeat Password", type: "password", id: "repeat_password", className: "form-control input-lg"}), 
              React.DOM.br(null), 
              React.DOM.a({href: "javascript:", onClick: this.signup, className: "btn btn-primary btn-lg", style: {display:'block',backgroundColor:'#1ca3fd', backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)',borderRadius:3,fontFamily:'proxima-nova',fontWeight:'bold'}}, "Sign Up")
              )
            )
          )
      ), 

      React.DOM.div({id: "", style: {position:'absolute',zIndex:'-2',top:0,left:0}}, 
        React.DOM.div({className: "", style: {marginLeft:0,width:'120%',display:'none'}}, 
        imgs_1, 
        imgs_2
        )
      )
      )
    )
  }
});

},{"../lib/data.min.js":67}],57:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // Spinner
  render: function() {
    circleStyle=(this.props.circleStyle) ? this.props.circleStyle : {}
    spinnerStyle=this.props.spinnerStyle ? this.props.spinnerStyle : {}
    return (
      React.DOM.div({className: "spinner", style: spinnerStyle}, 
        React.DOM.div({className: "spinner-container container1"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        ), 
        React.DOM.div({className: "spinner-container container2"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        ), 
        React.DOM.div({className: "spinner-container container3"}, 
          React.DOM.div({className: "circle1", style: circleStyle}), 
          React.DOM.div({className: "circle2", style: circleStyle}), 
          React.DOM.div({className: "circle3", style: circleStyle}), 
          React.DOM.div({className: "circle4", style: circleStyle})
        )
      )

    )
  },
})

},{}],58:[function(require,module,exports){
/** @jsx React.DOM */

var EditTemplateView = require('./edit_template.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  //Templates
  getInitialState: function() {
    return {
      selectedTemplate: 0,
      editMode: false
    }
  },

  changeMode: function() {
    this.setState({editMode: !this.state.editeMode})
  },

  render: function() {
    templateView = (!this.state.editMode) ? TemplateView({changeMode: this.changeMode}) : EditTemplateView(null)
    return (
      React.DOM.div(null, 
        React.DOM.div({style: {height:'100%'}}, 
          TemplateSideMenu(null), 
          React.DOM.div({className: "col-md-9", style: {padding:0,height:'100%'}}, 
              templateView
          )
        )
      )
    );
  }
});


var TemplateView = React.createClass({displayName: 'TemplateView',
  changeMode: function() {
    this.props.changeMode()
  },
  render: function() {
    return (
      React.DOM.div({className: "panel panel-info", style: {width:'100%',height:'100%',border:0}}, 
        React.DOM.div({className: "panel-heading"}, 
          "Template Name",  
          React.DOM.a({href: "javascript:", 
             onClick: this.changeMode, 
             className: "btn btn-primary btn-xs", 
             style: {display:'block',float:'right',marginTop:'0px'}}, 
            React.DOM.i({className: "fa fa-pencil-square"}), "   Edit Template")
        ), 
        React.DOM.div({className: "panel-body"}, 
        React.DOM.h4(null, "Followup - Prospecting SAAS Outreach"), 
        React.DOM.h6({style: {marginBottom:'0'}, className: "text-muted"}, "Created by Mark on Jul. 21, 2014"), 
        React.DOM.h6({style: {marginTop:'0'}, className: "text-muted"}, "last updated 7 days ago"), 
        React.DOM.br(null), 
        React.DOM.br(null), 

        React.DOM.div({className: "panel panel-default"}, 

          React.DOM.div({className: "panel-body"}, 
          "15 minutes to get company_name more customers" + ' ' +
          "Hey first_name," + ' ' +

          "Would you like to hear an idea for a 15 minute hack that could significantly increase the number of prospects your sales people have access to ?" + ' ' +
           
          "Recently one of our B2B clients saw a huge increase in trial sign ups after working with us. first_name, lets schedule a 15 minute call this week to see if this would be a good fit for both of us." + ' ' +
           
          "What the best time for you this week ?" + ' ' +
           
          "--" + ' ' +
          "Mark" + ' ' + 
          "Customero" + ' ' +
          "mark@customerohq.com"
          
          )
        )
      )
    )
    );
  },
});

var TemplateSideMenu = React.createClass({displayName: 'TemplateSideMenu',
  getInitialState: function() {
    return {
      templates: [],
    }
  },

  componentDidMount: function() {
    //Ajax Request For Templates
    /*
     $.ajax({
      url:'',
      headers: "",
      data: "",
      success: function() {
      },
      error: function() {
      }
     });
    */
  },

  render: function() {
    templates = []
    for(i=0;i< this.state.templates.length; i++)
      templates.push(React.DOM.a({href: "javascript:", className: "list-group-item"}, "templates[i].name"))
    return (
      React.DOM.div({className: "col-md-3", style: {padding:'0', borderRight:'1px solid #ddd',height:'100%',textAlign:'center'}}, 
        React.DOM.div({className: "panel panel-default", style: {border:0}}, 
          React.DOM.div({className: "panel-heading", style: {height:60}}, 
            React.DOM.span({style: {float:'left',fontSize:20,fontWeight:'bold'}}, 
              "Templates"
            ), 
            React.DOM.a({href: "javascript:", className: "btn btn-success ", 
                style: {float:'right'}}, 
              React.DOM.i({className: "fa fa-plus"})
            )
          ), 
          React.DOM.ul({className: "list-group", style: {textAlign:'left'}}, 
            templates
          )
        )
      )
    )
  }
});

},{"./edit_template.js.min.js":22}],59:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  //TemplatesMenu
  toggleTemplateEditMenu: function(currentTemplate) {
    this.props.toggleTemplateEditMenu(currentTemplate)
  },

  createTemplate: function() {
    this.props.toggleTemplateEditMenu({
      name: '',
      body:'',
      subject:'',
      editMode:true,
      newTemplate: true
    }, true)
  },

  render: function() {
    //console.log(this.props.templates)
    templates = []
    for(i=0;i< this.props.templates.length; i++) {
      templates.push(
        TemplateListItem({
          toggleTemplateEditMenu: this.toggleTemplateEditMenu, 
          template: this.props.templates[i]})
      )
    }

    return (
      React.DOM.div({className: "", style: {padding:'0', height:'100%',textAlign:'center'}}, 
        React.DOM.div({className: "panel panel-default", 
             style: {borderRight:0,borderRadius:0,height:'100%', overflow:'auto'}}, 
          React.DOM.div({className: "panel-heading", style: {height:40}}, 
            React.DOM.span({style: {float:'left',fontSize:14,fontWeight:'bold'}}, 
              React.DOM.i({className: "fa fa-file-text-o"}), 
              React.DOM.span({style: {marginLeft:5}}, "Templates")
            ), 
            React.DOM.a({href: "javascript:", 
              className: "btn btn-success btn-xs", 
              onClick: this.createTemplate, 
                style: {float:'right'}}, 
              React.DOM.i({className: "fa fa-plus"}), 
              React.DOM.span({style: {marginLeft:5}}, "Create Template")
            )
          ), 
          React.DOM.ul({className: "list-group", 
              style: {textAlign:'left'}}, 
            templates
          )
        )
      )
    )
  }
});

var TemplateListItem = React.createClass({displayName: 'TemplateListItem',
  toggleTemplateEditMenu: function() {
    console.log(this.props.template)
    template = this.props.template
    template.editMode = false
    this.props.toggleTemplateEditMenu(template)
  },

  render: function() {
    return (
      React.DOM.div(null, 
        React.DOM.a({href: "javascript:", 
          style: {borderBottom: '1px solid rgb(221, 221, 221)',paddingTop:5,paddingBottom:0}, 
           onClick: this.toggleTemplateEditMenu, 
           className: "list-group-item"}, 
           React.DOM.span({className: "label label-default"}, 
             this.props.template.name
           ), 
           React.DOM.h6(null, "Subject:", React.DOM.span({className: "text text-muted"}, 
             " " + this.props.template.subject
           ))
         )
      )
    );
  }
});

},{}],60:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalDetail
  getInitialState: function() {
    return {
      currentSignal: 'CompanySignal',
      signals: [],
      //allProspected: this.props.currentProfileReport.prospected,
      companyCount: '~',
      peopleCount: '~'
    }
  },

  getSignals: function(currentSignal) {
    var thissss = this;
    currentReport = this.props.currentProfileReport.objectId
    currentProfileReport = appConfig.pointer('SignalReport', currentReport)

    qry = {
      where:JSON.stringify({ report: currentProfileReport }),
      include:'company_signal,company_signal.signals,signals',
      order:'-createdAt',
      limit:100
    }

    $.ajax({
      url: 'https://api.parse.com/1/classes/'+currentSignal,
      data: qry,
      type:'GET',
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log('SIGNAL DETAIL')
        console.log(res.results)
        console.log('PROFILE REPORT')
        console.log(thissss.props.currentProfileReport.objectId)
        thissss.setState({signals: res.results})
      },
      error: function(err) { console.log(err.responseText) }
    });
  },

  setCompanyState: function() { this.setState({currentSignal: 'CompanySignal'}) }, 
  setPersonState: function() { this.setState({currentSignal: 'PeopleSignal'}) }, 

  componentDidMount: function() {
    console.log(this.props.currentProfileReport.objectId)
    this.getSignals(this.state.currentSignal)
    qry = {
      where:JSON.stringify({ report: currentProfileReport }),
      count: 1
    }
    var thiss = this;
    $.ajax({
      url:'https://api.parse.com/1/classes/PeopleSignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({peopleCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })

    $.ajax({
      url:'https://api.parse.com/1/classes/CompanySignal',
      data: qry,
      headers: appConfig.headers,
      success: function(res) { thiss.setState({companyCount: res.count})},
      error: function(err) { console.log(err.responseText) },
    })
  },

  componentWillUpdate: function(nextProps, nextState) {
    if(this.state.currentSignal != nextState.currentSignal)
      this.getSignals(nextState.currentSignal)
  },

  returnToCalendarView: function() {
    console.log('return to calendar view')
  },

  render: function() {
    console.log('ALL PROSPECTED')
    console.log(this.state.allProspected)
    console.log('CURRENT SIGNAL')
    console.log(this.state.currentSignal)
    console.log('SIGNAL')
    console.log(this.state.signals)
    signals = []
    for(i=0;i< this.state.signals.length; i++) {
      if(this.state.currentSignal == 'CompanySignal')
        signals.push(CompanyHiringSignalRow({signal: this.state.signals[i], 
                                       allProspected: this.state.allProspected}))
      else
        signals.push(PeopleSignalRow({signal: this.state.signals[i], 
                                       allProspected: this.state.allProspected}))
    }

    currentProfileReport = this.props.currentProfileReport
    companyBtn = (this.state.currentSignal == "CompanySignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    peopleBtn = (this.state.currentSignal == "PeopleSignal") ? "btn btn-xs btn-default active" : "btn btn-xs btn-default"
    return (
      React.DOM.div({className: "container", style: {height:356,paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.returnToCalendarView, 
              style: {float:'left',cursor:'pointer',marginTop:7,fontWeight:200,
                      paddingLeft:20,paddingTop:5,display:'inline-block'}}, 
              
                React.DOM.i({className: "fa fa-calendar", style: {marginRight:5}}), 
                this.props.currentProfile.name
          ), 
          React.DOM.h6({style: {fontSize:13,paddingLeft:5,paddingTop:5,display:'inline-block'}}, 
            React.DOM.i({className: "fa fa-chevron-right", style: {fontSize:9}}), "  ", 
            React.DOM.i({className: "fa fa-clock-o"}), "  ", 
            moment(currentProfileReport.createdAt).fromNow(), "  "
          ), 

          (this.state.allProspected) ?
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             className: "btn btn-success btn-xs disabled"}, 
            "Prospected"
          ) :
          React.DOM.a({href: "javascript:", style: {fontWeight:'bold',float:'right',
                                        marginRight:10,marginTop:10}, 
             onClick: this.prospectAll, 
             className: "btn btn-success btn-xs"}, 
            "Prospect All"
          ), 
          

          React.DOM.div({className: "btn-group", 
               style: {float:'right',marginTop:10,marginRight:10}, 
               'data-toggle': "buttons"}, 
            React.DOM.label({className: peopleBtn, style: {width:50}, 
                 onClick: this.setPersonState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-user"}), "  ", 
              this.state.peopleCount
            ), 
            React.DOM.label({className: companyBtn, style: {width:50}, 
              onClick: this.setCompanyState}, 
              React.DOM.input({type: "checkbox"}), 
              React.DOM.i({className: "fa fa-building"}), "  ", 
              this.state.companyCount
            )
          )
        ), 

        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0}}, 
          React.DOM.div({style: {overflow:'auto',height:356}}, 
            React.DOM.table({className: "table table-striped"}, 
              React.DOM.thead(null, 
                React.DOM.th({style: {textAlign:'center',width:90}}, 
                  React.DOM.i({className: "fa fa-clock-o"})
                ), 

                React.DOM.th({style: {width:200}}, 
                  (this.state.currentSignal == 'CompanySignal') ?  
                    "Companies" : "People"
                ), 


                React.DOM.th(null, "Source "), 

                React.DOM.th({style: {width:90,textAlign:'center'}}, " ")

              ), 
              React.DOM.tbody({className: "reports"}, 
                signals
              )
            )
          )
        )
      )
    );
  },
  prospectAll: function() {
    console.log(this.state.currentSignal)
    console.log(this.props.currentProfileReport.objectId)
    report_id = this.props.currentProfileReport.objectId
    var thiss = this;
    $.ajax({
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:true, report_id: report_id, 
             signal_type: thiss.state.currentSignal},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  }
});

var CompanyHiringSignalRow = React.createClass({displayName: 'CompanyHiringSignalRow',
  render: function() {
    //console.log(company)
    company = (this.props.signal) ? this.props.signal : {}
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, company.revenue), 
          React.DOM.h6(null, React.DOM.a({href: "javascript:"}, company.websiteUrl)), 
          React.DOM.h6(null, company.city)
        ), 

        React.DOM.td(null, 
          moment(company.timestamp).format('ll')
        ), 

        React.DOM.td(null, 
          (this.props.allProspected) ? 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
          ) : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
                  onClick: this.turnCompanySignalToProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
        )
      )
    )
  },
  turnCompanySignalToProspect: function() {
    var thiss = this;
    $.ajax({
      //url: 'https://nameless-retreat-',
      //url: 'http://127.0.0.1:5000/signal_to_prospect',
      url: 'https://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {all_signals:false, signal_id: company.objectId,
             signal_type: 'CompanySignal'},
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText)},
    })
  }
})

var PeopleSignalRow = React.createClass({displayName: 'PeopleSignalRow',
  turnSignalIntoProspect: function() {
    var thiss = this;
    console.log(this.props.signal)
    $.ajax({
      //url:'http://127.0.0.1:5000/signal_to_prospect',
      url:'http://nameless-retreat-3525.herokuapp.com/signal_to_prospect',
      data: {signal_id: thiss.props.signal.objectId, signal_type:'PeopleSignal',
             all_signals:false},
      success: function(res) { console.log(res) },
      error: function(err) { console.log(err.responseText) } 
    })
  },

  render: function() {
    //console.log(company)
    people = (this.props.signal) ? this.props.signal : {}
    company = people.company_signal
    title = (people.title) ? people.title.split('-')[1] : ""
    title = title.split(' at')[0]
    //city = people.split('-')[0]
    city = ""
    console.log(people)
    return (
      React.DOM.tr({style: {}}, 
        React.DOM.td({style: {textAlign:'center',width:120}}, 
          React.DOM.h6(null, 
            moment(this.props.signal.createdAt).fromNow()
          )
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, people.link_text + " - ", " ", React.DOM.span({style: {fontStyle:'italic'}}, 
              title)), 
          React.DOM.h6(null, React.DOM.a({href: "javascript:"}, company.websiteUrl)), 
          React.DOM.h6(null, company.name), 
          React.DOM.h6(null, company.city)
        ), 

        React.DOM.td(null, 
          React.DOM.h6(null, company.signals[0].className), 
          React.DOM.h6(null, company.signals[0].job_title), 
          React.DOM.h6(null, company.signals[0].summary)
        ), 
        React.DOM.td(null, 
          company.timestamp, 
          moment(company.timestamp).format('ll')
        ), 

        React.DOM.td(null, 
          (this.props.allProspected) ? 
          React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs disabled", 
            style: {fontWeight:'bold'}}, 
            "Prospected"
            ) : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
                      onClick: this.turnSignalIntoProspect, 
            style: {fontWeight:'bold'}}, 
            "Prospect"
          )
          
        )
      )
    )
  }
})

},{}],61:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // SignalCalendar
  getInitialState: function() {
    return {
      reports : [],
      currentTerritory:'all',
    }
  },

  getSignalReport: function(currentTerritory) {
    thissss = this;
    if(currentTerritory == "all"){
      qry = {'where' : JSON.stringify({profile:{
        __type:'Pointer',
        className:'ProspectProfile',
        objectId:this.props.currentProfile.objectId
      }, is_parent: true }), order:'-createdAt'}
    } else {
      qry = {'where' : JSON.stringify({parent:
            appConfig.pointer('SignalReport', currentTerritory.objectId), 
            }), order:'-createdAt'}
    }
    console.log(qry)

    // Get Signal Reports Of Current Profile
    $.ajax({
      url: 'https://api.parse.com/1/classes/SignalReport',
      type:'GET',
      data: qry,
      headers:appConfig.parseHeaders,
      success: function(res) {
        console.log(res.results)
        thissss.setState({reports: res.results})
      },
      error: function(err) {
        console.log(err)
      }
    });
  },

  componentDidMount: function() {
    this.getSignalReport(this.state.currentTerritory)
  },

  componentWillUpdate: function(nextProps, nextState) {
    console.log('UPDATED')
    console.log(this.state.currentTerritory)
    console.log(nextState.currentTerritory)
    //if(this.state.currentTerritory != nextState.currentTerritory)
    if(!_.isEqual(this.state.currentTerritory, nextState.currentTerritory))
      this.getSignalReport(nextState.currentTerritory)
  },

  allTerritories: function() {
    this.setState({currentTerritory: 'all'})
  },

  render: function() {
    reports = (this.props.reports) ? this.props.reports : []

    for(i=0;i< this.state.reports.length; i++) {
      reports.push(SignalReportRow({setCurrentReport: this.setCurrentReport, 
                                    prospectSignalReport: this.prospectSignalReport, 
                                    setCurrentView: this.setCurrentView, 
                                    rowClick: this.rowClick, 
                                    report: this.state.reports[i]}))
    }

    territory = (this.state.currentTerritory == 'all') ? '' : ' - '+this.state.currentTerritory.territory
    return (
      React.DOM.div({className: "container", style: {paddingLeft:0,
                                         paddingRight:0,width:'100%'}}, 
        React.DOM.div({style: {height:44,borderBottom:'solid 1px rgb(221, 221, 221)'}}, 
          React.DOM.h4({onClick: this.allTerritories, 
              style: {fontWeight:200, float:'left',cursor:'pointer',marginTop:7,
                      paddingLeft:20,paddingTop:5, display:'inline-block'}}, 
                React.DOM.i({className: "fa fa-globe", style: {marginRight:5}}), 
                this.props.currentProfile.name, 
                territory
          )
        ), 
        React.DOM.div({className: "col-md-12", style: {paddingLeft:0,paddingRight:0,
                                           height:356,overflow:'auto'}}, 
          React.DOM.div({style: {overflow:'auto'}}, 
            React.DOM.table({className: "table table-striped", style: {marginBottom:0}}, 
              React.DOM.thead(null, 
                React.DOM.th(null), 
                React.DOM.th({style: {textAlign:'center'}}, 
                  React.DOM.i({className: "fa fa-clock-o"}), " Last Ran"
                ), 
                React.DOM.th({style: {textAlign:'',paddingLeft:50}}, 
                  "Territory Name"
                ), 
                React.DOM.th(null, "Company Signals"), 
                React.DOM.th({style: {display:'block'}}, "Prospect Companies"), 
                React.DOM.th({style: {width:150,textAlign:'center',display:'none'}})
              ), 
              React.DOM.tbody({className: "reports"}, 
                reports
              )
            )
          )
        )
      )
    );
  },

  setCurrentReport: function(newReport) {
    this.props.setCurrentReport(newReport)
  },

  prospectSignalReport: function(signalReport) {
    this.props.prospectSignalReport(this.props.currentProfile, signalReport)
  },

  setTerritory: function(territory) {
    //
    this.setState({currentTerritory: territory})
  },

  rowClick: function(report) {
    console.log(report)
    if(report.prospected)
      this.props.setReport('TerritoryDetail', report)
    else
      this.setTerritory(report)
    /*
    if(this.state.selectedTerritory != 'all')
      this.setCurrentReport(report) // 
    else
      this.setTerritory(report)
    */
  }
});

var SignalReportRow = React.createClass({displayName: 'SignalReportRow',
  getInitialState: function() {
    return {
      companyCount: '~',
      peopleCount: '~',
      loading: this.props.report.done,
    }
  },

  setTerritory: function() {
    this.props.setTerritory('')
  },

  rowClick: function() {
    this.props.rowClick(this.props.report)
  },

  prospectSignalReport: function(e) {
    this.props.prospectSignalReport(this.props.report)
    e.stopPropagation()
  },

  componentDidMount: function() { 
  },

  render: function() {
    prospected = this.props.report.prospected
    icon = React.DOM.i({className: "fa fa-globe"})
    icon = ""
    //
    loading = (this.state.loading) ? React.DOM.div({className: "profile-loading", style: {marginLeft:30}}, 
          React.DOM.div({className: "double-bounce1", style: {backgroundColor:'#5cb85c'}}), 
          React.DOM.div({className: "double-bounce2", style: {backgroundColor:'#5cb85c'}})
          ) : React.DOM.a({href: "javascript:", onClick: this.prospectSignalReport, 
             style: {fontWeight:'bold',marginTop:5}, 
     className: (prospected) ? "btn btn-xs btn-primary disabled" : "btn btn-xs btn-primary"}, 
             (prospected) ? 'Prospected' : 'Prospect All'
          )
    // if done  - loading
    loading = (this.props.report.prospected) ? React.DOM.span({className: "label label-success"}, " Prospected")  : loading
    loading  = React.DOM.span({className: "label label-success"}, " Prospected")

    return (
      React.DOM.tr({onClick: this.rowClick, style: {cursor:'pointer'}}, 
        React.DOM.td({style: {textAlign:'right',paddingTop:15}}, 
          icon
        ), 
        React.DOM.td({style: {textAlign:'center'}}, 
          React.DOM.h6(null, 
            moment(this.props.report.createdAt).fromNow()
          )
        ), 
        React.DOM.td({style: {textAlign:'',paddingLeft:50}}, 
          React.DOM.h6(null, 
            React.DOM.i({className: "fa fa-globe"}), " ", 
            React.DOM.span(null, 
            this.props.report.territory
            )
          )
        ), 
        React.DOM.td(null, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.company_count
          ), 
          React.DOM.h6({style: {display:'inline-block'}}, 
            "  Companies found."
          )
        ), 
        React.DOM.td({style: {display:'block'}}, 
          React.DOM.span({className: "label label-success"}, 
            this.props.report.people_count
          ), 

          (this.props.report.prospected) ? React.DOM.div({style: {marginTop:6,padding:6, display:'block',width:146}, className: "label label-primary"}, React.DOM.i({className: "fa fa-check-circle"}), "   Prospected") : React.DOM.a({href: "javascript:", className: "btn btn-success btn-xs", 
            style: {backgroundImage: 'linear-gradient(#8add6d, #60b044)',marginTop:4}, 
            style: {backgroundImage: 'linear-gradient(180deg, #0096ff 0%, #005dff 100%)',marginTop:4}}, 
            React.DOM.i({className: "fa fa-cloud-download"}), "  " + ' ' +
            "Download Prospects"
          ), 
          React.DOM.h6({style: {display:'none'}}, 
            "  People found."
          )
        ), 
        React.DOM.td({style: (this.props.report.done) ? {display:'none'} : {display:'none',paddingTop:17}}, 
          loading
        )
      )
    )
  }
});

},{}],62:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  // TimelineDayElement
  // TODO
  // - add prospect list progression
  // - add scheduled followup
  //
  getInitialState: function() {
    // 
    return {
      followupCompleted: 0,
    }
  },

  addFollowup: function() {
    this.props.addFollowup(this.props.dayCount)
  },

  render: function() {
    if(this.props.addTemplateMode) {
      mode = EditTemplate({addFollowup: this.props.addFollowup, 
                           saveFollowup: this.props.saveFollowup, 
                           removeFollowup: this.props.removeFollowup, 
                           dayCount: this.props.dayCount, 
                           templates: this.props.templates})
    } else {
      mode = TemplateFollowup({currentTemplate: this.props.currentTemplate, 
                               editFollowup: this.props.editFollowup, 
                               dayCount: this.props.dayCount, 
                               currentBatch: this.props.currentBatch, 
                               hasBatch: typeof(this.props.batchCount) != "undefined" && this.props.batchCount > 0, 
                               setCurrentBatch: this.props.setCurrentBatch, 
                               dayCount: this.props.dayCount, 
                               removeFollowup: this.props.removeFollowup, 
                               setCurrentTemplate: this.props.setCurrentTemplate})
    }
    if(this.props.alreadySent) {
      mode = FollowupCompleted({currentTemplate: this.props.currentTemplate})
    }

    mode = (this.props.elementType) ? "" : mode
    addFollowup = (this.props.elementType) ? this.addFollowup : ""
    if(typeof(this.props.batchCount) != "undefined")
      batchStage = BatchStage({currentBatch: this.props.currentBatch, 
                               newProspects: this.props.newProspects, 
                               prospectListCount: this.props.prospectListCount, 
                               batchCount: this.props.batchCount, 
                               hasScheduledEmail: mode != "", 
                               dayCount: this.props.dayCount})
    else
      batchStage = ""

    dayCount = (this.props.dayCount != 0.5) ? "D"+this.props.dayCount : ""

    return (
      React.DOM.div(null, 
        React.DOM.div({onClick: addFollowup, className: "day", 'data-trigger': "manual"}, 
          dayCount
        ), 
        mode, batchStage
      )
    )
  },

  setCurrentTemplate: function(template) {
    this.props.setCurrentTemplate(template)
  }
});

var FollowupCompleted = React.createClass({displayName: 'FollowupCompleted',
  render: function() {
    return (
      React.DOM.div({className: "followup-placement arrow_box_1 tmp_2"}, 
        React.DOM.h6({style: {width:130,display:'inline-block'}}, 
          React.DOM.i({className: "fa fa-file-text-o"}), "  ", 
          (this.props.currentTemplate) ? this.props.currentTemplate.name : ""
        ), 
        React.DOM.button({className: "win-btn btn btn-success btn-xs disabled", 
                'data-target': ".bs-sendEmail-modal-lg", 
                onClick: this.setCurrentTemplate, 
                'data-toggle': "modal"}, 
          React.DOM.i({className: "fa fa-check"}), " Sent"), " ", 
        React.DOM.button({onClick: this.editFollowup, 
                className: "win-btn btn btn-default btn-xs disabled"}, 
          React.DOM.i({className: "fa fa-pencil"})), " ", 
        React.DOM.button({onClick: this.removeFollowup, 
                className: "win-btn btn btn-default btn-xs disabled"}, 
          React.DOM.i({className: "fa fa-trash-o"}))
      )
                                         )
  }
})

var TemplateFollowup = React.createClass({displayName: 'TemplateFollowup',
  // EditMode False

  setCurrentTemplate: function() {
    this.props.setCurrentTemplate(this.props.currentTemplate)
    // setCurrentBatch
    this.props.setCurrentBatch(this.props.currentBatch)
    $('.bs-sendEmail-modal-lg').modal()
  },

  waitForBatch: function() {
    alertify.log("You must wait for a batch!");
  },

  render: function() {
    trash = (this.props.dayCount == 0) ?  React.DOM.button({onClick: this.removeFollowup, 
                className: "win-btn btn btn-default btn-xs disabled"}, 
          React.DOM.i({className: "fa fa-trash-o"})) : React.DOM.button({onClick: this.removeFollowup, className: "win-btn btn btn-default btn-xs"}, 
          React.DOM.i({className: "fa fa-trash-o"})) 
    return (
      React.DOM.div({className: "followup-placement arrow_box_1 tmp_2"}, 
        React.DOM.h6({style: {width:130,display:'inline-block'}}, 
          React.DOM.i({className: "fa fa-file-text-o"}), "  ", 
          (this.props.currentTemplate) ? this.props.currentTemplate.name : ""
        ), 
        React.DOM.button({className: "win-btn btn btn-success btn-xs", 
          onClick: (this.props.hasBatch) ? this.setCurrentTemplate : this.waitForBatch, 
                'data-toggle': "modal"}, 
          React.DOM.i({className: "fa fa-paper-plane"}), " Send"), " ", 
        React.DOM.button({onClick: this.editFollowup, 
                className: "win-btn btn btn-default btn-xs"}, 
          React.DOM.i({className: "fa fa-pencil"})), " ", 
        trash
      )
    );
  },

  editFollowup: function(e) { 
    e.preventDefault()
    console.log(this.props.dayCount)
    this.props.editFollowup(this.props.dayCount)
  },

  removeFollowup: function() {
    console.log('remove')
    this.props.removeFollowup(this.props.dayCount)
  }
});

var BatchStage = React.createClass({displayName: 'BatchStage',
  // Different Stages of People Added to Prospect List
  getInitialState: function() {
    return {
      initialBatchCount: this.props.batchCount
    }
  },

  componentDidMount: function() {
    // state
    //console.debug('INSIDE BATCH '+this.props.dayCount)
    console.debug(this.props.currentBatch)
    _batches = appConfig.pointer('ProspectBatch', this.props.currentBatch)
    if(this.props.batchCount == "~") {
      // Why doesnt this work 
      var thissss = this;
      console.debug('INSIDE BATCH '+thiss.props.dayCount)
      console.debug(_batches)
      $.ajax({
        url:'https://api.parse.com/1/classes/Prospect',
        batches: _batches,
        data: {
          where: JSON.stringify({
            batches: _batches
          }),
          count: true,
          limit:1000,
        },
        headers: appConfig.headers,
        success: function(res) { 
          //console.debug('SUCCESS GET COUNT ' + res.count)
          //console.debug(res.results) 
          thissss.setState({initialBatchCount: res.count})
        },
        error: function(err) { 
          thissss.setState({initialBatchCount: 0 })
        }
      })
    }
  },

  componentWillReceiveProps: function(nextProps) {
    if(this.props.dayCount == 0)
      this.setState({ initialBatchCount: nextProps.batchCount })
  },


  render: function() {
    if(this.props.hasScheduledEmail)
      batchStageStyle = {top:-42, left:6}
    else
      batchStageStyle = {}

    if(this.props.dayCount == 0.5)
      batchStageStyle.left = 7

    //console.log('BATCH STAGE')
    //console.log(this.props)
    //console.debug(this.props.currentBatch)                                                           

    return (
      React.DOM.div({className: "followup-placement arrow_box tmp", style: batchStageStyle}, 
        React.DOM.span({className: "label label-primary"}, 
          React.DOM.i({className: "fa fa-user"}), " ", 
          this.state.initialBatchCount
        ), " ", 
        React.DOM.h6({style: {display:'inline-block'}}, 
          "prospects in the sales cycle.")
      )
    );
  }
});

var EditTemplate = React.createClass({displayName: 'EditTemplate',
  // Edit Mode - True
  render: function() {
    options = []
    for(i=0;i< this.props.templates.length; i++) {
      options.push( React.DOM.option(null, this.props.templates[i].name))
    }
    trash = (this.props.dayCount == 0) ?  React.DOM.button({onClick: this.removeFollowup, 
                className: "win-btn btn btn-default btn-xs disabled"}, 
          React.DOM.i({className: "fa fa-trash-o"})) : React.DOM.button({onClick: this.removeFollowup, className: "win-btn btn btn-default btn-xs"}, " ", React.DOM.i({className: "fa fa-trash-o"})) 
    return (
      React.DOM.div({className: "followup-placement arrow_box_1 tmp_2"}, 
        React.DOM.h6({style: {width:55,display:'inline-block'}, 
            className: "text-muted"}, 
          "Choose :"
        ), 
        React.DOM.select({className: "form-control input-sm", 
                id: "chooseTemplateForFollowup", 
                style: {display:'inline-block',width:127,marginRight:5}}, 
          options
        ), 

        React.DOM.button({className: "win-btn btn btn-success btn-xs", 
                onClick: this.saveFollowup, 
                style: {marginRight:5}}, 
          React.DOM.i({className: "fa fa-check"})), 
        trash
      )
    )
  },

  saveFollowup: function(e) {
    //get template from currentTemplate
    e.preventDefault()
    chosenTemplate = $('#chooseTemplateForFollowup').val()
    console.log(chosenTemplate)
    for(i=0;i< this.props.templates.length; i++){
      if(this.props.templates[i].name == chosenTemplate){
        chosenTemplate = this.props.templates[i]
        break
      }
    }
    console.log(chosenTemplate)
    
    this.props.saveFollowup(this.props.dayCount, chosenTemplate)
  },

  removeFollowup: function(day) {
    this.props.removeFollowup(this.props.dayCount)
  },
});


},{}],63:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',

  render: function() {
    return (
        React.DOM.div({className: "modal bs-example-modal-lg", 
             style: {marginTop:50}, 
             id: "upgradePlanModal"}, 
          React.DOM.div({className: "modal-dialog modal-lg"}, 
            React.DOM.div({className: "modal-content"}, 
              React.DOM.div({className: "modal-body"}, 
                React.DOM.h4({className: "modal-title"}, "Choose A New Plan:"), 
                React.DOM.br(null), 
        
                React.DOM.div({className: "row"}, 
                React.DOM.div({className: "col-md-3", style: {padding:5}}, 
                React.DOM.div({className: "panel panel-default"}, 
                  React.DOM.div({className: "panel-heading", style: {textAlign:'center',fontWeight:'bold'}}, " Individual "), 
                  React.DOM.div({className: "panel-body"}, 
                  React.DOM.h1({style: {textAlign:'center'}}, "$99", React.DOM.small(null, "/month"))

                  ), 
                  React.DOM.ul({className: "list-group"}, 
                    React.DOM.li({className: "list-group-item"}, " "), 
                    React.DOM.li({className: "list-group-item"}, "Up to 300 emails"), 
                    React.DOM.li({className: "list-group-item"}, "Max 1 User"), 
                    React.DOM.li({className: "list-group-item"}, "Includes Email"), 
                    React.DOM.li({className: "list-group-item"}, 
                      React.DOM.a({href: "javascript:", 
                         className: "btn-gradient btn btn-primary", 
                         style: {display:'block'}, 
                         onClick: this.launchCheckout}, "Upgrade")
                    )
                  )
                )
                ), 
                React.DOM.div({className: "col-md-3", style: {padding:5}}, 
                React.DOM.div({className: "panel panel-default"}, 
                  React.DOM.div({className: "panel-heading", style: {textAlign:'center',fontWeight:'bold'}}, " Startup "), 
                  React.DOM.div({className: "panel-body"}, 
                  
                  React.DOM.h1({style: {textAlign:'center'}}, "$499", React.DOM.small(null, "/month"))
                  ), 
                  React.DOM.ul({className: "list-group"}, 
                    React.DOM.li({className: "list-group-item"}, " "), 
                    React.DOM.li({className: "list-group-item"}, "Up to 1000 emails"), 
                    React.DOM.li({className: "list-group-item"}, "Max 10 Users"), 
                    React.DOM.li({className: "list-group-item"}, "Includes Quick Start Package"), 
                  React.DOM.li({className: "list-group-item"}, "Includes Signals"), 
                    React.DOM.li({className: "list-group-item"}, 
                      React.DOM.a({href: "javascript:", 
                         className: "btn-gradient btn btn-primary", 
                         style: {display:'block'}, 
                         onClick: this.launchCheckout}, "Upgrade")
                    )
                  )
                )
                ), 
                React.DOM.div({className: "col-md-3", style: {padding:5}}, 
                React.DOM.div({className: "panel panel-default"}, 
                  React.DOM.div({className: "panel-heading", style: {textAlign:'center',fontWeight:'bold'}}, " Growth "), 
                  React.DOM.div({className: "panel-body"}, 
                  
                  React.DOM.h1({style: {textAlign:'center'}}, "$1299", React.DOM.small(null, "/month"))
                  ), 
                  React.DOM.ul({className: "list-group"}, 
                    React.DOM.li({className: "list-group-item"}, " "), 
                    React.DOM.li({className: "list-group-item"}, "Up to 2500 emails"), 
                    React.DOM.li({className: "list-group-item"}, "Up to 25 Users"), 
                    React.DOM.li({className: "list-group-item"}, "Bulk CRM Integration"), 
                    React.DOM.li({className: "list-group-item"}, "Mining Jobs"), 
                    React.DOM.li({className: "list-group-item"}, 
                      React.DOM.a({href: "javascript:", 
                         className: "btn-gradient btn btn-primary", 
                         style: {display:'block'}, 
                         onClick: this.launchCheckout}, "Upgrade")
                    )
                  )
                )
                ), 
                React.DOM.div({className: "col-md-3", style: {padding:5}}, 
                React.DOM.div({className: "panel panel-default"}, 
                  React.DOM.div({className: "panel-heading", style: {textAlign:'center',fontWeight:'bold'}}, " Enterprise "), 
                  React.DOM.div({className: "panel-body"}, 
                  React.DOM.h1({style: {textAlign:'center'}}, "$2999", React.DOM.small(null, "/month"))
                  ), 
                  React.DOM.ul({className: "list-group"}, 
                    React.DOM.li({className: "list-group-item"}, " "), 
                    React.DOM.li({className: "list-group-item"}, "Up to 10000 emails"), 
                    React.DOM.li({className: "list-group-item"}, "Up to 100 Users"), 
                    React.DOM.li({className: "list-group-item"}, "Dedicated Happinness Officer"), 
                    React.DOM.li({className: "list-group-item"}, "Improved Territory Planning"), 
                    React.DOM.li({className: "list-group-item"}, 
                      React.DOM.a({href: "javascript:", 
                         className: "btn-gradient btn btn-primary", 
                         style: {display:'block'}, 
                         onClick: this.launchCheckout}, "Upgrade")
                    )
                  )
                )
                )
                )
              )
            )
          )
        )
    )
  },

  launchCheckout: function(e) {
    plan = $(e.target).parent().parent().parent().find('.panel-heading').text()
    user = JSON.parse(localStorage.currentUser)
    user.plan = plan
    localStorage.currentUser = JSON.stringify(user)
    console.log('log checkout')
    handler.open({
      name: 'Customero',
      email:JSON.parse(localStorage.currentUser).username,
      allowRememberMe:false,
      description: 'Upgrade Today!',
      amount: 0,
      panelLabel: "Upgrade To "+plan+" Plan",
      opened: function() { },
      closed: function() { console.log("closed") }
    });
  }
})

},{}],64:[function(require,module,exports){
/** @jsx React.DOM */
var HorizantalSpinner = require('./horizantal_spinner.js.min.js')
var LoadingSpinner = require('./loading_spinner.js.min.js')

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function() {
    loading  = true
    if(this.props.prospect.company)
      if(this.props.prospect.company.email_pattern)
        loading  = false
    if(!this.props.prospect.company_name.length)
      loading = false
    return { 
      prospect: this.props.prospect,
      checked: false,
      initialLoading: loading,
      loading: loading,
      editMode: false,
      mouseOver: false
    }
  },

  mouseEnter: function() {
    this.setState({mouseOver: true})
  },

  mouseLeave: function() {
    this.setState({mouseOver: false})
  },

  clickCheck: function(e) {
    e.stopPropagation()
    domNode = this.getDOMNode()
    //isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    isChecked = $($(domNode).find('input[type="checkbox"]')[0]).prop('checked')
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
    //console.log(isChecked)
    this.setState({checked: isChecked})
    this.props.checkboxAction(isChecked, this.state.prospect.objectId)
  },

  rowClick: function() {
    $($(this.getDOMNode()).find('input[type="checkbox"]')[0]).click()
  },

  keyboardClick: function() {
    $($('.keySelect').find('input[type="checkbox"]')[0]).click()
  },

  componentDidUpdate: function() {
    //
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern[0]) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return ReadOnlyForm({icon: "envelope", value: prospect_email})
  },

  realtimeCompanyInfo: function() {
    var _this = this;
    channel.bind(this.state.prospect.company_name.replace(' ','-'), function(data) {
      _prospect = _this.state.prospect; _prospect.company = data.company;
      _this.setState({prospect: _prospect})
      console.log(data.company)
      console.log('no listening for email')
      if(_prospect.company.email_pattern){
         _this.setState({loading: false}) 
      } else {
        console.log('binding for email pattern')
        console.log(data.company.domain)
        _this.realtimeEmailPattern(data.company.domain)
      }
    });
  },

  realtimeEmailPattern: function(domain) {
    var _this = this;
    channel.bind(domain, function(data) {
      // add email pattern
      console.log('got email pattern')
      console.log(data)
      console.log(_this.state.prospect)
      _prospect = _this.state.prospect
      if(_prospect.company)
        _prospect.company.email_pattern = data.email_pattern
      else
        _prospect.company= {'email_pattern': data.email_pattern}

      _this.setState({prospect: prospect})
      _this.setState({loading: false})
    })
  },

  componentDidMount: function() { 
    //TODO - start if loading is true 
    //if(this.state.loading){
      if(this.state.prospect.company)
        this.realtimeEmailPattern(this.state.prospect.company.domain)
      else
        this.realtimeCompanyInfo(this.state.prospect.company_name)
    //}
  },

  _keyboardShortcuts: function() {
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
    thissss = this
    if(this.props.keyboardSelected) {
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
      Mousetrap.unbind('x')
      Mousetrap.bind('x', function() { 
        thissss.keyboardClick()
        if(thissss.state.checked)
          console.log("lmao")
      });
    }
  },

  render: function() {
    prospect = this.state.prospect
    if(this.props.masterCheckboxChecked && this.state.checked)
      checked = true
    else if(this.props.alreadyChecked)
      checked = true
    else if(this.state.checked)
      checked = true
    else if(this.props.masterCheckboxChecked || this.state.checked)
      checked = true
    else
      checked = false

    checked        = this.state.checked || this.props.alreadyChecked
    color = (checked) ? {backgroundColor: '#eef8ff'} : {}
    infoColor = (checked) ? {backgroundColor: '#eef8ff',paddingBottom:2} : {paddingBottom:2}
    checkboxColor = (checked) ? {backgroundColor: '#eef8ff',verticalAlign:'middle'} : {verticalAlign:'middle'}
    company = (prospect.company) ? prospect.company : {}
    prospect_email = ReadOnlyForm({disabled: true, icon: "envelope", value: "No Email Found"})
    if(company.email_pattern)
      if(company.email_pattern.length)
        prospect_email = this._make_email(prospect.name, company.email_pattern)

    //console.log(prospect.name)
    if(prospect.name == "LinkedIn Member" || _.last(prospect.name) == ".")
      prospect_email = ReadOnlyForm({disabled: true, icon: "envelope", 
                                     value: "Ambiguous Name"})
    prospect_email = (this.state.loading) ? LoadingLabel(null) : prospect_email
    if(!this.props.prospect.company_name.length)
        prospect_email = ""

    if(company.phone && company.phone != "null")
      phone = React.DOM.div({style: {display:'block',paddingTop:2}}, ReadOnlyForm({icon: "phone", value: company.phone})) 
    else 
      phone = ""

    company_size   = (this.state.loading) ? LoadingLabel(null) : ""
    if(company.headcount){ 
      company_size = prospect.company.headcount+" employees" 
    }

    if(company.address)
      city = (company.address) ? company.address.normalizedLocation : prospect.locale
    else if(prospect.locale != "" && prospect.locale)
      city = prospect.locale
    else if(_.isEqual(company, {}))
      city = LoadingLabel(null)
    else
      city = ""

    company_url = (company.domain) ? ShinyButton({icon: "globe", link: "http://"+company.domain}) : ""
    position    = (prospect.title) ? prospect.title.trim() : ""

    prospect_company_name = prospect.company_name
    prospect_name = prospect.name
    if(!this.state.prospect.loading){
      if(typeof(prospect.company_name) == "undefined" || prospect.company_name == "" || prospect.company_name == "not_found")
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, formText: "Enter Company Name."}) 
      if(typeof(prospect.name) == "undefined" || prospect.name == "LinkedIn Member")
        prospect_name = UserUpdateForm({updateProspect: this.updateProspect, var: "name", formText: "Enter Full Name."}) 
      if(typeof(position) == "undefined" || position == "")
        position = UserUpdateForm({updateProspect: this.updateProspect, var: "pos", prospect: this.state.prospect, formText: "Enter Title."}) 
    }
    if(this.state.editMode){
        pcn = prospect_company_name; pn = prospect_name; pos = position;
        pcn = (pcn != "" && pcn) ? pcn : "Enter Company Name."
        pn  = (pn != "" && pn) ? pn : "Enter Full Name."
        pos = (pos != "" && pos) ? pos : "Enter Title."
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, value: pcn, single: 1}) 
        prospect_name = UserUpdateForm({updateProspect: this.updateProspect, var: "name", value: pn, single: 1}) 
        position = UserUpdateForm({updateProspect: this.updateProspect, var: "pos", prospect: this.state.prospect, value: pos, single: 1}) 
    }
    if(!this.props.prospect.company_name.length)
        prospect_company_name = UserUpdateForm({updateProspect: this.updateProspect, var: "company_name", prospect: this.state.prospect, formText: "Enter Company Name"}) 

    liProfileSimilars = (prospect.linkedin_url) ? React.DOM.a({onClick: this.openSimilars, style: {marginLeft:5, float:'right'}, href: "javascript:", className: "btn btn-xs btn-primary btn-gradient similar_link"}, " ", React.DOM.i({className: "fa fa-copy", style: {fontWeight:'bold'}})) : ""
    
    if(typeof(prospect_name) == "string")
      if(prospect_name.indexOf(".") != -1 || prospect_name == "LinkedIn Member")
        prospect_name = React.DOM.span(null, prospect_name, React.DOM.button({className: "btn btn-xs btn-default", style: {marginLeft:5,marginTop:-4,width:25,fontSize:11,lineHeight:1}, onClick: this.searchProspect}, " ", React.DOM.i({className: "fa fa-search"})))

    optionsMenu = React.DOM.div({style: {fontSize:10, cursor:'pointer',height:20,marginTop:-20}}, 
            React.DOM.a({className: "text-muted", onClick: this.toggleEditMode}, 
              React.DOM.i({className: (this.state.editMode) ? "fa fa-check" : "fa fa-pencil"})
            ), 
            React.DOM.a({className: "text-muted", onClick: this.searchProspect, style: {marginTop:5}}, 
              React.DOM.i({className: "fa fa-search"})
            ), 
            React.DOM.a({className: "text-muted", onClick: this.archiveProspects, 
              style: {marginTop:5}}, 
              React.DOM.i({className: "fa fa-archive"})
            )
            )
          
    keyboardSelected = {borderLeft:'7px solid rgba(0,0,0,0)'}
            //keyboardSelected = {}
    //
    if(this.props.keyboardSelected) {
      keyboardSelected = {borderLeft:'7px solid #0096ff !important'}
    }
    

    return (
      React.DOM.tr({className: "prospects-tr", 
          onClick: this.rowClick, 
          onMouseEnter: this.mouseEnter, 
          onMouseLeave: this.mouseLeave, 
          style: keyboardSelected}, 
          React.DOM.td({style: checkboxColor}, 
              React.DOM.input({type: "checkbox", 
                     onChange: this.clickCheck, 
                     style: {lineHeight:'normal',marginTop:-8,height:17}, 
                     checked: checked})
          ), 
          React.DOM.td({style: checkboxColor}, 
            (this.state.mouseOver) ? optionsMenu : React.DOM.div({style: {height:20}}, "   ")
          ), 
          React.DOM.td({style: checkboxColor}, 
           (this.state.loading) ? LoadingPulse(null) : "", 
           (!this.state.loading && this.state.initialLoading) ? React.DOM.i({className: "fa fa-check-circle ", style: {color:'rgb(0, 122, 265)',paddingLeft:6,}}) : ""
          ), 
          React.DOM.td({style: color, className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, prospect_name), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}}, " ", position, " ")
          ), 
          React.DOM.td({style: color, className: "fixed-data-column"}, 
            React.DOM.span({style: {fontWeight:'bold'}}, " ", prospect_company_name, " "), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px'}, className: "company-size"}, 
            company_size
            ), 
            React.DOM.h6({style: {fontWeight:'400',margin:'0px',display:'none',fontStyle:'italic'}, 
                className: "company-size"}, 
              (prospect.industry) ? prospect.industry : ""
            )
          ), 

          React.DOM.td({style: color}, 
            React.DOM.h6({style: {margin:'0px'}}, city)), 
          React.DOM.td({style: infoColor}, " ", prospect_email, " ", phone, " "), 
          React.DOM.td({style: color}, 
            React.DOM.div({style: {width:92,paddingTop:5,height:5}}, 
              React.DOM.a({href: "javascript:", 
                onClick: this.openLinkedinProfile, 
                className: "btn btn-xs btn-primary btn-gradient linkedin_link", 
                style: {float:'right',marginLeft:5}}, 
                React.DOM.i({className: "fa fa-linkedin-square"})), 
              "   ", 
              liProfileSimilars, 
              company_url
            )
          )
        )
    );
  },

  searchProspect: function(e) {
    e.preventDefault()
    e.stopPropagation()
    url = "http://www.google.com/#q="
    prospect = this.state.prospect
    name = (prospect.name != "LinkedIn Member") ? prospect.name : ""
    args = '-inurl:"/dir/" -inurl:"/find/" -inurl:"/updates"'
    if(name == "" && prospect.company_name != "not_found")
      linkedin = '"at '+prospect.company_name+'" site:linkedin.com '+args
    else
      linkedin = " site:linkedin.com/in/ OR site:linkedin.com/pub/ -site:linkedin.com/pub/dir/"
    window.open(url+name+" "+prospect.company_name+" "+prospect.title+linkedin)
  },

  archiveProspects: function() {
    console.log(this.getDOMNode())
    //$(this.getDOMNode()).click()
    this.props.archiveProspects([this.state.prospect.objectId])
  },

  toggleEditMode: function(e) {
    e.stopPropagation()
    this.setState({editMode: !this.state.editMode})
  },

  openTest: function() {
    e.stopPropagation()
  },

  openLinkedinProfile: function(e) {
    window.open(this.state.prospect.linkedin_url)
    e.stopPropagation()
  },

  emailInputClick: function(e) {e.stopPropagation() },

  openSimilars: function(e) {
    // TODO - move to backend
    console.log('similars')
    if(this.state.prospect.linkedin_url.indexOf('profile') != -1){
      urlargs = this.state.prospect.linkedin_url.split('?')[1].split('&')
      args = []
      for(i=0;i< urlargs.length; i++)
        args.push(urlargs[i].split('='))
      args = _.object(args)
    }
    window.open("https://www.linkedin.com/vsearch/p?pivotType=sim&pid="+args.id)
    e.stopPropagation()
  },

  deleteProspect: function() {
    this.props.deleteProspect(this.state.prospect.objectId, 'Prospect')
  },
  
  updateProspect: function(prop, value) {
    prospect = this.state.prospect
    prospect[prop] = value
    this.setState({prospect: prospect})
  },
  
  refresh: function(e) {
    e.preventDefault()
    e.stopPropagation()
    prospect = this.state.prospect
    console.log(prospect)

    $.ajax({
      //url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
      url:'http://127.0.0.1:5000/profile_detail',
      type:'GET',
      dataType:'json',
      data: prospect,
      //headers:appConfig.headers,
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText) }
    })
  },
});

var UserUpdateForm = React.createClass({displayName: 'UserUpdateForm',
  getInitialState: function() {
    return {
      submitted: false,
      value: this.props.value
    }
  },

  formClick: function(e) { e.stopPropagation() },

  submitForm: function(e) {
    e.preventDefault()
    e.stopPropagation()
    this.props.updateProspect(this.props.var, $(e.target).find('input').val())
    this.setState({submitted: true})
    prospect = this.props.prospect
    prospect[this.props.var] = $(e.target).find('input').val()

    // persist
    data = {}
    varr = this.props.var
    val = $(e.target).find('input').val()
    data[varr] = val
    objectId = this.state.prospect.objectId

    $.ajax({
      //url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
      url:'http://127.0.0.1:5000/profile_detail',
      data: prospect,
      //headers:appConfig.headers,
      success: function(res) { console.log(res)},
      error: function(err) { console.log(err.responseText) }
    })

    /*
    $.ajax({
      url:'https://api.parse.com/1/classes/Prospect/'+objectId,
      type: 'PUT',
      data: JSON.stringify(data),
      headers: appConfig.headers,
      success: function(res) { console.log(res) 
        // sent current prospect state as data to 
        $.ajax({
          url:'https://nameless-retreat-3525.herokuapp.com/profile_detail',
          data: prospect,
          headers:appConfig.headers,
          success: function(res) { console.log(res)},
          error: function(err) { console.log(err.responseText) }
        })
      },
      error: function(err) { console.log(err.responseText) }
    })
    */
  },

  handleChange: function(event) {
    console.log(event.target.value)
    this.setState({value: event.target.value});
  },

  render: function() {
    //"Enter Website."
    btn = (this.state.submitted) ? "btn btn-xs btn-success" : "btn btn-xs btn-default"
    single = {display:'inline', width:22, marginLeft:5}
    single.display = (this.props.single) ? 'none' : 'inline'
    input = {width:'100%', display:'inline', height:24, marginBottom:6}
    input.width = (this.props.single) ? '100%' : '70%'
    return (
      React.DOM.form({onClick: this.formClick, onSubmit: this.submitForm}, 
        React.DOM.input({style: input, 
          type: "text", className: "form-control input-sm", 
          disabled: this.state.submitted, 
          onChange: this.handleChange, 
          value: this.state.value, 
          placeholder: this.props.formText}), 
        React.DOM.button({type: "submit", className: btn, 
          style: single}, 
          React.DOM.i({className: "fa fa-check"}))
      )
    )
  },

  profileSearch: function(e) {
    e.preventDefault()
    url = "http://www.google.com/#q="
    prospect = this.state.prospect
    name = (prospect.name != "LinkedIn Member") ? prospect.name : ""
    args = '-inurl:"/dir/" -inurl:"/find/" -inurl:"/updates"'
    if(name == "" && prospect.company_name != "not_found")
      linkedin = '"at '+prospect.company_name+'" site:linkedin.com '+args
    else
      linkedin = " site:linkedin.com/in/ OR site:linkedin.com/pub/ -site:linkedin.com/pub/dir/"
    window.open(url+name+" "+prospect.company_name+" "+prospect.pos+linkedin)
  },

  websiteSearch: function(e) {
    e.preventDefault()
    url = "http://www.google.com/#q="
    window.open(url+this.state.prospect.company_name+" site:linkedin.com/company")
  },

  _make_email: function(name, pattern) {
    name = name.trim()
    vars = {
      first_name: _.first(name.split(' ')),
      last_name: _.last(name.split(' ')),
      first_initial: _.first(name.split(' '))[0],
      last_initial: _.last(name.split(' '))[0],
      domain: prospect.company.domain
    }
    pattern = (pattern) ? pattern[0].pattern : ""
    prospect_email = Mustache.render(pattern, vars).toLowerCase()
    //console.debug('PROSPECT EMAIL')
    //console.debug(prospect_email)
    return ReadOnlyForm({icon: "envelope", value: prospect_email})

    if(prospect_email) {
        prospect_email = (prospect_email) ? prospect_email.toLowerCase() : ""
        prospect_email = React.DOM.input({onClick: this.emailInputClick, type: "text", value: prospect_email, className: "form-control form-sm", style: {fontSize:12, width:160, height:22, marginTop: 0}})
        prospect_email = React.DOM.div({className: "input-group input-group-xs"}, 
          React.DOM.span({className: "input-group-addon", id: "sizing-addon3", style: {paddingTop:2,paddingBottom:2}}, 
            React.DOM.i({className: "fa fa-envelope"})
          ), 
          prospect_email
        )
    }
    return email
  },
})

var ReadOnlyForm = React.createClass({displayName: 'ReadOnlyForm',
  render: function() {
    style = {fontSize:12, width:'70%', height:22, marginTop: 0, zIndex:1,cursor:'default'}

    style.fontStyle = (this.props.disabled) ? 'italic' : ''
    return (
      React.DOM.div({className: "input-group input-group-xs", style: {display:'inline-block'}}, 
        React.DOM.span({className: "input-group-addon", id: "sizing-addon3", 
          style: {paddingTop:2,paddingBottom:2,display:'inline-block',
                  height:22,width:37,float:'left',marginTop:0}}, 
          React.DOM.i({className: "fa fa-"+this.props.icon})
        ), 
          React.DOM.input({disabled: this.props.disabled, onClick: this.emailInputClick, type: "text", value: this.props.value, className: "form-control form-sm", style: style})
      )
    )
  },
  emailInputClick: function(e) {
    e.stopPropagation()
  }
})

var LoadingLabel = React.createClass({displayName: 'LoadingLabel',
  render: function() {
    return (
        React.DOM.label({className: "label label-primary", style: {backgroundColor: 'rgb(0, 122, 265)'}}, "Loading...")
    )
  }   
})

var WarningLabel = React.createClass({displayName: 'WarningLabel',
  render: function() {
    return (
        React.DOM.label({className: "label label-warning", style: {display:'block',width:'90%'}}, "Warning...")
    )
  }   
})

var ShinyButton = React.createClass({displayName: 'ShinyButton',
  openLink: function(e) {
    e.stopPropagation()
    window.open(this.props.link)
  },

  render: function() {
    return (
      React.DOM.a({href: "javascript:", 
         onClick: this.openLink, 
         className: "btn btn-xs btn-primary btn-gradient", 
         style: {marginLeft:-5, float:'right'}}, 
       React.DOM.i({className: "fa fa-globe"})
      )
    )
  }
})

var LoadingPulse = React.createClass({displayName: 'LoadingPulse',
  render: function() {
    return (
      React.DOM.div({className: "profile-loading", style: {marginTop:0}}, 
        React.DOM.div({className: "double-bounce1", style: {backgroundColor:'rgb(0, 122, 265)'}}), 
        React.DOM.div({className: "double-bounce2", style: {backgroundColor:'rgb(0, 122, 265)'}})
      )
    )
  }
})

},{"./horizantal_spinner.js.min.js":27,"./loading_spinner.js.min.js":32}],65:[function(require,module,exports){
/** @jsx React.DOM */

module.exports = React.createClass({displayName: 'exports',
  checkboxAction: function(e) {
    checkboxVal = $(e.target).is(':checked')
    checkboxes = _.rest($('body').find('input[type="checkbox"]'))
    console.log(checkboxes)
    if(checkboxVal){
      _.map(checkboxes, function(checkbox){
        if(!$(checkbox).prop('checked'))
          $(checkbox).click()
      })
      
    } else {
      _.map(checkboxes, function(checkbox){
        if($(checkbox).prop('checked'))
          $(checkbox).click()
      })
    }
  },

  componentDidMount: function() {

  },

  render: function() {
    return (
            React.DOM.tr(null, 
              React.DOM.th({style: {paddingLeft:11}}, 
                React.DOM.input({type: "checkbox", onChange: this.checkboxAction})
              ), 
              React.DOM.th({style: {width:20}}), 
              React.DOM.th(null), 
              React.DOM.th(null, "Name"), 
              React.DOM.th(null, "Company"), 
              React.DOM.th({style: {width:'170px'}}, "City"), 
              React.DOM.th({style: {width:300}}, "Email"), 
              React.DOM.th(null, " ")
            )
    );
  }
});

},{}],66:[function(require,module,exports){
/** @jsx React.DOM */
//TODO - move list
//TODO - copy list
//TODO - create new list

module.exports = React.createClass({displayName: 'exports',
  //SideMenuListOption
  getInitialState: function() {
    return {
      count: '~',
    }
  },


  componentDidMount: function() {
  },

  changeList: function() {
    this.props.changeList(this.props.list.name, this.props.list.objectId)
  },

  getIconType: function(iconType) {
    icon = ""
    if(iconType == "archive"){
      icon = React.DOM.i({className: "fa fa-archive", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "users"){
      icon = React.DOM.i({className: "fa fa-user", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "wifi"){
      icon = React.DOM.i({className: "fa fa-wifi", style: {float:'left',lineHeight:1.5,marginRight:5}})
    } else if(iconType == "cloudDownload"){
      icon = React.DOM.i({className: "fa fa-cloud-download", style: {float:'left',lineHeight:1.5,marginRight:5}})
    }
    return icon
  },

  render: function() {
    listName = this.props.list.name
    propsCount = this.props.count
    count = (typeof(propsCount)== "undefined") ? this.state.count : propsCount

    icon = ""
    listStyle=(icon == "") ? "list-name" : "icon-list-name"
    if(this.props.iconType == "users")
      listStyle = "all-list-name" 
    count = React.DOM.div({className: "badge badge-default cnt-bg"}, this.props.list.count)
    count = (this.props.hideCount) ? "" : count
    return (
      React.DOM.button({type: "button", 
              onClick: this.changeList, 
              className: "list-names btn btn-default"}, 
              icon, "   ", React.DOM.span({className: listStyle}, listName), " ", count
      )
    );
  }
});


},{}],67:[function(require,module,exports){
module.exports = function () {
  return {"0":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/8353a3fc05724cbe45e8c23b347a39e7_0994d458faff1d0b71f0f8e534299335a5765ba4a672ed817669729f6a0a1e9d","1":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/107fc2691bb8b3333ba78a18600fa561_9a832b2e27c2aa8ce6ed12c62fb665939e4de38f30ec9bebd92f813ea677f8c3","2":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4432a5df98c5ead32ca3ec898e175c90_f93ef0a7ddba9ac960c6a15941a69a124a5d5961fde34455cb7cee6c97f712ba","3":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/229580b716606a4eb2142b1eaaca10e7_2398d5050e191d15ff5cf9eb68cc683690c06d3949345dbf790394437a465c08","4":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/499d8a863d7872d6e239512124af9ddc_771182dc7b6c0801de6e571deed89b437ab122372b547e1f7d8dacae9cb17275","5":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a9e97a6445a8ac187561310b16b4bbd8_96ce9289fd8e6f2a6bf262b4baf548367ad7f53aac9a9ec1157020465de07e67","6":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/35af508daa4a580806961236bfb743a1_1a4afe2656f8d95e3717751f96a0c6ce6c5b1d25920f4d45e5cfe9bba05de0c8","7":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a1003503ef5e2254e6694eebbd2b4499_a8cd2caefe691476e3f02351369dc2c07c1a3d6ce0f87b187f58fdf4b20292c5","8":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/01dcb5278f55225b7e9c0cff6aa3d6e6_b40f92b9c5ef3b8c81d478bb70b7a094f076ed59b7d36d7a6401f0fd9d95eacf","9":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/61d79e3c25105099f73668c625ea361c_1d7c1255968258c03d0564e141284b4bddbd2db52091cf8d75cb384b23949390","10":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ca808450a6222c9b09d5b86924a08fbb_f90e02c1e981e5f6caf8af76fefef7653d0a451da51ba5a22ac0f265874bc6cb","11":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/97de93a99b8a9159dede2b9ff17c7887_3e90df8e7894c0c12963abf2fadb205e44365f58b537f15b677a4a7e9c557bcd","12":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9bf8404d673c9d6178f23548caa4c9a4_46606dba9df4d10cf282fa7add23e8a87b7f976d0e3a153fad0ff181e1be4e17","13":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/7f3a4754a634fc1e39090c5dd6c46808_42d3294b34c4ac9c6f99f66bc3ad9a195d20e98b09c7579fe341d0cf42f9c93f","14":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b4bebbfbfbe47e50f435b4c2efe0db0f_181a3119f12fd03b6bb517352c636508497bec61f9078b0e281515efd192b345","15":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ec1f6190e2b9a80a3f7cf101649ccc63_0026017f4380585a2e540f05936a6f58fe725fe7e8e0378aae98039628c4bdf2","16":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9dd921f41fa8d4ab29bcc1c45348b5a2_158df8a22c1f1570e8a2c17ab5e30169248030593665fbd8792f5f2f01516290","17":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b9786c9b56c94caa13e74d59b9a9da48_1f195fbcdf95c0d2618d571e0192ff1be2e4921d88aed8b7b9fd9e1444749271","18":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aa8577f878858f318858aced5abd037f_cb926a07d0e468660e3569279cc1354aa7243cdc951f970325273993c89e9ee7","19":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c11b322d8a8007037ee3e3242b260930_2a63c13b315a38b069f38da657b189aad6c7af5941a19859111dfb3c70c94b41","20":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/19b6c3989a808be845718d8af24352ff_a8e72abb2b5772706ac1c79e5cbaf59b3c2f20efb0aca9b93d04ae8a24920967","21":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/f4120970a686a56b4759585808177cc7_8e175e495b1de922ccd9a92a5de97b95433444aca422b3e632c2ea4ed48d3bc9","22":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aee7e40b2dd4c4c9961323d98249c826_c1c387c714e89d5dfccf06d3fe0fed332992eff877cdbd60bc4e94e7a2ed38ff","23":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/66d18bafff4f9b8d077c107bb73b2912_f8055289eae58fad00cc0f6727b2b5cf0f72b837963351b7ca6250ba4e2632a1","24":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2da8546c3b6a99b191249ae69207e31a_db86681331d0d2b9850e5596ce7711ac386f4e1469c526934267978af3498338","25":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/5617f7787cdf0176e54c4f13e9ccc54e_da7cc169f46585de72acf5f705cd34a52c688a40dc8aa72ea720d556a7022f72","26":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/f7e2712aa8cfab88c55d1f6c78ef2e45_5c895ca06f40e30369e07b19c64b7bf1fe5be0977e5bbfc0c2212b73ea6e6512","27":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/29ab72c2b97b25c4e3e1c280e3264f80_069b94caad3b14e2bb3b2012a51d94ed8e476f0a3d9a368aac36db9d716a12af","28":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ee17a7d90c8065a3abcd0a6720b52e66_3b9938c2693e142ba37065de24dabec556a192add4b84b4f29785cea3b74853f","29":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/16f61ebf1810ac333f7c936ce711b28a_35d43f3d1c762b21d629634b4584d0cd95aecdfd9a3087f24a9eb729d134b769","30":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/e318ccc5121cfeb3b99c21d055e6ece9_edc606d4bcd3d76f8e45da96d9dbd651bf0c067a7ca159e1073e3b44b03530c9","31":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/df9c90f2b93a9e488d94fe52725bd798_3b0e3396d9dea866960d8ce6f67af10c8809f154b6831fc278b8ed34390a9f27","32":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6eee357d121c814a97b6362c4e55526a_cbff4ac439c2054813dea8da8b8f1ec3b5e0c644acf0dc2ae625741e97f0bea0","33":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/560aed1bee8e220f0980190dedb7add6_9ad2de7c6ebfdd724f2a17c85efd5192f8393a477dddf0a0c8c9260e17d5a515","34":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/850f1242ddd6539ad8b27f69908c7f9e_08ffecd2b6d184e7d70ab70abbbbabe7132269250c93dbbdcba7f22e86f0692e","35":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/075c06c481eea429f6cc816697fcbbf8_c55b99be050bdcb1f32c9578cb8e17f6f4d6f200c1f37f528c24fee65a26182a","36":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/028b3110aa60554e7434f1a2473229cf_d15e1c7f00c82755e144773d46bb4e0e964fcfa425a254ca05ac1313fcea3bae","37":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c3719f85d24bafef64eada64e735ca73_025880c51ff42bd3ff79ba35d456d8cb14b6fbc7ee17ba3b98612e71aa1d74b9","38":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/22356ab6ae4467c44a074a4134bad937_a9909c37e6e23b4343ce19582c9118cfb3748b8977f1db8230aa992d640f1217","39":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2132e5a2fcd89a54e7c42c5fa0b8ef77_ff0dc46511b150a4b0af9cdf866af2e06ce898d7119b7ab21350e0b3304d8065","40":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/45aaa73b693aeec414b34fd44262ef8f_51c22532abe0b615f0e6e3c0e91cb1a9bca41a6f6c0ec6f33c3693d128fd1755","41":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/57bc2d1a2ab692e38284f3550f58b381_03bd441172001e3c2e5084f3390ee0ca0327b502b0c1dc794c8c8ac2b3d2130e","42":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4745ad07807ccad97e0726fc7ba18170_48911a727474c0398c3fc701880d623faedc592f16677310f8e8111a25e2be37","43":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cd1594c62a31c831d124e286b6909700_0cd9d060392c5f5d575f29a8930c55c69a54501c1d7636929682c38e4e069d5e","44":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f3db7712313a3bcfe5ff4a99b67fcdf_a66bec0a43179531bce8020aaade3d85967b7c9df54ab2bdf41f12f6cd60d3ef","45":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2643e008752dbffd17cd7e4cea30bb08_867fd9b76c5342b914bd9b285756ac10cf04e1b3ad8cb6524a2c96d7ab75c07a","46":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d89fd2959f9efdcf70778801253a4920_97a906684f843e8ea3f3237797adc601c4d20dfcc79e7b6e756630206312fe89","47":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d0b7922821c73bb34357b9a7bbf2267c_d63a4e4655665268ea92da08063c95f309646f9698125b318b0621487b906ca4","48":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b76f8da9538eea9eb4d897656f4aed8b_f49ffb97513493d056f42fe316650f1fb507fc1ebe7a04ad8454fd2b58c50ea7","49":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/190285c653fe1d18db3257eeaf4be43b_60aac5615b8c09ff3cfc840eafbb0208a8dc4824d942df10637ed1dc43198896","50":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/bdee1144909768544fb2165d5e053e65_01eeb0b68fbe038b33bd0d952ce60590b2ff52c32da32bceee518652a89e8140","51":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/67f3816ffae3f72be42a7853607ff545_9b77f7ee9ed399fe77664a0c6cded309a14187ed325b7dace9b74f58d384fa70","52":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4314b6591ccecaa3eb265e4e890021f5_135f42ac525c7160c6680d99d08463cca4f4f86b4a0a11252b26c57f7f6552e2","53":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dc2498a2210f5c8dfc938909670ba68f_bb4edb324aeb76f4809d2f2ffef036815497400fd276f836d923e7e0999c3552","54":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/8ea2f8aecb65bcc3cec691be061822a6_c9e8cc4ff670def26a2014b4658f561bb39af755727ab31a04b66c703faa6bfc","55":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cc6220508d6b50993e8cb49e6c072a3a_266d57d40828595dcf9964076955242cbc6d9cdc78bbc323ba39f0883c05fda8","56":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6d200ee39f4096f49b523d98d8536b03_0e0d1927f658b14ff35a24c9d8fc693190c9f739a6d14b3638a69e901b1a494c","57":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/deaf0d4d4431d6bb2dcc6bda12575dc8_786be7e8e3573170e142d1c3974f18d6d69d4c4dd3ca06593467f2f53f831895","58":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ebf339b29639355c01a7e1d0c9055ba3_0c2c6354af58c71eee179f772b8f9c9556111c042eddec488642205fce901f6a","59":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/adf758a8dc032239d05c2bf30a4a0edf_1de695275aaf84c5d9624872efacc21f2bb35d76907c032789f0a8a91007a751","60":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/fcfd73b6e3eb5a9e249b379a6f559fc7_7f12feeefb777c52da2c175bfc33dd19db40749b388af435f4a68c0f06b4f9ad","61":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3c82d08bca770099bb1fcdbda21484ea_4b1b1a31571711440446327a37327cf86685307f7dd58ad26a5b564b384d54c9","62":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/da085ddf61fabfc523a6d5bc22ea305b_f198dc476413ae524e230ebcd428f4649509a64794bb12dfde0d8fc2d9cf8782","63":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/510c57ac818d053701321d16cfed8b3e_74210d99aa6597b227fe521b0c7e128b66510da6b2cfbd67f4d0d0f8be7a1c12","64":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/40122334960a5954255cca87d01ba5ae_1d6fa7ab07a15df79e4c61cec5a369e6e7dcc7e57ebfd52fd937630e056dbf32","65":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/281bc010da64604545531ca4074eda2e_91c47782e1e7e19e58d3d5da9e43c1c53505a145de4adcd22931721f951edced","66":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f0306ac15f2a11707fb6637b64ab5bc_bbf75d7a31aff638916b154d263b2fa1af9f3f53ef3124e5d470289b1b4dc5c4","67":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/99147b426f02ea63f52d7b9096bfba95_2af91854e89a8214667222ea871d98eb8c1ccaf4969ec129356be0fce2eeca51","68":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ecebb17e5ca23da7f420fa357472bf3e_9dcc92e6966d688c956e1e6a0abf42499687f9e82b82a2499d56bb93a59b2bd8","69":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/aa968d512815321b5c74af48f3d53c3d_74f7b92a66f45f8e050a46f94cb675db7fc257acefed7ced6fe85a82caa93139","70":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/2451efa39cb6ee7576b41e14b907925a_f48ec903ab22812a385743625e972e76773bdbd3e323c73689f27eccaa9d90bc","71":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6eca5c460748018fe91f919d35f1de02_2116d7e9c833021c7fb58237db1e8abd3e37a32f652e5449feb94cd287ca63cd","72":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d233d65df2a27b4e6c177ab37f726c33_cea7dbcb7770a9798a49fce3a8d55689c6b79ad710e8f3aa0121bcabd9b0176b","73":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/0632159435e67bdd2a5ffd68471361f0_b7711b96d49bfe07ba4c6a9700618c69425c667999209ccbd7575925805b0b5b","74":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1f6edebd5597bae7da63e7ad86214ccd_0bcc5ee18a9539043524fdad5d9cbdb527514143e755a1a05169e05e06c37941","75":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/31874c12d9df2dfd89cb6a446bdc4042_611644e0e6bd66f29270be999af5d4aee37a5898d93dd41c46dee111f4e63fa3","76":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95bad31c8127deef8aef7a8c0d96285f_05b558b86db9ed61bdb134e7e32e56ddea960d18067c4d44cb7b207ceb592e5b","77":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/e1a21b6a465ba8c05aec97fa7568efb5_888ab8ab424a32a58b00808ca2f716b903993a7d076b4925c52117a2467ff04b","78":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d8c25b3ed91a8fc91f93ac56377c9dcc_72afd96cb39f5d07ea286361edb264627d1f234e871ce48371dca57bc44c7a82","79":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95b193e0db0f8965de5c70a5b96bb071_4b587a38a5b3b5f2eb6ad37d745531e723edc07e38eb6d4cfec3a9386f65b1e8","80":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/90b3da7e62bbd996b722975a3230f0f3_b3e89ebe3a0f9d1a6508771e1108627885b5df79377b291413a35284cc506f5e","81":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3242156353c906577e9ea40f92139719_76cb67bcb821ef4a83b4796832b15d3ab4402627534de36c3ff592ba0e0cacb0","82":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a4beb634fb972ef9caefecf47527e345_a18d6851882d03d4370fa12c866fcd91caa907b0cd2263a722378c399fb592b5","83":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/0447cd25e4515569c3b613bc4bd88a05_c3656ddbbf5dfc84e44c3616cfad41267c8d730e00db5918ccc77573fac07d49","84":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1e01a4ecbeb9ca46a63b745c6a2e462d_3ebbbab14df0e2db43a2948c0298ad67ded53029efe9aba6bd40b3fd99d5aa18","85":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/559c502aea7aab4a11e121743c9d7c43_69caccfee49f747e72a4768ad4274c8b6875848e9ab7b2c8517e209d36bdfb32","86":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b27a3afa95d849b7375a304769bd3bf3_acada7bbca2083ce55ab119e88666ca0ae10a4aac448ad5d7f45edf0077897a1","87":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/de24ae6e6b531bad57c37bffcac1954d_2c15f3da3593c9526078bb80bc7faa66ec081b1ccaea231b5c259bdb827f6fd8","88":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/7375a308c764e405f92ab9d943942949_6b7b392f5694abcfbb70daf458c22369db2f9b890583e3e2d713b046cd84ec89","89":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/a1fc8b4cb5e89f1dc3ed74ec8bafc3a5_4d0efc716f3f2cb7bda689e5daa7ba5d954ee54a8f94f7755b303043970b1d99","90":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c4f7d2b628c661d1baad6ff1f4722da8_149e2b6f3ad488d10fce67144ccee6b66519d9d7f8482a1ff0c9ae627f1ddbca","91":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/09459647f3928e77752449f418a85c27_7a704f8cfaea62a1953dfd1e345eb6e3aee02114189f186f0181bff3a7e77fe6","92":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/655a7db862ccdfa162b6ea0dffa3ef1e_6eb133e705878e640a427b664656189f1ea9330285133e4a73a943a097606da6","93":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/434d82b430279d26bcdd9bd13ddec76f_5cbad7d7eb6740debc9e2e3c1b7197f861b705e6e74379307a5bc900d75250f5","94":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/142e64b0535a2b0c3bb5253c0d2266a9_6c7403cda6f8dc61eb9d2b32d37f608c34c641101d6a2f35c073907898a7e4ae","95":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/3f8790f1134f0514af3d2bbc05209060_6377e5dcdf0d232f1aa8139022b8c9280f8b4297f70efff3e0f7d52417c1eb23","96":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/220a705290eb7adbcdf052ddb2d11c99_06374d8546d5c745671d98686f1b4b0dd31d777b1c7bcdd0e6dfe63d0a23e719","97":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/51249bb6f506e42e17bf9241ef88b6b2_c1221205f854390df1d21aa05e5d0de264b1b953c659a10c18478cfd7f755efd","98":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/284c00b5ff1189d2bddf67df408edc4e_01c1917a244fcadf0bfd3933af21c684dd90ca274111248212025361d855ab39","99":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/37483ffe36725e05af0954a5d9a55a26_daf0a2f0e10c98c2b72be9c0da24b38322f0f956733a42565365ee615568ba07","100":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c6b03531fed44f96acecab26828fbe37_30393b6fa3096a74bfa51cad1cb58f7660848263f01f2f7d2e12dae3a5b1c3ed","101":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/5dc9345ee6092ca006f777b42b34e853_df13ad7c61407d1a00e261fcd5fcd93c16e1a0c1be13d0903d76a21a89cd3459","102":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/1dbef9840938d5e30563c3f844b9ebac_12fe10df66a6ee48bffe72578a6f42d340ff0b4f75d4fe65f6bed2b75841e978","103":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c3af292a916339e6c57ba0d03712a445_273c38be422269a46466d48494c513daf53b3a66440b6401c94c37f1e55070c2","104":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b44ded0b090097528af2c4ad694c2a40_3f5ed56c662da89e1e0f3ae62a67f9e14ea2384f2985277b1cdfa6ebfe1d18c9","105":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/df8ea86906de307c52cb9cf3b2228043_312bdbd9536ec36e42d8328def8af1afcaaf3f705917a628ea4add00ba77b8b5","106":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6846f61d6bfcf77aecd7206c6adb5be9_64e149247e52e86b671fdd2b71ac27852d54ae6eb6f4059458bdb1161f300dac","107":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/ef4a1765911453dcae8e4bdd5d3203a1_321cf3bc8710a6a19576dfe93677def4666da0b4744489c26aa44f75a753333e","108":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dc381f9e0b6193e8be5d94595ed1c4b7_d612afde7baf43ac5daeae9e0efe42781867bc3451e3e8814253cbfc4410bb4a","109":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9579d5dd8523c493e0590e3881e25041_106c39b7e97fdd57abb992ec7ff7c0f0b15f0f83a348e3a3698e3fcbdcdf2836","110":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/95cfda0cb7bfaac0fc789cf05c7e513e_a509049aea02886eb409c53a15e03a6cf5eb6583120267bbca75c2206027c0b1","111":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/6e05daaab9a81a2ea5348b70833bdfb6_023eb1e947686aef7764a3ce4c9683b47d2235c51a031e36b947e4398ef6906d","112":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/d29d4fcb1b25a9d424a12800869a3b65_991d563880a3345073ebb4cc3cd57778ef5cfbc3ae625cefec2ffc3b690a5aa5","113":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/983764cb5075eedbd96ec034df1374a1_a94f5a1f0c9b45b9082044ebe72774b0313a58e5a2f58d00a63827ad7d48bb62","114":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/9abafed7a919fe54046abe458a6b3140_4003c5226083b7beb7b5901c79027e3833be0aec78da9aa3fc05f0293f5bb43e","115":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4268a231e34c78a807bd51c7d5e1064e_a9049cfd9cbbb250474c1364710dcd276e1896297b2dee37b6ffad96a882bda9","116":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/b80be54bf0fbb43ebd8a20dca4d8f6f0_544d5a34e1d959e4e7794c58503b3478de33eb4ef21e8b74839b950adda7dedd","117":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/4ce28371de65a22a241dee28128dda4d_0daec6dffe6bd726f3031d51a39728c4f88f48482ebbae6c05f758ca24dd0890","118":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c55284b8098cbaa9a1db08cbdf46bae8_6baa7acefb038acbb2fedbfdce556766c48349c5d13374347a26bd83e2acf283","119":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/dd77cf42f690e808bb9d8131b7cec48b_0b3713716d1127b36eb335737778cca3d4b7b476a99a571a11dc118e71463d2b","120":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/c657e3f25ab9ae85a99e421231a6c6a8_06deb81cfec70dbd14da6bb6471b8ee4bcc142ee08b60714af9f91683b461e6a","121":"https:\/\/d2ojpxxtu63wzl.cloudfront.net\/static\/cd4fc426707d63e4d9b8bc9205dea3fc_cb648ffe70ec0942be80f294a1a07c5e64958570265b70cfd84da78072877fe7"}
}

},{}],68:[function(require,module,exports){
(function(window, document, undefined) {

    'use strict';

    //= helpers.js

    /**
     * Constructor
     */
    var Headhesive = function (elem, options) {

        // Return if feature test fails
        if (! ('querySelector' in document && 'addEventListener' in window) ) {
            return;
        }

        // Initial state
        this.visible = false;

        // Options
        this.options = {
            offset: 300,
            classes: {
                clone:    'headhesive',
                stick:   'headhesive--stick',
                unstick: 'headhesive--unstick'
            },
            throttle: 250,
            onInit: function() {},
            onStick: function() {},
            onUnstick: function() {},
            onDestroy: function() {},
        };

        // Get elem, check if string, if not assume object passed in
        this.elem = (typeof elem === 'string') ? document.querySelector(elem) : elem;

        // Merge user options with default options
        this.options = _mergeObj(this.options, options);

        // Self init
        this.init();
    };


    /**
     * Headhesive prototype methods
     */
    Headhesive.prototype = {

        constructor: Headhesive,

        /**
         * Initialise Headhesive
         */
        init: function() {

            // Clone element
            this.clonedElem = this.elem.cloneNode(true);
            this.clonedElem.className += ' ' + this.options.classes.clone;
            document.body.insertBefore(this.clonedElem, document.body.firstChild);

            // Determin offset value
            if (typeof this.options.offset === 'number') {
                this.scrollOffset = this.options.offset;

            } else if (typeof this.options.offset === 'string') {
                this.scrollOffset = _getElemY(document.querySelector(this.options.offset));

            } else {
                throw new Error('Invalid offset: ' + this.options.offset);
            }

            // Throttled scroll
            this._throttleUpdate = _throttle(this.update.bind(this), this.options.throttle);

            window.addEventListener('scroll', this._throttleUpdate, false);
            this.options.onInit.call(this);
        },

        /**
         * Clean up DOM and remove events
         */
        destroy: function() {
            document.body.removeChild(this.clonedElem);
            window.removeEventListener('scroll', this._throttleUpdate);
            this.options.onDestroy.call(this);
        },

        /**
         * Logic for sticking element
         */
        stick: function() {
            if (!this.visible) {
                this.clonedElem.className = this.clonedElem.className.replace(new RegExp('(^|\\s)*' + this.options.classes.unstick + '(\\s|$)*', 'g'), '');
                this.clonedElem.className += ' ' + this.options.classes.stick;
                this.visible = true;
                this.options.onStick.call(this);
            }
        },

        /**
         * Logic for unsticking element
         */
        unstick: function() {
            if (this.visible) {
                this.clonedElem.className = this.clonedElem.className.replace(new RegExp('(^|\\s)*' + this.options.classes.stick + '(\\s|$)*', 'g'), '');
                this.clonedElem.className += ' ' + this.options.classes.unstick;
                this.visible = false;
                this.options.onUnstick.call(this);
            }
        },

        /**
         * Update status of elem
         */
        update: function() {
            if (_getScrollY() > this.scrollOffset) {
                this.stick();
            } else {
                this.unstick();
            }
        },

    };

    window.Headhesive = Headhesive;

}(window, document));

},{}],69:[function(require,module,exports){
/* mousetrap v1.4.6 craig.is/killing/mice */
(function(J,r,f){function s(a,b,d){a.addEventListener?a.addEventListener(b,d,!1):a.attachEvent("on"+b,d)}function A(a){if("keypress"==a.type){var b=String.fromCharCode(a.which);a.shiftKey||(b=b.toLowerCase());return b}return h[a.which]?h[a.which]:B[a.which]?B[a.which]:String.fromCharCode(a.which).toLowerCase()}function t(a){a=a||{};var b=!1,d;for(d in n)a[d]?b=!0:n[d]=0;b||(u=!1)}function C(a,b,d,c,e,v){var g,k,f=[],h=d.type;if(!l[a])return[];"keyup"==h&&w(a)&&(b=[a]);for(g=0;g<l[a].length;++g)if(k=
l[a][g],!(!c&&k.seq&&n[k.seq]!=k.level||h!=k.action||("keypress"!=h||d.metaKey||d.ctrlKey)&&b.sort().join(",")!==k.modifiers.sort().join(","))){var m=c&&k.seq==c&&k.level==v;(!c&&k.combo==e||m)&&l[a].splice(g,1);f.push(k)}return f}function K(a){var b=[];a.shiftKey&&b.push("shift");a.altKey&&b.push("alt");a.ctrlKey&&b.push("ctrl");a.metaKey&&b.push("meta");return b}function x(a,b,d,c){m.stopCallback(b,b.target||b.srcElement,d,c)||!1!==a(b,d)||(b.preventDefault?b.preventDefault():b.returnValue=!1,b.stopPropagation?
b.stopPropagation():b.cancelBubble=!0)}function y(a){"number"!==typeof a.which&&(a.which=a.keyCode);var b=A(a);b&&("keyup"==a.type&&z===b?z=!1:m.handleKey(b,K(a),a))}function w(a){return"shift"==a||"ctrl"==a||"alt"==a||"meta"==a}function L(a,b,d,c){function e(b){return function(){u=b;++n[a];clearTimeout(D);D=setTimeout(t,1E3)}}function v(b){x(d,b,a);"keyup"!==c&&(z=A(b));setTimeout(t,10)}for(var g=n[a]=0;g<b.length;++g){var f=g+1===b.length?v:e(c||E(b[g+1]).action);F(b[g],f,c,a,g)}}function E(a,b){var d,
c,e,f=[];d="+"===a?["+"]:a.split("+");for(e=0;e<d.length;++e)c=d[e],G[c]&&(c=G[c]),b&&"keypress"!=b&&H[c]&&(c=H[c],f.push("shift")),w(c)&&f.push(c);d=c;e=b;if(!e){if(!p){p={};for(var g in h)95<g&&112>g||h.hasOwnProperty(g)&&(p[h[g]]=g)}e=p[d]?"keydown":"keypress"}"keypress"==e&&f.length&&(e="keydown");return{key:c,modifiers:f,action:e}}function F(a,b,d,c,e){q[a+":"+d]=b;a=a.replace(/\s+/g," ");var f=a.split(" ");1<f.length?L(a,f,b,d):(d=E(a,d),l[d.key]=l[d.key]||[],C(d.key,d.modifiers,{type:d.action},
c,a,e),l[d.key][c?"unshift":"push"]({callback:b,modifiers:d.modifiers,action:d.action,seq:c,level:e,combo:a}))}var h={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},B={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},H={"~":"`","!":"1",
"@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},G={option:"alt",command:"meta","return":"enter",escape:"esc",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},p,l={},q={},n={},D,z=!1,I=!1,u=!1;for(f=1;20>f;++f)h[111+f]="f"+f;for(f=0;9>=f;++f)h[f+96]=f;s(r,"keypress",y);s(r,"keydown",y);s(r,"keyup",y);var m={bind:function(a,b,d){a=a instanceof Array?a:[a];for(var c=0;c<a.length;++c)F(a[c],b,d);return this},
unbind:function(a,b){return m.bind(a,function(){},b)},trigger:function(a,b){if(q[a+":"+b])q[a+":"+b]({},a);return this},reset:function(){l={};q={};return this},stopCallback:function(a,b){return-1<(" "+b.className+" ").indexOf(" mousetrap ")?!1:"INPUT"==b.tagName||"SELECT"==b.tagName||"TEXTAREA"==b.tagName||b.isContentEditable},handleKey:function(a,b,d){var c=C(a,b,d),e;b={};var f=0,g=!1;for(e=0;e<c.length;++e)c[e].seq&&(f=Math.max(f,c[e].level));for(e=0;e<c.length;++e)c[e].seq?c[e].level==f&&(g=!0,
b[c[e].seq]=1,x(c[e].callback,d,c[e].combo,c[e].seq)):g||x(c[e].callback,d,c[e].combo);c="keypress"==d.type&&I;d.type!=u||w(a)||c||t(b);I=g&&"keydown"==d.type}};J.Mousetrap=m;"function"===typeof define&&define.amd&&define(m)})(window,document);

},{}]},{},[2])
//# sourceMappingURL=data:application/json;base64,
